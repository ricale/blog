{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2023-230105-read-writings-index-mdx-2ae86949dd620998df9f.js","mappings":"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","sources":["webpack://ricalelog/./posts/2023/230105-read-writings/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    ol: \"ol\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"React\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://www.joshwcomeau.com/css/css-variables-for-react-devs/\"\n  }, \"CSS Variables for React Devs\")), \"\\n\", React.createElement(_components.p, null, \"React 와 CSS-in-JS 를 사용하면서 CSS variable 을 쓰는 것에 대한 장단점을 설명하는 글.\"), \"\\n\", React.createElement(_components.p, null, \"장점\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"자바스크립트 변수로 css 값을 지정하는 것 (예를 들면 styled-components 의 theme 기능을 사용하는 것) 보다 좀 더 선언적이고 가독성 있는 코드가 가능하다.\"), \"\\n\", React.createElement(_components.li, null, \"media query 적용 및 관리에 있어 더 유리하다.\"), \"\\n\", React.createElement(_components.li, null, \"CSS-in-JS 로 해결이 어려운 이슈들을 해결할 수 있다\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"좀 더 다양한 애니메이션을 쉽게 적용할 수 있다\"), \"\\n\", React.createElement(_components.li, null, \"Dark Mode 깜빡임 현상을 해결할 수 있다\\n단점\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"타입 지정이 안 된다 (= IDE 자동완성 기능을 쓸 수 없다)\"), \"\\n\", React.createElement(_components.li, null, \"특정 상황에서 (자바스크립트로 값을 지정하는 것보다) 덜 유연하다\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"평소에 생각해보지 않은 흥미로운 관점이다. 본문 글이 보다 상세하고 예제 코드들도 포함하고 있으니, 흥미롭다면 본문을 읽어보자.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://dev.to/itshugo/applying-design-patterns-in-react-strategy-pattern-enn\"\n  }, \"Applying Design Patterns in React: Strategy Pattern\")), \"\\n\", React.createElement(_components.p, null, \"React 컴포넌트를 구현할 때, 디자인 패턴 중 하나인 \\\"전략 패턴\\\"을 언제 적용하면 좋을지 예제 코드와 함께 설명한다.\"), \"\\n\", React.createElement(_components.p, null, \"이런 글을 볼 때마다 느끼는 건\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"“디자인 패턴“이라고 하지만 코드 자체가 특별히 색다르거나 훌륭하지 않다. 나도 이미 비슷한 형태로 구현한 적이 꽤 있을 것 같다. (실제로 그런 경우가 많다)\"), \"\\n\", React.createElement(_components.li, null, \"하지만 그런 평범한 것을 규칙으로서 혹은 패턴으로서 접하게 되면 좀 더 기억에 잘 남는다.\"), \"\\n\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"앞으로 비슷한 상황이 생기면 적용해보고 싶다.\"), \"\\n\", React.createElement(_components.li, null, \"(혹은) “아 이건 이래서 별로야 저래서 별로야” 하고 비판적으로 받아들이고 자신이 알고 있는 더 좋은/적절한 패턴을 다시 찾아보게 된다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"라는 것이다. 그런 의미에서 읽어볼만한 글이다. 글이 길지도 않아서 읽기 좋다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://thenewstack.io/how-to-use-google-sheets-as-a-database-with-react-and-ssr\"\n  }, \"How to Use Google Sheets as a Database with React and Serverless\")), \"\\n\", React.createElement(_components.p, null, \"구글 스프래드시트를 Serverless DB 처럼 활용해, Next.js 와 Gatsby 로 웹앱을 만드는 것에 관한 글. 글에 포함된 예제는 투표 기능을 구현했다.\"), \"\\n\", React.createElement(_components.p, null, \"데이터가 시트에 저장되기 때문에 별도의 대시보드를 만들지 않고도 비개발자(기획자, 마케터 등)분들에게 쉽게 공유할 수 있다는 장점이 있다.\"), \"\\n\", React.createElement(_components.h2, null, \"CSS\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://7942yongdae.tistory.com/73\"\n  }, \"CSS - :where()와 :is()를 사용해보자 [Selectors Level 4]\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \":where()\"), \" 와 \", React.createElement(_components.code, null, \":is()\"), \" 에 대한 설명글. 둘다 CSS 스타일 선언 시 중복 제거에 쓰인다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-css\"\n  }, \"/* Level 1 */\\nsection h1,\\narticle h1,\\naside h1 {\\n  font-size: 25px;\\n}\\n:where(section, article, aside) h1 {\\n  font-size: 25px;\\n}\\n:is(section, article, aside) h1 {\\n  font-size: 25px;\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"차이점은 \", React.createElement(_components.code, null, \":where()\"), \" 가 명시성이 0이라는 것.\"), \"\\n\", React.createElement(_components.p, null, \"본문에는 아직 초안이라고 나와있지만 그건 해당 글이 21년도 글이라 그렇고, 현재는 \", React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/:where#browser_compatibility\"\n  }, React.createElement(_components.code, null, \":where()\")), \" 와 \", React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/CSS/:is#browser_compatibility\"\n  }, React.createElement(_components.code, null, \":is()\")), \" 둘 다 사용 가능하다.\"), \"\\n\", React.createElement(_components.h2, null, \"Etc\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://ykss.netlify.app/translation/fun-with-console-log/\"\n  }, \"(번역) console.log()와 함께하는 재미\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"console\"), \" 모듈의 다양한 사용법에 대한 설명글. 이미 많이 알려진 내용이지만, 알고 있는 사람도 리마인드 하기에 좋은 글이다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://techblogposts.com/\"\n  }, \"TechBlogPosts\")), \"\\n\", React.createElement(_components.p, null, \"IT 회사들이 운영하는 기술 블로그들의 글을 모아서 (목록 및 링크만) 보여주는 블로그. 한 눈에 보여서 꽤 괜찮다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2023/230105-read-writings/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {title, date, tags, heroImage, heroImageAlt} = data.mdx.frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, title), React.createElement(WrittenDate, null, date), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag))))), !!image && React.createElement(GatsbyImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children), React.createElement(Comments, null));\n};\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n  }\\n\"])));\nconst WrittenDate = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst Tags = styled.ul(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px\\n      \", \"px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.spacing, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"3533977744\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","a","p","ul","li","ol","code","pre","_provideComponents","components","React","href","className","_templateObject","_templateObject2","_templateObject3","wrapper","MDXLayout","PostDetailPage","_ref","data","children","title","date","tags","heroImage","heroImageAlt","mdx","frontmatter","image","getImage","Layout","Header","WrittenDate","Tags","map","tag","key","Link","to","GatsbyImage","alt","MdxContent","Comments","styled","_taggedTemplateLiteralLoose","theme","dimens","gutter","spacing","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","slug","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}