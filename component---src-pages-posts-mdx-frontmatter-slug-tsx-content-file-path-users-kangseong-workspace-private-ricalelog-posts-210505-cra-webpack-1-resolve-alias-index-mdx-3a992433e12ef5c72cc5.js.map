{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-210505-cra-webpack-1-resolve-alias-index-mdx-3a992433e12ef5c72cc5.js","mappings":"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","sources":["webpack://ricalelog/./posts/210505-cra-webpack-1-resolve-alias/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    pre: \"pre\",\n    h3: \"h3\",\n    h4: \"h4\",\n    h5: \"h5\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"1. 서문\"), \"\\n\", React.createElement(_components.p, null, \"create-react-app(이하 CRA) 으로 React 웹앱을 만들었다. typescript도 쓰고 싶어서 만들 때 \", React.createElement(_components.code, null, \"--template typescript\"), \" 옵션도 주었다. webpack 설정을 직접 수정하고 싶어서 \", React.createElement(_components.code, null, \"yarn eject\"), \" 커맨드도 실행했다.\"), \"\\n\", React.createElement(_components.p, null, \"(위 문단이 이해되지 않는 사람이라면 이 글이 다소 이해하기 어려울 수도 있다. 그럴 경우 \", React.createElement(_components.a, {\n    href: \"https://create-react-app.dev/docs/documentation-intro\"\n  }, \"create-react-app 공식 문서\"), \"를 참고하자.)\"), \"\\n\", React.createElement(_components.p, null, \"webpack 직접 설정하기 첫걸음으로, \", React.createElement(_components.code, null, \"resolve.alias\"), \"를 설정해보자.\"), \"\\n\", React.createElement(_components.h2, null, \"2. \", React.createElement(_components.code, null, \"resolve.alias\"), \" 설정하기\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"resolve.alias\"), \" 옵션은 \", React.createElement(_components.a, {\n    href: \"https://webpack.js.org/configuration/resolve/#resolvealias\"\n  }, \"공식 문서\"), \" 에서 아래와 같이 설명하고 있다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Create aliases to import or require certain modules more easily.\\n특정 모듈을 더욱 쉽게 import 혹은 require 하기 위해 aliases 를 생성한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"말하자면 상대 경로로 불편하게 \", React.createElement(_components.code, null, \"import\"), \"해야 했던 것을 쉽게 \", React.createElement(_components.code, null, \"import\"), \"할 수 있게 해주는 옵션이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"/* webpack.config.js */\\n\\n// ...\\nmodule.exports = {\\n  //...\\n  resolve: {\\n    alias: {\\n      Utilities: path.resolve(__dirname, \\\"src/utilities/\\\"),\\n    },\\n  },\\n};\\n\\n/* someCode.js */\\n\\n// // 위 resolve.alias 설정이 없었다면 이렇게 import 해야 하지만\\n// import Utility from '../../utilities/utility';\\n\\n// 설정 덕분에 상대 경로 없이 편하게 import 할 수 있다.\\nimport Utility from \\\"utilities/utility\\\";\\n\")), \"\\n\", React.createElement(_components.p, null, \"CRA로 만든 앱에서도 이 설정을 이용하고 싶다. 어떻게 하면 효율적으로 적용할 수 있을까? 일단 기존 코드를 분석해보자.\"), \"\\n\", React.createElement(_components.h3, null, \"2.1. 기존 \", React.createElement(_components.code, null, \"resolve.alias\"), \" 분석\"), \"\\n\", React.createElement(_components.p, null, \"CRA로 만든 앱의 기존 \", React.createElement(_components.code, null, \"resolve.alias\"), \" 는 아래와 같다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"// ...\\nresolve: {\\n  // ...\\n  alias: {\\n    // 2.1.1. 'react-native'\\n    // Support React Native Web\\n    'react-native': 'react-native-web',\\n    // 2.1.2. profiling\\n    // Allows for better profiling with ReactDevTools\\n    ...(isEnvProductionProfile && {\\n      'react-dom$': 'react-dom/profiling',\\n      'scheduler/tracing': 'scheduler/tracing-profiling',\\n    }),\\n    // 2.1.3. webpackAliases\\n    ...(modules.webpackAliases || {}),\\n  }\\n  // ...\\n}\\n\")), \"\\n\", React.createElement(_components.h4, null, \"2.1.1. \", React.createElement(_components.code, null, \"'react-native'\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"// Support React Native Web\\n'react-native': 'react-native-web',\\n\")), \"\\n\", React.createElement(_components.p, null, \"이 설정은 react-native-web을 지원하기 위한 설정이다. 지금 우리의 관심사는 아니니 넘어가자.\"), \"\\n\", React.createElement(_components.h4, null, \"2.1.2. profiling\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"// Allows for better profiling with ReactDevTools\\n...(isEnvProductionProfile && {\\n  'react-dom$': 'react-dom/profiling',\\n  'scheduler/tracing': 'scheduler/tracing-profiling',\\n}),\\n\")), \"\\n\", React.createElement(_components.p, null, \"여기서 \", React.createElement(_components.code, null, \"isEnvProductionProfile\"), \" 값은 아래와 같다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"const isEnvProductionProfile =\\n  isEnvProduction && process.argv.includes(\\\"--profile\\\");\\n\")), \"\\n\", React.createElement(_components.p, null, \"프로덕션 환경이면서, webpack 실행 당시 \", React.createElement(_components.code, null, \"--profile\"), \" 옵션을 받았는지 여부를 확인하는 플래그이다.\"), \"\\n\", React.createElement(_components.p, null, \"즉 이 웹앱의 성능 분석을 하고자 할 때 사용하는 옵션이다. 자세한 사항은 React 성능 분석 관련 공식 문서(\", React.createElement(_components.a, {\n    href: \"https://reactjs.org/blog/2018/09/10/introducing-the-react-profiler.html\"\n  }, \"Introducing the React Profiler\"), \")를 참고하자.\"), \"\\n\", React.createElement(_components.h4, null, \"2.1.3. \", React.createElement(_components.code, null, \"webpackAliases\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"...(modules.webpackAliases || {}),\\n\")), \"\\n\", React.createElement(_components.p, null, \"여기서 \", React.createElement(_components.code, null, \"modules\"), \"는 아래와 같다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"const modules = require(\\\"./modules\\\");\\n\")), \"\\n\", React.createElement(_components.p, null, \"그럼 \", React.createElement(_components.code, null, \"./modules.js\"), \" 파일을 찾아가 \", React.createElement(_components.code, null, \"webpackAliases\"), \" 값은 어떻게 지정되어 있는지 살펴보자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"return {\\n  // ...\\n  webpackAliases: getWebpackAliases(options),\\n  // ...\\n};\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"options\"), \"와 \", React.createElement(_components.code, null, \"getWebpackAliases\"), \"는 뭔지 살펴보자.\"), \"\\n\", React.createElement(_components.h5, null, \"2.1.3.1. \", React.createElement(_components.code, null, \"options\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"options\"), \" 값은 아래와 같다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"let config;\\nif (hasTsConfig) {\\n  const ts = require(resolve.sync(\\\"typescript\\\", {\\n    basedir: paths.appNodeModules,\\n  }));\\n  config = ts.readConfigFile(paths.appTsConfig, ts.sys.readFile).config;\\n} else if (hasJsConfig) {\\n  /// ...\\n}\\nconfig = config || {};\\nconst options = config.compilerOptions || {};\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"tsconfig.json\"), \"의 \", React.createElement(_components.code, null, \"compilerOptions\"), \" 값을 읽어온 것이 \", React.createElement(_components.code, null, \"options\"), \"다.\"), \"\\n\", React.createElement(_components.h5, null, \"2.1.3.2. \", React.createElement(_components.code, null, \"getWebpackAliases\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"getWebpackAliases\"), \" 내용도 보자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"function getWebpackAliases(options = {}) {\\n  const baseUrl = options.baseUrl;\\n\\n  if (!baseUrl) {\\n    return {};\\n  }\\n\\n  const baseUrlResolved = path.resolve(paths.appPath, baseUrl);\\n\\n  if (path.relative(paths.appPath, baseUrlResolved) === \\\"\\\") {\\n    return {\\n      src: paths.appSrc,\\n    };\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"인자로 받은 \", React.createElement(_components.code, null, \"options\"), \"에 \", React.createElement(_components.code, null, \"baseUrl\"), \"값이 있고, 해당 값이 \", React.createElement(_components.code, null, \"path.appPath\"), \"와 같으면, \", React.createElement(_components.code, null, \"{ src: paths.appSrc }\"), \"를 반환하는 함수다.\"), \"\\n\", React.createElement(_components.p, null, \"여기서 \", React.createElement(_components.code, null, \"baseUrl\"), \"은 타입스크립트 설정에서 쓰이는 값이다. 이 값은 webpack 설정의 \", React.createElement(_components.code, null, \"resolve.alias\"), \"와 거의 같은 일을 한다. \", React.createElement(_components.code, null, \"import\"), \"할 때 상대 경로를 쓰지 않고 \", React.createElement(_components.code, null, \"baseUrl\"), \"부터 절대 경로로 쓸 수 있게끔 설정해준다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"/* tsconfig.json */\\n{\\n  \\\"compilerOptions\\\": {\\n    // ...\\n    \\\"baseUrl\\\": \\\"./\\\"\\n  }\\n}\\n\\n// // 위 설정이 없었따면 아래처럼 import 해야 한다.\\n// import { Button } from '../../../components';\\n\\n// 위 설정 덕에 아래처럼 import 가능하다.\\nimport { Button } from 'src/components';\\n\")), \"\\n\", React.createElement(_components.p, null, \"문제는 webpack 도 같이 설정을 해주어야 이 기능을 제대로 쓸 수 있다는 것이다. 그래서 위에 나왔던 \", React.createElement(_components.code, null, \"getWebpackAliases\"), \"의 마지막 즈음 문장을 해석하자면\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"if (path.relative(paths.appPath, baseUrlResolved) === \\\"\\\") {\\n  return {\\n    src: paths.appSrc,\\n  };\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"path.appPath\"), \"(앱의 루트 디렉토리의 절대 경로)와 \", React.createElement(_components.code, null, \"baseUrlResolved\"), \"(\", React.createElement(_components.code, null, \"baseUrl\"), \"의 절대 경로)가 같다면 \", React.createElement(_components.code, null, \"webpack.alias.src\"), \"로 쓰일 값을 \", React.createElement(_components.code, null, \"paths.appSrc\"), \"(앱의 \", React.createElement(_components.code, null, \"./src\"), \"의 절대 경로)로 해줘라, 라는 뜻이다.\"), \"\\n\", React.createElement(_components.p, null, \"한 마디로 \", React.createElement(_components.code, null, \"...(modules.webpackAliases || {}),\"), \" 이 구문은, 타입스크립트의 \", React.createElement(_components.code, null, \"baseUrl\"), \" 설정값 사용을 webpack 에 적용하기 위한 설정이라고 이해하면 된다.\"), \"\\n\", React.createElement(_components.h4, null, \"2.1.4 정리\"), \"\\n\", React.createElement(_components.p, null, \"정리하자면, \", React.createElement(_components.code, null, \"--profile\"), \" 옵션을 주지 않고 빌드 혹은 devServer 실행을 했다고 하면 \", React.createElement(_components.code, null, \"resolve.alias\"), \" 설정은 아래와 같이 된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"resolve: {\\n  alias: {\\n    'react-native': 'react-native-web',\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"만약 여기에 \", React.createElement(_components.code, null, \"tsconfig.json\"), \"에서 \", React.createElement(_components.code, null, \"baseUrl\"), \" 값을 설정해 주었다면 이렇게 설정될 것이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"resolve: {\\n  alias: {\\n    'react-native': 'react-native-web',\\n    src: paths.appSrc, // `./src` 디렉토리의 절대 경로\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.h3, null, \"2.2. \", React.createElement(_components.code, null, \"resolve.alias\"), \" 설정 추가하기\"), \"\\n\", React.createElement(_components.p, null, \"그럼 이제 현재 설정을 해치지 않으면서 자연스럽게 \", React.createElement(_components.code, null, \"resolve.alias\"), \" 설정을 추가해보자.\"), \"\\n\", React.createElement(_components.p, null, \"이 글에서는 \", React.createElement(_components.code, null, \"./src/components\"), \" 디렉토리와 \", React.createElement(_components.code, null, \"./src/themes\"), \" 디렉토리를 alias 로 등록할 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"타입스크립트 사용 시에는 \", React.createElement(_components.code, null, \"tsconfig.json\"), \"도 같이 수정해주어야 적용이 문제 없이 되기 때문에, 위 2.1.3. 항목에서 보았던 것처럼, \", React.createElement(_components.code, null, \"tsconfig.json\"), \"을 작성하면 자동으로 webpack 설정에도 적용되게끔 진행할 것이다.\"), \"\\n\", React.createElement(_components.h4, null, \"2.2.1. \", React.createElement(_components.code, null, \"tsconfig.json\"), \" 수정\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"compilerOptions\"), \"에 \", React.createElement(_components.code, null, \"baseUrl\"), \"과 \", React.createElement(_components.code, null, \"paths\"), \"를 추가해주자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"{\\n  \\\"compilerOptions\\\": {\\n    // ...\\n    \\\"baseUrl\\\": \\\"./\\\",\\n    \\\"paths\\\": {\\n      \\\"components\\\": [\\\"src/components\\\"],\\n      \\\"themes\\\": [\\\"src/themes\\\"]\\n    }\\n  },\\n  // ...\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"baseUrl\"), \"은 위에서 한 번 설명했고, \", React.createElement(_components.code, null, \"paths\"), \"는 webpack 의 \", React.createElement(_components.code, null, \"resolve.alias\"), \"와 같은 기능이라고 생각하면 된다. (세부 사항이 좀 다르긴 한데, 자세한 내용은 이 문서\", React.createElement(_components.a, {\n    href: \"https://www.typescriptlang.org/docs/handbook/module-resolution.html\"\n  }, \"TypeScript - Module Resolution\"), \"를 참고하자)\"), \"\\n\", React.createElement(_components.h4, null, \"2.2.2. \", React.createElement(_components.code, null, \"config/aliases.js\"), \" 작성\"), \"\\n\", React.createElement(_components.p, null, \"기존의 설정 코드는 최대한 수정하지 않는 방향으로 진행하겠다. \", React.createElement(_components.code, null, \"config/aliases.js\"), \"을 추가해서 설정을 작성하자. 기존 코드를 참고해서 작성할 것이기 때문에 코드 중복이 생기겠지만, 기존 설정 코드를 수정할 생각은 없기 때문에 코멘트만 남기는 정도로 넘어가겠다.\"), \"\\n\", React.createElement(_components.p, null, \"우선 \", React.createElement(_components.code, null, \"config/modules.js\"), \"를 참고해서 \", React.createElement(_components.code, null, \"tsconfig.json\"), \" 설정 내용을 가져오는 함수를 작성한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"// NOTE: duplicated with `getModules` in ./modules.js\\nfunction getCompilerOptions() {\\n  const hasTsConfig = fs.existsSync(paths.appTsConfig);\\n\\n  if (!hasTsConfig) {\\n    throw new Error(\\\"You don't have a tsconfig.json.\\\");\\n  }\\n\\n  const ts = require(resolve.sync(\\\"typescript\\\", {\\n    basedir: paths.appNodeModules,\\n  }));\\n  const config =\\n    ts.readConfigFile(paths.appTsConfig, ts.sys.readFile).config || {};\\n  return config.compilerOptions || {};\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"(타입스크립트를 쓸 것이기 때문에 자바스크립트 관련 코드는 삭제했다.)\"), \"\\n\", React.createElement(_components.p, null, \"가져온 \", React.createElement(_components.code, null, \"tsconfig.json\"), \"의 설정을 가지고 alias 내용을 생성하는 코드도 작성한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"function getAliases() {\\n  const { baseUrl, paths: tsPaths } = getCompilerOptions();\\n\\n  // baseUrl 값이 없으면 tsconfig.json 의 paths 가 제대로 적용되지 않는다.\\n  // 따라서 해당 값으로 aliases 를 설정할 필요도 없다.\\n  if (!baseUrl) {\\n    return {};\\n  }\\n\\n  const baseUrlResolved = path.resolve(paths.appPath, baseUrl);\\n\\n  //  앱의 루트 디렉토리와 baseUrl 이 동일한 디렉토리가 아니라면\\n  // alias를 설정하지 않는다.\\n  //  이는 `config/modules.js` 에서도 사용하는 예외처리인데,\\n  // convention over configuration 을 따르면서\\n  // 복잡한 예외 처리를 하지 않으려는 의도 같다.\\n  if (path.relative(paths.appPath, baseUrlResolved) !== \\\"\\\") {\\n    return {};\\n  }\\n\\n  // `\\\"components\\\": [\\\"src/components\\\"],` 형태를\\n  // `\\\"components\\\": path.resolve(__dirname, `../src/components`)`\\n  // 형태로 변환\\n  return Object.keys(tsPaths).reduce((cfg, key) => {\\n    cfg[key] = path.resolve(__dirname, `../${tsPaths[key][0]}`);\\n    return cfg;\\n  }, {});\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"이제 \", React.createElement(_components.code, null, \"config/modules.js\"), \" 와 같은 방식으로 exports 해주며 마무리하면 된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"module.exports = getAliases();\\n\")), \"\\n\", React.createElement(_components.h4, null, \"2.2.3. \", React.createElement(_components.code, null, \"webpack.config.js\"), \" 수정\"), \"\\n\", React.createElement(_components.p, null, \"이제 작성한 \", React.createElement(_components.code, null, \"config/aliases.js\"), \" 파일을 \", React.createElement(_components.code, null, \"webpack.config.js\"), \" 안에서 사용해보자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"// 최상단의 온갖 코드를 require 하는 부분 마지막 부분에\\n// 적당히 끼워넣자.\\nconst tsAliases = require('./aliases');\\n\\n// ...\\n\\n// resolve.alias 부분에 설정을 추가하자\\n      alias: {\\n        'react-native': 'react-native-web',\\n        ...(isEnvProductionProfile && {\\n          'react-dom$': 'react-dom/profiling',\\n          'scheduler/tracing': 'scheduler/tracing-profiling',\\n        }),\\n        ...(modules.webpackAliases || {}),\\n        ...tsAliases, // <- 이 코드를 추가하자\\n      },\\n\")), \"\\n\", React.createElement(_components.h2, null, \"3. 결과\"), \"\\n\", React.createElement(_components.p, null, \"이제 \", React.createElement(_components.code, null, \"tsconfig.json\"), \" 파일의 \", React.createElement(_components.code, null, \"compilerOptions.paths\"), \" 값을 가지고 webpack 의 \", React.createElement(_components.code, null, \"resolve.alias\"), \" 옵션을 자동 설정할 수 있게 되었다. 실제 프로젝트에 적용된 코드가 궁금하다면 아래 소스 코드들을 참고하자.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/ricale/ricale.github.io/blob/develop/tsconfig.json\"\n  }, \"ricale.github.io/tsconfig.json\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/ricale/ricale.github.io/blob/develop/config/aliases.js\"\n  }, \"ricale.github.io/config/aliases.js\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/210505-cra-webpack-1-resolve-alias/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {title, date, tags, heroImage, heroImageAlt} = data.mdx.frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  console.log(\"image\", image);\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, title), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag)))), React.createElement(\"div\", null, date), !!image && React.createElement(GatsbyImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children));\n};\nconst Tags = styled.ul(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px \", \"px\\n      0px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.thin, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"3533977744\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, heroImage}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    og: {\n      title: title,\n      path: slug,\n      type: \"article\",\n      description: excerpt,\n      image: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src\n    }\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","a","blockquote","pre","h3","h4","h5","ul","li","_provideComponents","components","React","href","className","_templateObject","wrapper","MDXLayout","PostDetailPage","_ref","data","children","title","date","tags","heroImage","heroImageAlt","mdx","frontmatter","image","getImage","console","log","Layout","Tags","map","tag","key","Link","to","GatsbyImage","alt","MdxContent","styled","_taggedTemplateLiteralLoose","theme","dimens","gutter","thin","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","slug","excerpt","Seo","og","path","type","description","images","fallback","src","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}