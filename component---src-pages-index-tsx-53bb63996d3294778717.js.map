{"version":3,"file":"component---src-pages-index-tsx-53bb63996d3294778717.js","mappings":"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","sources":["webpack://ricalelog/./src/components/PostList/PostListItem.tsx","webpack://ricalelog/./src/components/PostList/index.tsx","webpack://ricalelog/./src/components/SeriesList/SeriesListItem.tsx","webpack://ricalelog/./src/components/SeriesList/index.tsx","webpack://ricalelog/./src/components/ThumbnailImage.tsx","webpack://ricalelog/./src/getters/getPosts.ts","webpack://ricalelog/./src/getters/getSeries.ts","webpack://ricalelog/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { navigate } from \"gatsby\";\n\nimport styled from \"../../themes\";\nimport { Post } from \"../../types\";\nimport ThumbnailImage from \"../ThumbnailImage\";\n\nconst INVALID_DATE_STRING = \"Invalid date\";\n\ntype PostListItemProps = Post;\n\nfunction PostListItem({\n  title,\n  slug,\n  date,\n  heroImage,\n  heroImageAlt,\n}: PostListItemProps) {\n  const dateIsValid = date !== INVALID_DATE_STRING;\n  return (\n    <Container onClick={() => navigate(`/posts/${slug}`)}>\n      <ThumbnailWrapper>\n        <ThumbnailImage source={heroImage} alt={heroImageAlt} />\n      </ThumbnailWrapper>\n      <Info>\n        <h2>{title}</h2>\n        <Subtitle>{dateIsValid ? date : slug}</Subtitle>\n      </Info>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 2px;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.postListItemHover};\n  }\n`;\n\nconst ThumbnailWrapper = styled.div`\n  position: relative;\n\n  width: 60px;\n  height: 60px;\n\n  background-color: ${(p) => p.theme.colors.postListItemThumbnail};\n`;\n\nconst Info = styled.div`\n  flex: 1;\n\n  & > h2 {\n    margin: 0;\n    font-size: 1.125rem;\n  }\n`;\n\nconst Subtitle = styled.div`\n  font-size: 0.8125rem;\n  color: ${(p) => p.theme.colors.postListItemSubtitleText};\n`;\n\nexport default PostListItem;\n","import * as React from \"react\";\n\nimport styled from \"../../themes\";\nimport { Post } from \"../../types\";\nimport PostListItem from \"./PostListItem\";\n\ntype PostListProps = {\n  data: Post[];\n};\nfunction PostList({ data, ...props }: PostListProps) {\n  return (\n    <Container {...props}>\n      {data.map(({ ...item }, i) => (\n        <PostListItem key={i} {...item} />\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport default PostList;\n","import * as React from \"react\";\nimport { navigate } from \"gatsby\";\n\nimport { Series } from \"../../types\";\nimport styled from \"../../themes\";\nimport ThumbnailImage from \"../ThumbnailImage\";\n\ntype SeriesListItemProps = Series;\nfunction SeriesListItem({\n  fieldValue,\n  totalCount,\n  frontmatter,\n  ...props\n}: SeriesListItemProps) {\n  const { date, heroImage, heroImageAlt } = frontmatter;\n  return (\n    <Container onClick={() => navigate(`/series/${fieldValue}`)} {...props}>\n      <ThumbnailWrapper>\n        <ThumbnailImage source={heroImage} alt={heroImageAlt} />\n      </ThumbnailWrapper>\n      <Info>\n        <h3>\n          {fieldValue} <small>{`${totalCount}`}</small>\n        </h3>\n        <small>{`~ ${date}`}</small>\n      </Info>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  position: relative;\n  cursor: pointer;\n  &::after {\n    content: \"\";\n    display: block;\n    padding-bottom: 100%;\n  }\n`;\n\nconst ThumbnailWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  background-color: ${(p) => p.theme.colors.seriesListItemThumbnail};\n`;\n\nconst Info = styled.div`\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  right: 8px;\n  bottom: 8px;\n\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n\n  background-color: ${(p) => p.theme.colors.seriesListItemInfo};\n\n  & > h3 {\n    flex: 1;\n    margin: 0 0 4px;\n    word-break: keep-all;\n  }\n  & > small {\n    text-align: right;\n  }\n  & > h3 > small {\n    padding: 2px 4px;\n\n    background-color: ${(p) => p.theme.colors.sereisListItemCount};\n    color: ${(p) => p.theme.colors.seriesListItemCountText};\n    font-size: 0.85rem;\n    font-weight: normal;\n  }\n`;\n\nexport default SeriesListItem;\n","import * as React from \"react\";\n\nimport styled from \"../../themes\";\nimport { Series } from \"../../types\";\nimport SeriesListItem from \"./SeriesListItem\";\n\ntype SeriesListProps = {\n  data: Series[];\n};\nfunction SeriesList({ data, ...props }: SeriesListProps) {\n  return (\n    <Container {...props}>\n      {data.map((sr) => (\n        <SeriesListItem key={sr.fieldValue} {...sr} />\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 8px;\n\n  & > * {\n    width: calc(25% - 6px);\n\n    @media (max-width: 768px) {\n      width: calc(33% - 5.3px);\n    }\n\n    @media (max-width: 500px) {\n      width: calc(50% - 4px);\n    }\n  }\n`;\n\nexport default SeriesList;\n","import * as React from \"react\";\nimport {\n  GatsbyImage,\n  getImage,\n  ImageDataLike,\n  StaticImage,\n} from \"gatsby-plugin-image\";\nimport styled from \"../themes\";\n\ntype ThumbnailImageProps = {\n  source: ImageDataLike | undefined;\n  alt: string | undefined;\n};\nfunction ThumbnailImage({ source, alt }: ThumbnailImageProps) {\n  const image = source ? getImage(source) : null;\n\n  if (image) {\n    return <Image image={image} alt={alt ?? \"\"} />;\n  }\n\n  return (\n    <StaticImage\n      src=\"../images/defaultThumbnail.jpeg\"\n      alt=\"default thumbnail\"\n      style={{ width: \"100%\", height: \"100%\" }}\n      imgStyle={{ objectFit: \"cover\", objectPosition: \"top left\" }}\n    />\n  );\n}\n\nconst Image = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport default ThumbnailImage;\n","import { Post, PostSource } from \"../types\";\n\nfunction getPosts(source: PostSource[]): Post[] {\n  return source.map((item) => ({ ...item.frontmatter }));\n}\n\nexport default getPosts;\n","import { Series, SeriesSource } from \"../types\";\n\nfunction getSeries(source: SeriesSource[]): Series[] {\n  return source\n    .map(({ edges, ...sr }) => ({\n      ...sr,\n      ...edges.sort((a, b) =>\n        b.node.frontmatter.originalDate.localeCompare(\n          a.node.frontmatter.originalDate\n        )\n      )[0].node,\n    }))\n    .sort((a, b) =>\n      b.frontmatter.originalDate.localeCompare(a.frontmatter.originalDate)\n    );\n}\n\nexport default getSeries;\n","import * as React from \"react\";\nimport { graphql, HeadFC, Link, PageProps } from \"gatsby\";\n\nimport Layout from \"../components/Layout\";\nimport PostList from \"../components/PostList\";\nimport Seo from \"../components/Seo\";\nimport SeriesList from \"../components/SeriesList\";\nimport getPosts from \"../getters/getPosts\";\nimport getSeries from \"../getters/getSeries\";\nimport styled from \"../themes\";\nimport { PostSource, SeriesSource } from \"../types\";\n\ntype IndexPageData = {\n  recentPosts: {\n    nodes: PostSource[];\n  };\n  series: {\n    group: SeriesSource[];\n  };\n};\n\nfunction IndexPage({ data: source }: PageProps<IndexPageData>) {\n  const recentPosts = getPosts(source.recentPosts.nodes);\n  const recentSeries = getSeries(source.series.group).slice(0, 4);\n\n  return (\n    <Layout emphasize>\n      <Section>\n        <div>\n          <h2>최신 글</h2>\n          <Link to=\"/posts/\">더보기</Link>\n        </div>\n        <RecentPostList data={recentPosts} />\n      </Section>\n\n      <Section>\n        <div>\n          <h2>최신 시리즈</h2>\n          <Link to=\"/series/\">더보기</Link>\n        </div>\n        <RecentSeriesList data={recentSeries} />\n      </Section>\n    </Layout>\n  );\n}\n\nconst Section = styled.div`\n  &:not(:first-child) {\n    margin-top: 32px;\n  }\n  & > :first-child {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 8px;\n\n    > h2 {\n      font-size: 1.125rem;\n    }\n    > a {\n      font-size: 0.875rem;\n      color: ${(p) => p.theme.colors.inactiveText};\n      text-decoration: underline;\n    }\n  }\n`;\n\nconst RecentPostList = styled(PostList)`\n  gap: 4px;\n`;\n\nconst RecentSeriesList = styled(SeriesList)`\n  @media (max-width: 768px) {\n    & > :nth-child(n + 4) {\n      display: none;\n    }\n  }\n\n  @media (max-width: 500px) {\n    & > :nth-child(n + 3) {\n      display: none;\n    }\n  }\n`;\n\nexport const query = graphql`\n  query {\n    recentPosts: allMdx(\n      filter: { frontmatter: { date: { ne: \"\" } } }\n      sort: { frontmatter: { date: DESC } }\n      limit: 3\n    ) {\n      nodes {\n        frontmatter {\n          title\n          slug\n          date(formatString: \"YYYY. M. D.\")\n          heroImageAlt\n          heroImage {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n      }\n    }\n\n    series: allMdx(limit: 2000, filter: { frontmatter: { date: { ne: \"\" } } }) {\n      group(field: { frontmatter: { series: SELECT } }) {\n        fieldValue\n        totalCount\n        edges {\n          node {\n            frontmatter {\n              title\n              originalDate: date\n              date(formatString: \"YYYY. M. D.\")\n              heroImageAlt\n              heroImage {\n                childImageSharp {\n                  gatsbyImageData\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: HeadFC = () => <Seo />;\n\nexport default IndexPage;\n"],"names":["Container","styled","p","theme","colors","postListItemHover","ThumbnailWrapper","postListItemThumbnail","Info","Subtitle","postListItemSubtitleText","title","slug","date","heroImage","heroImageAlt","dateIsValid","React","onClick","navigate","ThumbnailImage","source","alt","data","props","map","i","item","PostListItem","key","seriesListItemThumbnail","seriesListItemInfo","sereisListItemCount","seriesListItemCountText","fieldValue","totalCount","frontmatter","sr","SeriesListItem","Image","GatsbyImage","image","getImage","StaticImage","src","style","width","height","imgStyle","objectFit","objectPosition","_ref","edges","sort","a","b","node","originalDate","localeCompare","Section","inactiveText","RecentPostList","PostList","RecentSeriesList","SeriesList","Head","Seo","recentPosts","getPosts","nodes","recentSeries","getSeries","series","group","slice","Layout","emphasize","Link","to"],"sourceRoot":""}