{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2022-220102-react-native-apple-login-revoke-index-mdx-0da2933b6d9daed01651.js","mappings":"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","sources":["webpack://ricalelog/./posts/2022/220102-react-native-apple-login-revoke/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    code: \"code\",\n    h3: \"h3\",\n    blockquote: \"blockquote\",\n    h4: \"h4\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"1. 서두\"), \"\\n\", React.createElement(_components.p, null, \"토이 프로젝트에서 아래 라이브러리를 사용해 소셜 로그인을 구현하고 있다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.npmjs.com/package/@react-native-firebase/app\"\n  }, \"@react-native-firebase/app\"), \": React Native Firebase 코어 모듈\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.npmjs.com/package/@react-native-firebase/auth\"\n  }, \"@react-native-firebase/auth\"), \": React Native Firebase Authentication 모듈\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/react-native-google-signin/google-signin\"\n  }, \"@react-native-google-signin/google-signin\"), \": React Native 구글 소셜 로그인 라이브러리\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/invertase/react-native-apple-authentication\"\n  }, \"@invertase/react-native-apple-authentication\"), \": React Native 애플 소셜 로그인 라이브러리\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이 글에서는 애플 소셜 로그인에서도 탈퇴(앱과 연결 끊기) 기능 구현을 정리한다. 탈퇴는 사용자에게 당연히 제공되어야 하는 사용자의 권리다. 뭐 필수 기능이니 구현하는 데 어려울 건 없을 것이다. 아마 라이브러리에 \", React.createElement(_components.code, null, \"탈퇴하기()\"), \" 같은 메서드가 있을 것이고 우리는 그걸 호출하기만 하면 될 것이다. 아주 쉽다. 자 시작해보자. ...어? 아니네?\"), \"\\n\", React.createElement(_components.h3, null, \"1.1. 엥? 로그인은? 로그아웃은? 구글은?\"), \"\\n\", React.createElement(_components.p, null, \"애플 소셜 로그인/로그아웃, 구글 소셜 로그인/로그아웃/탈퇴 기능 구현에는 특별한 이슈가 없다. 개발자가 상상하고 있는 거의 그대로 메서드가 나와있고 우리는 호출하기만 되는 형태다. 일부 콜백을 사용해야 하긴 하지만 큰 문제는 아니다. 따라서 일단은 이슈가 있다고 생각되는 애플 쪽의 탈퇴 기능을 먼저 정리한다. (나머지 기능들은 나중에 정리할 수도 있다.) 일단은 공식문서들을 참고하시라.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://rnfirebase.io/auth/usage\"\n  }, \"React Native Firebase - Authentication\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/react-native-google-signin/google-signin\"\n  }, \"Github - react-native-google-signin/google-signin\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/invertase/react-native-apple-authentication\"\n  }, \"GitHub - invertase/react-native-apple-authentication\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"2. 구현\"), \"\\n\", React.createElement(_components.h3, null, \"2.1. \", React.createElement(_components.code, null, \"onCredentialRevoked()\")), \"\\n\", React.createElement(_components.p, null, \"일단 \", React.createElement(_components.a, {\n    href: \"https://github.com/invertase/react-native-apple-authentication\"\n  }, \"@invertase/react-native-apple-authentication\"), \" 라이브러리의 README 를 찬찬히 살펴봐도 탈퇴를 위한 메서드는 존재하지 않는다. (구글 쪽 라이브러리에서는 \", React.createElement(_components.code, null, \"revokeAccess()\"), \"라는 메서드를 제공하는 것과 대조적이다.) 그나마 탈퇴 쪽과 관련된 메서드라면 \", React.createElement(_components.code, null, \"onCredentialRevoked(listener)\"), \" 가 있다. 이 메서드는 사용자가 탈퇴되었을 때 실행되는 콜백을 등록하게 해준다.\"), \"\\n\", React.createElement(_components.p, null, \"여기서 평소 iOS 를 사용하지 않는 사람들은 당황할 수 있다 (내가 그랬다). 탈퇴 기능은 제공하지 않지만 탈퇴 상태를 들을 수 있는 이벤트 리스너만 제공하고 있는 것이다. 그럼 대체 탈퇴는 어떻게 하는 거야?\"), \"\\n\", React.createElement(_components.p, null, \"다행히 답은 멀리 있지 않다. 애플은 iOS 기기 내에서 특정 앱과의 연결을 끊을 수 있는 (탈퇴할 수 있는) 기능을 제공한다. (apple.com 에서도 제공하는 것으로 알고 있다. 확인해보지는 않았다.)\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"iOS 기기의 [설정] 앱 - 최상단의 자신의 이름 영역 선택 - [암호 및 보안] - [Apple ID를 사용하는 앱] - 탈퇴할 앱 선택 - [Apple ID 사용 중단]\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이 말은 즉슨, 탈퇴 기능을 직접 구현할 필요는 없다는 것이다. 우리는 사용자가 애플을 통해 탈퇴를 했을 때 그에 대응하는 처리만 해주면 된다.\"), \"\\n\", React.createElement(_components.h4, null, \"구현 예\"), \"\\n\", React.createElement(_components.p, null, \"그럼 문서에 나와있는대로 탈퇴 기능을 구현해보자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function App() {\\n  // ...\\n\\n  useEffect(() => {\\n    // 현재 기기가 애플 로그인을 지원하는 기기인지 확인\\n    if(!appleAuth.isSupported) {\\n      return;\\n    }\\n\\n    const unsubscriber = appleAuth.onCredentialRevoked(() => {\\n      // 사용자의 정보를 가지고 탈퇴 기능을 수행하자.\\n      doSomethingForRevoke();\\n      // firebase 에서도 로그아웃\\n      auth().signOut();\\n    });\\n    return unsubscriber;\\n  }, []);\\n\\n  // ...\\n\\n  return (\\n    <View>\\n    </View>\\n  )\\n}\\n\\n});\\n\")), \"\\n\", React.createElement(_components.h3, null, \"2.2. \", React.createElement(_components.code, null, \"getCredentialStateForUser()\")), \"\\n\", React.createElement(_components.p, null, \"좋다. 구현이 완료되었다. 라이브러리의 README 에는 예외 처리에 대한 안내가 없는 걸로 봐서 이 콜백은 사용자의 탈퇴 시 무조건 실행을 보장하는 것 같다 (API 문서를 보고 싶지만 링크가 깨져있다).\"), \"\\n\", React.createElement(_components.p, null, \"그렇게 믿고 싶다. 하지만 세상에 백퍼센트는 없다. 특히 앱 프로세스가 완전히 죽은 상태에서 탈퇴를 하고 앱을 실행했을 때 \", React.createElement(_components.code, null, \"onCredentialRevoked()\"), \" 가 실행되지 않는 것을 여러차례 직접 목격한 나로서는, 더더욱 무시할 수 없었다. 이 콜백이 실행되지 않을 때를 대비해야 한다.\"), \"\\n\", React.createElement(_components.p, null, \"이럴 때 쓸 수 있는 메서드가 \", React.createElement(_components.code, null, \"getCredentialStateForUser(user)\"), \"다. 이 메서드는 현재 사용자의 상태를 반환한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-typescript\"\n  }, \"enum AppleCredentialState {\\n  REVOKED = 0, // The Opaque user ID was revoked by the user.\\n  AUTHORIZED = 1, // The Opaque user ID is in good state.\\n  NOT_FOUND = 2, // The Opaque user ID was not found.\\n  TRANSFERRED = 3, // N/A\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"즉 사용자가 앱에 진앱했을 때, 혹은 사용자 정보가 업데이트되었다고 추정될 때, 이 메서드로 사용자의 상태를 확인하면 탈퇴 여부를 확인할 수 있다는 말이다.\"), \"\\n\", React.createElement(_components.h4, null, \"구현 예\"), \"\\n\", React.createElement(_components.p, null, \"여기서는 \\\"사용자의 인증 정보가 바뀐 시점\\\"을 React Native Firebase 의 \", React.createElement(_components.code, null, \"auth().onAuthStateChanged()\"), \" 콜백으로 확인한다. 만약 React Native Firebase 를 사용하지 않는다면 다른 방법으로 해당 시점을 찾아야 할 것이다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"function App() {\\n  // ...\\n\\n  useEffect(() => {\\n    const subscribe = auth().onAuthStateChanged(async user => {\\n      if(!user) {\\n        // 로그아웃된 상태 처리\\n        loggedOut();\\n        return;\\n      }\\n\\n      const isApple = (\\n        appleAuth.isSupported\\n        && user.providerData[0].providerId === 'apple.com'\\n      );\\n      const uidInProvider = user.providerData[0].uid;\\n      const appleState = await appleAuth.getCredentialStateForUser(uidInProvider);\\n\\n      if(isApple && appleState === appleAuth.State.REVOKED) {\\n        // 사용자의 정보를 가지고 탈퇴 기능을 수행하자.\\n        revokeThisService();\\n        // firebase 에서도 로그아웃\\n        auth().signOut();\\n      }\\n    })\\n  }, []);\\n\\n  // ...\\n\\n  return (\\n    <View>\\n    </View>\\n  )\\n}\\n\\n});\\n\")), \"\\n\", React.createElement(_components.h2, null, \"3. 결론\"), \"\\n\", React.createElement(_components.p, null, \"마지막으로 요약하자. React Native 에서 \", React.createElement(_components.a, {\n    href: \"https://github.com/invertase/react-native-apple-authentication\"\n  }, \"@invertase/react-native-apple-authentication\"), \" 라이브러리를 사용해 탈퇴 기능을 구현할 때는 아래 두 개의 메서드를 적절히 잘 조합하면 되겠다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"onCredentialRevoked()\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"getCredentialStateForUser()\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2022/220102-react-native-apple-login-revoke/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {title, date, tags, heroImage, heroImageAlt} = data.mdx.frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, title), React.createElement(WrittenDate, null, date), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag))))), !!image && React.createElement(GatsbyImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children), React.createElement(Comments, null));\n};\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n  }\\n\"])));\nconst WrittenDate = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst Tags = styled.ul(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px\\n      \", \"px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.spacing, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"3533977744\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","ul","li","a","code","h3","blockquote","h4","pre","_provideComponents","components","React","href","className","_templateObject","_templateObject2","_templateObject3","wrapper","MDXLayout","PostDetailPage","_ref","data","children","title","date","tags","heroImage","heroImageAlt","mdx","frontmatter","image","getImage","Layout","Header","WrittenDate","Tags","map","tag","key","Link","to","GatsbyImage","alt","MdxContent","Comments","styled","_taggedTemplateLiteralLoose","theme","dimens","gutter","spacing","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","slug","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}