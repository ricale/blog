"use strict";(self.webpackChunkricalelog=self.webpackChunkricalelog||[]).push([[8905],{2543:function(e,n,t){t.r(n),t.d(n,{Head:function(){return I},default:function(){return w}});var a=t(1151),l=t(7294);function s(e){const n=Object.assign({p:"p",a:"a",blockquote:"blockquote",h2:"h2",code:"code",div:"div",h3:"h3",ul:"ul",li:"li",strong:"strong"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.p,null,"얼마 전 ",l.createElement(n.a,{href:"https://github.blog/changelog/2021-08-12-git-password-authentication-is-shutting-down/"},"GitHub 의 비밀번호 인증 방식이 중지"),"되었다. 이제는 pull, push 등 GitHub 에 인증이 필요한 액션을 할 때 비밀번호가 아닌 다른 인증 방식을 설정해야 한다."),"\n",l.createElement(n.blockquote,null,"\n",l.createElement(n.p,null,"Instead, token-based authentication (for example, personal access, OAuth, SSH Key, or GitHub App installation token) will be required for all authenticated Git operations."),"\n"),"\n",l.createElement(n.p,null,"그나마 익숙한 것이 무엇인가 살펴보았더니 SSH인 것 같았다. 그래서 SSH로 인증을 설정하기로 했다."),"\n",l.createElement(n.p,null,"(이 글은 Mac 기준으로 작성되었다.)"),"\n",l.createElement(n.h2,null,"1. 하나의 계정에 대한 SSH 인증 설정"),"\n",l.createElement(n.p,null,"한 계정에 대한 설정 방법은 ",l.createElement(n.a,{href:"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"},"GitHub 공식 문서"),"에 매우 잘 설명되어 있다. 영어가 불편하지 않다면 공식 문서를 보자."),"\n",l.createElement(n.p,null,"일단 ",l.createElement(n.code,null,"ssh-keygen"),"을 사용해 인증서를 생성하자."),"\n",l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">$ ssh-keygen <span class="token parameter variable">-t</span> ed25519 <span class="token parameter variable">-C</span> <span class="token string">"your_email@example.com"</span>\nGenerating public/private ed25519 key pair.\nEnter <span class="token function">file</span> <span class="token keyword">in</span> <span class="token function">which</span> to save the key <span class="token punctuation">(</span>/Users/default/.ssh/id_ed25519<span class="token punctuation">)</span>:\nEnter passphrase <span class="token punctuation">(</span>empty <span class="token keyword">for</span> no passphrase<span class="token punctuation">)</span>:\nEnter same passphrase again:</code></pre></div>'}}),"\n",l.createElement(n.p,null,"경로를 지정하고 싶다면 ",l.createElement(n.code,null,"-f")," 옵션을 주자"),"\n",l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">$ ssh-keygen <span class="token parameter variable">-t</span> ed25519 <span class="token parameter variable">-C</span> <span class="token string">"your_email@example.com"</span> <span class="token parameter variable">-f</span> ~/.ssh/myCompany/ed25519</code></pre></div>'}}),"\n",l.createElement(n.p,null,"생성된 인증서를 key agent 에 등록시켜야 한다. ssh-agent 를 백그라운드에서 실행하자."),"\n",l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">$ <span class="token builtin class-name">eval</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span>ssh-agent <span class="token parameter variable">-s</span><span class="token variable">)</span></span>"</span></code></pre></div>'}}),"\n",l.createElement(n.p,null,"설정에는 ",l.createElement(n.code,null,"~/.ssh/config")," 파일이 필요한데, 맥의 경우 자동 생성되지 않았을 수 있다. 그 경우 파일을 직접 생성해서 아래와 같은 내용을 넣어야 한다."),"\n",l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">Host *\n  AddKeysToAgent yes\n  UseKeychain yes\n  IdentityFile ~/.ssh/id_ed25519</code></pre></div>'}}),"\n",l.createElement(n.p,null,l.createElement(n.code,null,"~/.ssh/config")," 파일도 확인했으면 이제 아래 명령어를 통해 인증서를 ssh-agent 에 추가하자."),"\n",l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">$ ssh-add <span class="token parameter variable">-K</span> ~/.ssh/id_ed25519</code></pre></div>'}}),"\n",l.createElement(n.p,null,"GitHub에 인증서를 등록하려면 아래 명령어를 통해 공개키를 클립보드로 복사해서 사용하면 된다."),"\n",l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">$ pbcopy <span class="token operator">&lt;</span> ~/.ssh/id_ed25519.pub</code></pre></div>'}}),"\n",l.createElement(n.p,null,"복사한 공개키는 GitHub [Settings] - [SSH and GPG keys] - [New SSH key] 를 통해 등록하자."),"\n",l.createElement(n.p,null,"여기까지 하면 이제 리파지토리의 SSH 주소를 remote 로 사용해 코드를 push/pull 할 수 있다."),"\n",l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">$ <span class="token function">git</span> remote set-url origin git@github.com:ME/MY_REPOSITORY.git</code></pre></div>'}}),"\n",l.createElement(n.h2,null,"2. 여러 계정의 SSH 설정을 한 기기에서 같이 하기"),"\n",l.createElement(n.p,null,"한 사람이 GitHub 계정을 여러 개 가지고 있을 수도 있다. 예를 들면 개인 계정과 회사 계정을 분리한 경우가 있을 수 있다. 그리고 사람 일이 늘 그렇듯, 한 기기에서 개인 일과 회사 일을 다 해야 하는 경우가 생길 수도 있다. 그럴 경우에는 어떻게 설정해주면 될까?"),"\n",l.createElement(n.p,null,"거의 모든 과정이 1번과 동일하다. 다른 것은 키가 저장될 위치, ",l.createElement(n.code,null,"~/.ssh/config"),", 그리고 로컬 리파지토리의 remote 주소이다."),"\n",l.createElement(n.h3,null,"2.1. 키가 저장될 위치"),"\n",l.createElement(n.p,null,"키가 저장될 위치가 다른 것은 당연하다. 다른 두 파일을 하나의 위치에 같이 저장할 수는 없으니까. 일단 처음에 저장된 것은 기본 위치에 두고, 추후 추가되는 것을 다른 위치에 저장해보자."),"\n",l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token comment"># 처음에 저장된 SSH 키의 위치. (기본값)</span>\n~/.ssh/id_ed25519\n~/.ssh/id_ed25519.pub\n<span class="token comment"># 이후 추가한 SSH 키의 위치.</span>\n<span class="token comment"># 당연하지만 다른 디렉토리의 다른 파일명으로 저장해도 무방하다.</span>\n~/.ssh/myCompany/id_ed25519\n~/.ssh/myCompany/id_ed25519.pub</code></pre></div>'}}),"\n",l.createElement(n.p,null,"자신이 원하는 아무 곳에나 저장하면 된다."),"\n",l.createElement(n.h3,null,"2.2. ",l.createElement(n.code,null,"~/.ssh/config")),"\n",l.createElement(n.p,null,"저장된 위치를 설정 파일에 반영하자."),"\n",l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">Host github-private\n  hostName github.com\n  IdentityFile ~/.ssh/id_ed25519\n  User git\n  IdentitiesOnly yes\n\nHost github-my-company\n  hostName github.com\n  IdentityFile ~/.ssh/myCompany/id_ed25519\n  User git\n  IdentitiesOnly yes</code></pre></div>'}}),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.code,null,"Host"),": 본래 호스트명 대신 사용할 호스트명. alias 라고 이해하면 쉽다. 원하는 이름으로 하면 된다. (사용 예는 2.3. 에서 확인할 수 있다.)","\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,l.createElement(n.code,null,"hostName"),": git 서비스의 호스트명"),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"IdentityFile"),": 인증 파일 경로"),"\n",l.createElement(n.li,null,l.createElement(n.code,null,"IdentitiesOnly"),": 인증 파일 경로를 확인함에 있어 내가 지정한 값(",l.createElement(n.code,null,"IdentityFile"),")만을 사용할 건지 여부. 만약 값을 ",l.createElement(n.code,null,"no"),"로 하면, 키 파일을 가져오기 위해 ",l.createElement(n.code,null,"IdentityFile"),"의 위치를 확인하기에 ",l.createElement(n.strong,null,"앞서")," 시스템의 기본값(이 경우 ",l.createElement(n.code,null,"~/.ssh/id_ed25519"),"일 것이다.)을 먼저 확인한다고 한다."),"\n"),"\n"),"\n"),"\n",l.createElement(n.h3,null,"2.3. 로컬 리파지토리의 remote 주소 변경"),"\n",l.createElement(n.p,null,"자 이제 2.2. 항목에서 설정한 값을 가지고 리파지토리의 주소를 변경해주어야 한다."),"\n",l.createElement(n.p,null,"변경하는 방법은 간단하다. 기존 호스트명(",l.createElement(n.code,null,"github.com"),") 대신 우리가 위 설정파일에서 지정한 호스트명(",l.createElement(n.code,null,"Host github-my-company"),")를 적용해주면 된다."),"\n",l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token comment">## 원래 주소</span>\n<span class="token comment"># git@github.com:ME/MY-REPOSITORY.git</span>\n<span class="token comment">## 변경할 주소</span>\n<span class="token comment"># git@github-private:ME/MY-REPOSITORY.git</span>\n$ <span class="token function">git</span> remote set-url origin git@github-private:ME/MY-REPOSITORY.git</code></pre></div>'}}),"\n",l.createElement(n.p,null,"다른 쪽 리파지토리도 마찬가지다."),"\n",l.createElement(n.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash"><span class="token comment">## 원래 주소</span>\n<span class="token comment"># git@github.com:COMPANY/COMPANY-REPOSITORY.git</span>\n<span class="token comment">## 변경할 주소</span>\n<span class="token comment"># git@github-my-company:COMPANY/COMPANY-REPOSITORY.git</span>\n$ <span class="token function">git</span> remote set-url origin git@github-my-company:COMPANY/COMPANY-REPOSITORY.git</code></pre></div>'}}),"\n",l.createElement(n.p,null,"이제 양쪽 다 SSH 인증을 사용할 수 있다."),"\n",l.createElement(n.h2,null,"References"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"The GitHub Blog - ",l.createElement(n.a,{href:"https://github.blog/changelog/2021-08-12-git-password-authentication-is-shutting-down/"},"Git password authentication is shutting down")),"\n",l.createElement(n.li,null,"GitHub Docs - ",l.createElement(n.a,{href:"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"},"Generating a new SSH key and adding it to the ssh-agent")),"\n",l.createElement(n.li,null,"GitHub Docs - ",l.createElement(n.a,{href:"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account"},"Adding a new SSH key to your GitHub account")),"\n",l.createElement(n.li,null,"Stack Overflow - ",l.createElement(n.a,{href:"https://stackoverflow.com/questions/7927750/specify-an-ssh-key-for-git-push-for-a-given-domain"},"Specify an SSH key for git push for a given domain")),"\n"))}var c,i,r,o,g=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?l.createElement(n,e,l.createElement(s,e)):s(e)},u=t(1880),p=t(1883),m=t(3723),h=t(1858),d=t(3904),b=t(891),E=t(5534),y=t(5777),k=t(7178);const v=e=>{let{data:n,children:t}=e;const{frontmatter:a,sameSeriesPosts:s}=n.mdx,{title:c,slug:i,date:r,tags:o,series:g,heroImage:u,heroImageAlt:d}=a,b=u?(0,m.c)(u):null;return l.createElement(h.Z,null,l.createElement(S,null,l.createElement("h1",null,c),l.createElement(H,null,r),l.createElement(_,null,o.map((e=>l.createElement("li",{key:e},l.createElement(p.rU,{to:"/tags/"+e},e)))))),l.createElement(k.Z,{name:g,data:s,current:i}),!!b&&l.createElement(f,{image:b,alt:null!=d?d:""}),l.createElement(E.Z,null,t),l.createElement(y.Z,null))},S=b.ZP.div(c||(c=(0,u.Z)(["\n  margin: 60px 0 72px;\n  padding: 0 24px;\n\n  & > h1 {\n    font-size: 2.5rem;\n    word-break: keep-all;\n    margin: 0;\n  }\n"]))),f=(0,b.ZP)(m.G)(i||(i=(0,u.Z)(["\n  margin-bottom: 16px;\n"]))),H=b.ZP.div(r||(r=(0,u.Z)(["\n  margin: 16px 0;\n"]))),_=b.ZP.ul(o||(o=(0,u.Z)(["\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: ","px;\n\n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  > li {\n    padding: ","px\n      ","px;\n    border-radius: 2px;\n\n    background-color: ",";\n    color: ",";\n\n    > a {\n      text-decoration: none;\n    }\n  }\n"])),(e=>e.theme.dimens.gutter),(e=>e.theme.dimens.spacing),(e=>e.theme.dimens.gutter),(e=>e.theme.colors.tag),(e=>e.theme.colors.onTag)),I=e=>{var n,t;let{data:a}=e;const{frontmatter:{title:s,slug:c,tags:i,heroImage:r,previewContent:o},excerpt:g}=a.mdx,u=r?(0,m.c)(r):null;return l.createElement(d.Z,{title:s,description:null!=o?o:g,path:"posts/"+c,thumbnail:null==u||null===(n=u.images)||void 0===n||null===(t=n.fallback)||void 0===t?void 0:t.src,keywords:i,ogType:"article"})};function w(e){return l.createElement(v,e,l.createElement(g,e))}}}]);
//# sourceMappingURL=component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2021-210901-github-ssh-multi-account-index-mdx-ab09a30a5a5ad7ca54ad.js.map