"use strict";(self.webpackChunkricalelog=self.webpackChunkricalelog||[]).push([[8905],{2543:function(e,n,t){t.r(n),t.d(n,{Head:function(){return y},default:function(){return f}});var l=t(1151),a=t(7294);function c(e){const n=Object.assign({p:"p",a:"a",blockquote:"blockquote",h2:"h2",code:"code",pre:"pre",h3:"h3",ul:"ul",li:"li",strong:"strong"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"얼마 전 ",a.createElement(n.a,{href:"https://github.blog/changelog/2021-08-12-git-password-authentication-is-shutting-down/"},"GitHub 의 비밀번호 인증 방식이 중지"),"되었다. 이제는 pull, push 등 GitHub 에 인증이 필요한 액션을 할 때 비밀번호가 아닌 다른 인증 방식을 설정해야 한다."),"\n",a.createElement(n.blockquote,null,"\n",a.createElement(n.p,null,"Instead, token-based authentication (for example, personal access, OAuth, SSH Key, or GitHub App installation token) will be required for all authenticated Git operations."),"\n"),"\n",a.createElement(n.p,null,"그나마 익숙한 것이 무엇인가 살펴보았더니 SSH인 것 같았다. 그래서 SSH로 인증을 설정하기로 했다."),"\n",a.createElement(n.p,null,"(이 글은 Mac 기준으로 작성되었다.)"),"\n",a.createElement(n.h2,null,"1. 하나의 계정에 대한 SSH 인증 설정"),"\n",a.createElement(n.p,null,"한 계정에 대한 설정 방법은 ",a.createElement(n.a,{href:"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"},"GitHub 공식 문서"),"에 매우 잘 설명되어 있다. 영어가 불편하지 않다면 공식 문서를 보자."),"\n",a.createElement(n.p,null,"일단 ",a.createElement(n.code,null,"ssh-keygen"),"을 사용해 인증서를 생성하자."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},'$ ssh-keygen -t ed25519 -C "your_email@example.com"\nGenerating public/private ed25519 key pair.\nEnter file in which to save the key (/Users/default/.ssh/id_ed25519):\nEnter passphrase (empty for no passphrase):\nEnter same passphrase again:\n')),"\n",a.createElement(n.p,null,"경로를 지정하고 싶다면 ",a.createElement(n.code,null,"-f")," 옵션을 주자"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},'$ ssh-keygen -t ed25519 -C "your_email@example.com" -f ~/.ssh/myCompany/ed25519\n')),"\n",a.createElement(n.p,null,"생성된 인증서를 key agent 에 등록시켜야 한다. ssh-agent 를 백그라운드에서 실행하자."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},'$ eval "$(ssh-agent -s)"\n')),"\n",a.createElement(n.p,null,"설정에는 ",a.createElement(n.code,null,"~/.ssh/config")," 파일이 필요한데, 맥의 경우 자동 생성되지 않았을 수 있다. 그 경우 파일을 직접 생성해서 아래와 같은 내용을 넣어야 한다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"Host *\n  AddKeysToAgent yes\n  UseKeychain yes\n  IdentityFile ~/.ssh/id_ed25519\n")),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"~/.ssh/config")," 파일도 확인했으면 이제 아래 명령어를 통해 인증서를 ssh-agent 에 추가하자."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"$ ssh-add -K ~/.ssh/id_ed25519\n")),"\n",a.createElement(n.p,null,"GitHub에 인증서를 등록하려면 아래 명령어를 통해 공개키를 클립보드로 복사해서 사용하면 된다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"$ pbcopy < ~/.ssh/id_ed25519.pub\n")),"\n",a.createElement(n.p,null,"복사한 공개키는 GitHub [Settings] - [SSH and GPG keys] - [New SSH key] 를 통해 등록하자."),"\n",a.createElement(n.p,null,"여기까지 하면 이제 리파지토리의 SSH 주소를 remote 로 사용해 코드를 push/pull 할 수 있다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"$ git remote set-url origin git@github.com:ME/MY_REPOSITORY.git\n")),"\n",a.createElement(n.h2,null,"2. 여러 계정의 SSH 설정을 한 기기에서 같이 하기"),"\n",a.createElement(n.p,null,"한 사람이 GitHub 계정을 여러 개 가지고 있을 수도 있다. 예를 들면 개인 계정과 회사 계정을 분리한 경우가 있을 수 있다. 그리고 사람 일이 늘 그렇듯, 한 기기에서 개인 일과 회사 일을 다 해야 하는 경우가 생길 수도 있다. 그럴 경우에는 어떻게 설정해주면 될까?"),"\n",a.createElement(n.p,null,"거의 모든 과정이 1번과 동일하다. 다른 것은 키가 저장될 위치, ",a.createElement(n.code,null,"~/.ssh/config"),", 그리고 로컬 리파지토리의 remote 주소이다."),"\n",a.createElement(n.h3,null,"2.1. 키가 저장될 위치"),"\n",a.createElement(n.p,null,"키가 저장될 위치가 다른 것은 당연하다. 다른 두 파일을 하나의 위치에 같이 저장할 수는 없으니까. 일단 처음에 저장된 것은 기본 위치에 두고, 추후 추가되는 것을 다른 위치에 저장해보자."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"# 처음에 저장된 SSH 키의 위치. (기본값)\n~/.ssh/id_ed25519\n~/.ssh/id_ed25519.pub\n# 이후 추가한 SSH 키의 위치.\n# 당연하지만 다른 디렉토리의 다른 파일명으로 저장해도 무방하다.\n~/.ssh/myCompany/id_ed25519\n~/.ssh/myCompany/id_ed25519.pub\n")),"\n",a.createElement(n.p,null,"자신이 원하는 아무 곳에나 저장하면 된다."),"\n",a.createElement(n.h3,null,"2.2. ",a.createElement(n.code,null,"~/.ssh/config")),"\n",a.createElement(n.p,null,"저장된 위치를 설정 파일에 반영하자."),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"Host github-private\n  hostName github.com\n  IdentityFile ~/.ssh/id_ed25519\n  User git\n  IdentitiesOnly yes\n\nHost github-my-company\n  hostName github.com\n  IdentityFile ~/.ssh/myCompany/id_ed25519\n  User git\n  IdentitiesOnly yes\n")),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.code,null,"Host"),": 본래 호스트명 대신 사용할 호스트명. alias 라고 이해하면 쉽다. 원하는 이름으로 하면 된다. (사용 예는 2.3. 에서 확인할 수 있다.)","\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.code,null,"hostName"),": git 서비스의 호스트명"),"\n",a.createElement(n.li,null,a.createElement(n.code,null,"IdentityFile"),": 인증 파일 경로"),"\n",a.createElement(n.li,null,a.createElement(n.code,null,"IdentitiesOnly"),": 인증 파일 경로를 확인함에 있어 내가 지정한 값(",a.createElement(n.code,null,"IdentityFile"),")만을 사용할 건지 여부. 만약 값을 ",a.createElement(n.code,null,"no"),"로 하면, 키 파일을 가져오기 위해 ",a.createElement(n.code,null,"IdentityFile"),"의 위치를 확인하기에 ",a.createElement(n.strong,null,"앞서")," 시스템의 기본값(이 경우 ",a.createElement(n.code,null,"~/.ssh/id_ed25519"),"일 것이다.)을 먼저 확인한다고 한다."),"\n"),"\n"),"\n"),"\n",a.createElement(n.h3,null,"2.3. 로컬 리파지토리의 remote 주소 변경"),"\n",a.createElement(n.p,null,"자 이제 2.2. 항목에서 설정한 값을 가지고 리파지토리의 주소를 변경해주어야 한다."),"\n",a.createElement(n.p,null,"변경하는 방법은 간단하다. 기존 호스트명(",a.createElement(n.code,null,"github.com"),") 대신 우리가 위 설정파일에서 지정한 호스트명(",a.createElement(n.code,null,"Host github-my-company"),")를 적용해주면 된다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"## 원래 주소\n# git@github.com:ME/MY-REPOSITORY.git\n## 변경할 주소\n# git@github-private:ME/MY-REPOSITORY.git\n$ git remote set-url origin git@github-private:ME/MY-REPOSITORY.git\n")),"\n",a.createElement(n.p,null,"다른 쪽 리파지토리도 마찬가지다."),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-bash"},"## 원래 주소\n# git@github.com:COMPANY/COMPANY-REPOSITORY.git\n## 변경할 주소\n# git@github-my-company:COMPANY/COMPANY-REPOSITORY.git\n$ git remote set-url origin git@github-my-company:COMPANY/COMPANY-REPOSITORY.git\n")),"\n",a.createElement(n.p,null,"이제 양쪽 다 SSH 인증을 사용할 수 있다."),"\n",a.createElement(n.h2,null,"References"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"The GitHub Blog - ",a.createElement(n.a,{href:"https://github.blog/changelog/2021-08-12-git-password-authentication-is-shutting-down/"},"Git password authentication is shutting down")),"\n",a.createElement(n.li,null,"GitHub Docs - ",a.createElement(n.a,{href:"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent"},"Generating a new SSH key and adding it to the ssh-agent")),"\n",a.createElement(n.li,null,"GitHub Docs - ",a.createElement(n.a,{href:"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account"},"Adding a new SSH key to your GitHub account")),"\n",a.createElement(n.li,null,"Stack Overflow - ",a.createElement(n.a,{href:"https://stackoverflow.com/questions/7927750/specify-an-ssh-key-for-git-push-for-a-given-domain"},"Specify an SSH key for git push for a given domain")),"\n"))}var r,i=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?a.createElement(n,e,a.createElement(c,e)):c(e)},s=t(1880),u=t(1883),o=t(3723),m=t(1858),g=t(3904),h=t(891),d=t(5534),E=t(5777);const p=e=>{let{data:n,children:t}=e;const{title:l,date:c,tags:r,heroImage:i,heroImageAlt:s}=n.mdx.frontmatter,g=i?(0,o.c)(i):null;return a.createElement(m.Z,null,a.createElement("h1",null,l),a.createElement(b,null,r.map((e=>a.createElement("li",{key:e},a.createElement(u.rU,{to:"/tags/"+e},e))))),a.createElement("div",null,c),!!g&&a.createElement(o.G,{image:g,alt:null!=s?s:""}),a.createElement(d.Z,null,t),a.createElement(E.Z,null))},b=h.ZP.ul(r||(r=(0,s.Z)(["\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: ","px;\n\n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  > li {\n    padding: ","px ","px\n      0px;\n    border-radius: 2px;\n\n    background-color: ",";\n    color: ",";\n\n    > a {\n      text-decoration: none;\n    }\n  }\n"])),(e=>e.theme.dimens.gutter),(e=>e.theme.dimens.thin),(e=>e.theme.dimens.gutter),(e=>e.theme.colors.tag),(e=>e.theme.colors.onTag)),y=e=>{var n,t;let{data:l}=e;const{frontmatter:{title:c,slug:r,tags:i,heroImage:s},excerpt:u}=l.mdx,m=s?(0,o.c)(s):null;return a.createElement(g.Z,{title:c,description:u,path:"posts/"+r,thumbnail:null==m||null===(n=m.images)||void 0===n||null===(t=n.fallback)||void 0===t?void 0:t.src,keywords:i,ogType:"article"})};function f(e){return a.createElement(p,e,a.createElement(i,e))}}}]);
//# sourceMappingURL=component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2021-210901-github-ssh-multi-account-index-mdx-5b61a17c1836a2f4b1a4.js.map