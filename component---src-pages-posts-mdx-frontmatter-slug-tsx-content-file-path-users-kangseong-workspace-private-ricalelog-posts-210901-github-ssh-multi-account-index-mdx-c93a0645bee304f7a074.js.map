{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-210901-github-ssh-multi-account-index-mdx-c93a0645bee304f7a074.js","mappings":"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","sources":["webpack://ricalelog/./posts/210901-github-ssh-multi-account/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    h2: \"h2\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"얼마 전 \", React.createElement(_components.a, {\n    href: \"https://github.blog/changelog/2021-08-12-git-password-authentication-is-shutting-down/\"\n  }, \"GitHub 의 비밀번호 인증 방식이 중지\"), \"되었다. 이제는 pull, push 등 GitHub 에 인증이 필요한 액션을 할 때 비밀번호가 아닌 다른 인증 방식을 설정해야 한다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Instead, token-based authentication (for example, personal access, OAuth, SSH Key, or GitHub App installation token) will be required for all authenticated Git operations.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"그나마 익숙한 것이 무엇인가 살펴보았더니 SSH인 것 같았다. 그래서 SSH로 인증을 설정하기로 했다.\"), \"\\n\", React.createElement(_components.p, null, \"(이 글은 Mac 기준으로 작성되었다.)\"), \"\\n\", React.createElement(_components.h2, null, \"1. 하나의 계정에 대한 SSH 인증 설정\"), \"\\n\", React.createElement(_components.p, null, \"한 계정에 대한 설정 방법은 \", React.createElement(_components.a, {\n    href: \"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\"\n  }, \"GitHub 공식 문서\"), \"에 매우 잘 설명되어 있다. 영어가 불편하지 않다면 공식 문서를 보자.\"), \"\\n\", React.createElement(_components.p, null, \"일단 \", React.createElement(_components.code, null, \"ssh-keygen\"), \"을 사용해 인증서를 생성하자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"$ ssh-keygen -t ed25519 -C \\\"your_email@example.com\\\"\\nGenerating public/private ed25519 key pair.\\nEnter file in which to save the key (/Users/default/.ssh/id_ed25519):\\nEnter passphrase (empty for no passphrase):\\nEnter same passphrase again:\\n\")), \"\\n\", React.createElement(_components.p, null, \"경로를 지정하고 싶다면 \", React.createElement(_components.code, null, \"-f\"), \" 옵션을 주자\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"$ ssh-keygen -t ed25519 -C \\\"your_email@example.com\\\" -f ~/.ssh/myCompany/ed25519\\n\")), \"\\n\", React.createElement(_components.p, null, \"생성된 인증서를 key agent 에 등록시켜야 한다. ssh-agent 를 백그라운드에서 실행하자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"$ eval \\\"$(ssh-agent -s)\\\"\\n\")), \"\\n\", React.createElement(_components.p, null, \"설정에는 \", React.createElement(_components.code, null, \"~/.ssh/config\"), \" 파일이 필요한데, 맥의 경우 자동 생성되지 않았을 수 있다. 그 경우 파일을 직접 생성해서 아래와 같은 내용을 넣어야 한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Host *\\n  AddKeysToAgent yes\\n  UseKeychain yes\\n  IdentityFile ~/.ssh/id_ed25519\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"~/.ssh/config\"), \" 파일도 확인했으면 이제 아래 명령어를 통해 인증서를 ssh-agent 에 추가하자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"$ ssh-add -K ~/.ssh/id_ed25519\\n\")), \"\\n\", React.createElement(_components.p, null, \"GitHub에 인증서를 등록하려면 아래 명령어를 통해 공개키를 클립보드로 복사해서 사용하면 된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"$ pbcopy < ~/.ssh/id_ed25519.pub\\n\")), \"\\n\", React.createElement(_components.p, null, \"복사한 공개키는 GitHub [Settings] - [SSH and GPG keys] - [New SSH key] 를 통해 등록하자.\"), \"\\n\", React.createElement(_components.p, null, \"여기까지 하면 이제 리파지토리의 SSH 주소를 remote 로 사용해 코드를 push/pull 할 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"$ git remote set-url origin git@github.com:ME/MY_REPOSITORY.git\\n\")), \"\\n\", React.createElement(_components.h2, null, \"2. 여러 계정의 SSH 설정을 한 기기에서 같이 하기\"), \"\\n\", React.createElement(_components.p, null, \"한 사람이 GitHub 계정을 여러 개 가지고 있을 수도 있다. 예를 들면 개인 계정과 회사 계정을 분리한 경우가 있을 수 있다. 그리고 사람 일이 늘 그렇듯, 한 기기에서 개인 일과 회사 일을 다 해야 하는 경우가 생길 수도 있다. 그럴 경우에는 어떻게 설정해주면 될까?\"), \"\\n\", React.createElement(_components.p, null, \"거의 모든 과정이 1번과 동일하다. 다른 것은 키가 저장될 위치, \", React.createElement(_components.code, null, \"~/.ssh/config\"), \", 그리고 로컬 리파지토리의 remote 주소이다.\"), \"\\n\", React.createElement(_components.h3, null, \"2.1. 키가 저장될 위치\"), \"\\n\", React.createElement(_components.p, null, \"키가 저장될 위치가 다른 것은 당연하다. 다른 두 파일을 하나의 위치에 같이 저장할 수는 없으니까. 일단 처음에 저장된 것은 기본 위치에 두고, 추후 추가되는 것을 다른 위치에 저장해보자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"# 처음에 저장된 SSH 키의 위치. (기본값)\\n~/.ssh/id_ed25519\\n~/.ssh/id_ed25519.pub\\n# 이후 추가한 SSH 키의 위치.\\n# 당연하지만 다른 디렉토리의 다른 파일명으로 저장해도 무방하다.\\n~/.ssh/myCompany/id_ed25519\\n~/.ssh/myCompany/id_ed25519.pub\\n\")), \"\\n\", React.createElement(_components.p, null, \"자신이 원하는 아무 곳에나 저장하면 된다.\"), \"\\n\", React.createElement(_components.h3, null, \"2.2. \", React.createElement(_components.code, null, \"~/.ssh/config\")), \"\\n\", React.createElement(_components.p, null, \"저장된 위치를 설정 파일에 반영하자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Host github-private\\n  hostName github.com\\n  IdentityFile ~/.ssh/id_ed25519\\n  User git\\n  IdentitiesOnly yes\\n\\nHost github-my-company\\n  hostName github.com\\n  IdentityFile ~/.ssh/myCompany/id_ed25519\\n  User git\\n  IdentitiesOnly yes\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"Host\"), \": 본래 호스트명 대신 사용할 호스트명. alias 라고 이해하면 쉽다. 원하는 이름으로 하면 된다. (사용 예는 2.3. 에서 확인할 수 있다.)\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"hostName\"), \": git 서비스의 호스트명\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"IdentityFile\"), \": 인증 파일 경로\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"IdentitiesOnly\"), \": 인증 파일 경로를 확인함에 있어 내가 지정한 값(\", React.createElement(_components.code, null, \"IdentityFile\"), \")만을 사용할 건지 여부. 만약 값을 \", React.createElement(_components.code, null, \"no\"), \"로 하면, 키 파일을 가져오기 위해 \", React.createElement(_components.code, null, \"IdentityFile\"), \"의 위치를 확인하기에 \", React.createElement(_components.strong, null, \"앞서\"), \" 시스템의 기본값(이 경우 \", React.createElement(_components.code, null, \"~/.ssh/id_ed25519\"), \"일 것이다.)을 먼저 확인한다고 한다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"2.3. 로컬 리파지토리의 remote 주소 변경\"), \"\\n\", React.createElement(_components.p, null, \"자 이제 2.2. 항목에서 설정한 값을 가지고 리파지토리의 주소를 변경해주어야 한다.\"), \"\\n\", React.createElement(_components.p, null, \"변경하는 방법은 간단하다. 기존 호스트명(\", React.createElement(_components.code, null, \"github.com\"), \") 대신 우리가 위 설정파일에서 지정한 호스트명(\", React.createElement(_components.code, null, \"Host github-my-company\"), \")를 적용해주면 된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"## 원래 주소\\n# git@github.com:ME/MY-REPOSITORY.git\\n## 변경할 주소\\n# git@github-private:ME/MY-REPOSITORY.git\\n$ git remote set-url origin git@github-private:ME/MY-REPOSITORY.git\\n\")), \"\\n\", React.createElement(_components.p, null, \"다른 쪽 리파지토리도 마찬가지다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-bash\"\n  }, \"## 원래 주소\\n# git@github.com:COMPANY/COMPANY-REPOSITORY.git\\n## 변경할 주소\\n# git@github-my-company:COMPANY/COMPANY-REPOSITORY.git\\n$ git remote set-url origin git@github-my-company:COMPANY/COMPANY-REPOSITORY.git\\n\")), \"\\n\", React.createElement(_components.p, null, \"이제 양쪽 다 SSH 인증을 사용할 수 있다.\"), \"\\n\", React.createElement(_components.h2, null, \"References\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"The GitHub Blog - \", React.createElement(_components.a, {\n    href: \"https://github.blog/changelog/2021-08-12-git-password-authentication-is-shutting-down/\"\n  }, \"Git password authentication is shutting down\")), \"\\n\", React.createElement(_components.li, null, \"GitHub Docs - \", React.createElement(_components.a, {\n    href: \"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\"\n  }, \"Generating a new SSH key and adding it to the ssh-agent\")), \"\\n\", React.createElement(_components.li, null, \"GitHub Docs - \", React.createElement(_components.a, {\n    href: \"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account\"\n  }, \"Adding a new SSH key to your GitHub account\")), \"\\n\", React.createElement(_components.li, null, \"Stack Overflow - \", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/7927750/specify-an-ssh-key-for-git-push-for-a-given-domain\"\n  }, \"Specify an SSH key for git push for a given domain\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/210901-github-ssh-multi-account/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {title, date, tags, heroImage, heroImageAlt} = data.mdx.frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  console.log(\"image\", image);\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, title), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag)))), React.createElement(\"div\", null, date), !!image && React.createElement(GatsbyImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children));\n};\nconst Tags = styled.ul(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px \", \"px\\n      0px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.thin, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"3533977744\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, heroImage}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    og: {\n      title: title,\n      path: slug,\n      type: \"article\",\n      description: excerpt,\n      image: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src\n    }\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","blockquote","h2","code","pre","h3","ul","li","strong","_provideComponents","components","React","href","className","_templateObject","wrapper","MDXLayout","PostDetailPage","_ref","data","children","title","date","tags","heroImage","heroImageAlt","mdx","frontmatter","image","getImage","console","log","Layout","Tags","map","tag","key","Link","to","GatsbyImage","alt","MdxContent","styled","_taggedTemplateLiteralLoose","theme","dimens","gutter","thin","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","slug","excerpt","Seo","og","path","type","description","images","fallback","src","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}