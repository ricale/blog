{"version":3,"file":"component---src-pages-posts-index-tsx-907d7d62cb7318f4e7cb.js","mappings":"qJAoBA,MAAMA,EAAYC,EAAAA,GAAAA,IAAU,sIAStBC,EAAWD,EAAAA,GAAAA,EAAQ,sBAEnBE,EAAWF,EAAAA,GAAAA,IAAU,gOAerBG,EAAOH,EAAAA,GAAAA,EAAQ,wEAKrB,IA3CA,SAAwB,GAAiD,IAAjD,MAAEI,EAAK,SAAEC,EAAQ,KAAEC,GAA2B,EACpE,OACEC,EAAAA,cAACR,EAAS,OACLM,GAAYE,EAAAA,cAACN,EAAQ,KAAEI,GAC1BE,EAAAA,cAACL,EAAQ,KACPK,EAAAA,cAAAA,KAAAA,KAAKH,KACFE,GAAQC,EAAAA,cAACJ,EAAI,SAAMG,EAAI,MAIlC,C,sHCeA,MAAMP,EAAYC,EAAAA,GAAAA,IAAU,0KAatBQ,EAAmBR,EAAAA,GAAAA,IAAU,kHAS7BS,GAAiBT,EAAAA,EAAAA,IAAOU,EAAAA,EAAPV,CAAmB,+EAMpCW,EAAOX,EAAAA,GAAAA,IAAU,iGASjBC,EAAWD,EAAAA,GAAAA,IAAU,oEAK3B,I,EAAA,EAhEA,SAAsB,GAMC,IAND,MACpBI,EAAK,KACLQ,EAAI,KACJC,EAAI,UACJC,EAAS,aACTC,GACkB,EAClB,MAAMC,EAAQF,GAAYG,EAAAA,EAAAA,GAASH,GAAa,KAC1CI,EAZoB,iBAYNL,EACpB,OACEN,EAAAA,cAACR,EAAS,CAACoB,QAAS,KAAMC,EAAAA,EAAAA,UAAS,UAAUR,IAC3CL,EAAAA,cAACC,EAAgB,OACZQ,GAAST,EAAAA,cAACE,EAAc,CAACO,MAAOA,EAAOK,IAAKN,QAAAA,EAAgB,MAEjER,EAAAA,cAACI,EAAI,KACHJ,EAAAA,cAAAA,KAAAA,KAAKH,GACLG,EAAAA,cAACN,EAAQ,KAAEiB,EAAcL,EAAOD,IAIxC,ECZA,MAAMb,EAAYC,EAAAA,GAAAA,IAAU,mFAM5B,MAhBA,SAAkB,GAA0B,IAA1B,KAAEsB,GAAqB,EACvC,OACEf,EAAAA,cAACR,EAAS,KACPuB,EAAKC,KAAI,CAAC,EAAaC,KAAC,OAATC,GAAM,SACpBlB,EAAAA,cAACmB,EAAY,eAACC,IAAKH,GAAOC,GAAQ,IAI1C,C,qBCXA,IAJA,SAAkBG,GAChB,OAAOA,EAAOL,KAAKE,IAAI,IAAWA,EAAKI,eACzC,C,iICqBO,MAuBMC,EAAO,IAAMvB,EAAAA,cAACwB,EAAAA,EAAG,CAAC3B,MAAM,SAErC,UAnCA,SAAmB,GAAoC,IAApC,KAAEkB,GAAgC,EACnD,MAAMU,GAAQC,EAAAA,EAAAA,GAASX,EAAKY,OAAOC,OACnC,OACE5B,EAAAA,cAAC6B,EAAAA,EAAM,KACL7B,EAAAA,cAAC8B,EAAAA,EAAc,CAACjC,MAAM,IAAIE,KAAM0B,EAAMM,SACtC/B,EAAAA,cAACgC,EAAAA,EAAQ,CAACjB,KAAMU,IAGtB,C","sources":["webpack://ricalelog/./src/components/ListPageHeader.tsx","webpack://ricalelog/./src/components/PostList/PostListItem.tsx","webpack://ricalelog/./src/components/PostList/index.tsx","webpack://ricalelog/./src/getters/getPosts.ts","webpack://ricalelog/./src/pages/posts/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from \"../themes\";\n\ntype ListPageHeaderProps = {\n  title: string;\n  subtitle?: string;\n  note?: string | number;\n};\nfunction ListPageHeader({ title, subtitle, note }: ListPageHeaderProps) {\n  return (\n    <Container>\n      {!!subtitle && <Subtitle>{subtitle}</Subtitle>}\n      <TitleRow>\n        <h1>{title}</h1>\n        {!!note && <Note>{`(${note})`}</Note>}\n      </TitleRow>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 40px 0 45px;\n  padding-left: 40px;\n\n  @media (max-width: 500px) {\n    padding-left: 20px;\n  }\n`;\n\nconst Subtitle = styled.p``;\n\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n\n  & > h1 {\n    word-break: keep-all;\n  }\n\n  @media (max-width: 500px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst Note = styled.p`\n  margin-bottom: 8px;\n  font-size: 0.9375rem;\n`;\n\nexport default ListPageHeader;\n","import * as React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport styled from \"../../themes\";\nimport { Post } from \"../../types\";\n\nconst INVALID_DATE_STRING = \"Invalid date\";\n\ntype PostListItemProps = Post;\n\nfunction PostListItem({\n  title,\n  slug,\n  date,\n  heroImage,\n  heroImageAlt,\n}: PostListItemProps) {\n  const image = heroImage ? getImage(heroImage) : null;\n  const dateIsValid = date !== INVALID_DATE_STRING;\n  return (\n    <Container onClick={() => navigate(`/posts/${slug}`)}>\n      <ThumbnailWrapper>\n        {!!image && <ThumbnailImage image={image} alt={heroImageAlt ?? \"\"} />}\n      </ThumbnailWrapper>\n      <Info>\n        <h2>{title}</h2>\n        <Subtitle>{dateIsValid ? date : slug}</Subtitle>\n      </Info>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 2px;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: #666666;\n  }\n`;\n\nconst ThumbnailWrapper = styled.div`\n  position: relative;\n\n  width: 60px;\n  height: 60px;\n\n  background-color: #222222;\n`;\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst Info = styled.div`\n  flex: 1;\n\n  & > h2 {\n    margin: 0;\n    font-size: 1.125rem;\n  }\n`;\n\nconst Subtitle = styled.div`\n  font-size: 0.8125rem;\n  color: #dddddd;\n`;\n\nexport default PostListItem;\n","import * as React from \"react\";\n\nimport styled from \"../../themes\";\nimport { Post } from \"../../types\";\nimport PostListItem from \"./PostListItem\";\n\ntype PostListProps = {\n  data: Post[];\n};\nfunction PostList({ data }: PostListProps) {\n  return (\n    <Container>\n      {data.map(({ ...item }, i) => (\n        <PostListItem key={i} {...item} />\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport default PostList;\n","import { Post, PostSource } from \"../types\";\n\nfunction getPosts(source: PostSource[]): Post[] {\n  return source.map((item) => ({ ...item.frontmatter }));\n}\n\nexport default getPosts;\n","import * as React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport ListPageHeader from \"../../components/ListPageHeader\";\nimport { PostSource } from \"../../types\";\nimport PostList from \"../../components/PostList\";\nimport getPosts from \"../../getters/getPosts\";\n\ntype PostsPageData = {\n  allMdx: {\n    nodes: PostSource[];\n  };\n};\nfunction PostsPage({ data }: PageProps<PostsPageData>) {\n  const posts = getPosts(data.allMdx.nodes);\n  return (\n    <Layout>\n      <ListPageHeader title=\"글\" note={posts.length} />\n      <PostList data={posts} />\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMdx(\n      filter: { frontmatter: { date: { ne: \"\" } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          slug\n          date(formatString: \"YYYY. M. D.\")\n          heroImageAlt\n          heroImage {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title=\"모든 글\" />;\n\nexport default PostsPage;\n"],"names":["Container","styled","Subtitle","TitleRow","Note","title","subtitle","note","React","ThumbnailWrapper","ThumbnailImage","GatsbyImage","Info","slug","date","heroImage","heroImageAlt","image","getImage","dateIsValid","onClick","navigate","alt","data","map","i","item","PostListItem","key","source","frontmatter","Head","Seo","posts","getPosts","allMdx","nodes","Layout","ListPageHeader","length","PostList"],"sourceRoot":""}