{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2022-220226-mui-custom-theme-typescript-index-mdx-24f055ff2735f1aab36f.js","mappings":"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","sources":["webpack://ricalelog/./posts/2022/220226-mui-custom-theme-typescript/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"타입스크립트 환경에서 \", React.createElement(_components.a, {\n    href: \"https://mui.com/\"\n  }, \"MUI\"), \" 의 테마에 필드를 추가하려면 타입스크립트 또한 추가적인 타입 선언이 필요하다. 어떻게 하면 되는지 유형별로 간단히 살펴보자.\"), \"\\n\", React.createElement(_components.h3, null, \"References\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://mui.com/getting-started/installation/\"\n  }, \"MUI Docs\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://mui.com/customization/theming/#custom-variables\"\n  }, \"Theming - Custom variables\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://mui.com/customization/palette/#adding-new-colors\"\n  }, \"Palette - Adding new colors\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"StackOverflow \", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/66080451/add-property-to-background-prop-in-createmuitheme-in-material-ui-using-typescrip\"\n  }, \"Add property to background prop in createMuiTheme in Material-UI using Typescript\")), \"\\n\", React.createElement(_components.li, null, \"GitHub \", React.createElement(_components.a, {\n    href: \"https://github.com/mui/material-ui\"\n  }, \"mui/material-ui\"), \" - \", React.createElement(_components.a, {\n    href: \"https://github.com/mui/material-ui/blob/master/packages/mui-material/src/styles/createPalette.d.ts\"\n  }, \"createPalette.d.ts\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"1. 테마에 커스텀 필드 추가\"), \"\\n\", React.createElement(_components.p, null, \"테마에 기존에 존재하지 않는 새로운 필드를 추가할 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"const theme = createTheme({\\n  status: {\\n    danger: orange[500],\\n  },\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"이것을 위한 타입스크립트 타입 선언은 경우에는 아래처럼 해주면 된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"declare module \\\"@mui/material/styles\\\" {\\n  interface Theme {\\n    status: {\\n      danger: string;\\n    };\\n  }\\n  interface ThemeOptions {\\n    status?: {\\n      danger?: string;\\n    };\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"2. 테마 Palette 에 커스텀 필드 추가\"), \"\\n\", React.createElement(_components.p, null, \"테마의 palatte 에 색상을 추가하면 \", React.createElement(_components.code, null, \"color\"), \", \", React.createElement(_components.code, null, \"sx\"), \" prop 등에서 이름만으로 색상을 지정할 수 있게 된다. 아래 코드처럼 \", React.createElement(_components.code, null, \"palette.neutral\"), \"을 추가한다면,\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"const theme = createTheme({\\n  palette: {\\n    neutral: {\\n      main: \\\"#64748B\\\",\\n      contrastText: \\\"#fff\\\",\\n    },\\n  },\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"타입스크립트는 아래처럼 해주면 된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"declare module \\\"@mui/material/styles\\\" {\\n  interface Palette {\\n    neutral: Palette[\\\"primary\\\"];\\n  }\\n  interface PaletteOptions {\\n    neutral: PaletteOptions[\\\"primary\\\"];\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"이걸로 끝이면 좋겠지만, 특정 컴포넌트의 \", React.createElement(_components.code, null, \"color\"), \" 속성에서도 위에서 추가한 색상을 쓰고 싶다면, 해당 컴포넌트에 관한 타입 추가 선언을 해주어야 한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"// Button 의 color prop 에서 neutral 을 쓰고 싶을 경우\\ndeclare module \\\"@mui/material/Button\\\" {\\n  interface ButtonPropsColorOverrides {\\n    neutral: true;\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"3. 테마 Palette 의 특정 색상에 필드 추가\"), \"\\n\", React.createElement(_components.p, null, \"Palette 의 특정 색상에 필드를 추가하고 싶을 수 있다. 아래는 \", React.createElement(_components.code, null, \"palette.primary.darker\"), \", \", React.createElement(_components.code, null, \"palette.background.contrastText\"), \" 를 추가했다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"const normalTheme = createTheme({\\n  palette: {\\n    primary: {\\n      main: \\\"#0971f1\\\",\\n      darker: \\\"#053e85\\\",\\n    },\\n    background: {\\n      default: \\\"#E4E7EB\\\",\\n      contrastText: \\\"#000000\\\",\\n    },\\n  },\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"속성을 추가하려는 색상이 \", React.createElement(_components.code, null, \"primary\"), \", \", React.createElement(_components.code, null, \"secondary\"), \", \", React.createElement(_components.code, null, \"error\"), \", \", React.createElement(_components.code, null, \"warning\"), \", \", React.createElement(_components.code, null, \"info\"), \", \", React.createElement(_components.code, null, \"success\"), \" 중 하나라면, 이 색상들은 타입을 공유하기 때문에 아래처럼 타입을 지정하면 된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"declare module \\\"@mui/material/styles\\\" {\\n  interface PaletteColor {\\n    darker?: string;\\n  }\\n  interface SimplePaletteColorOptions {\\n    darker?: string;\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"하지만 \", React.createElement(_components.code, null, \"background\"), \" 의 경우 다른 타입을 사용하므로 아래처럼 해주어야 한다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"declare module \\\"@mui/material/styles/createPalette\\\" {\\n  interface TypeBackground {\\n    default: string;\\n    paper: string;\\n    contrastText: string;\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"어떤 색상이 어떤 타입을 사용하는지 알고 싶다면 \", React.createElement(_components.a, {\n    href: \"https://github.com/mui/material-ui/blob/master/packages/mui-material/src/styles/createPalette.d.ts\"\n  }, \"createPalette.d.ts\"), \" 코드를 보면 된다. 아래처럼 나와있으니 참고해서 타입 지정을 해주면 된다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"export interface PaletteOptions {\\n  primary?: PaletteColorOptions;\\n  secondary?: PaletteColorOptions;\\n  error?: PaletteColorOptions;\\n  warning?: PaletteColorOptions;\\n  info?: PaletteColorOptions;\\n  success?: PaletteColorOptions;\\n  mode?: PaletteMode;\\n  tonalOffset?: PaletteTonalOffset;\\n  contrastThreshold?: number;\\n  common?: Partial<CommonColors>;\\n  grey?: ColorPartial;\\n  text?: Partial<TypeText>;\\n  divider?: string;\\n  action?: Partial<TypeAction>;\\n  background?: Partial<TypeBackground>;\\n  getContrastText?: (background: string) => string;\\n}\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2022/220226-mui-custom-theme-typescript/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {title, date, tags, heroImage, heroImageAlt} = data.mdx.frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, title), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag)))), React.createElement(\"div\", null, date), !!image && React.createElement(GatsbyImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children), React.createElement(Comments, null));\n};\nconst Tags = styled.ul(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px \", \"px\\n      0px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.thin, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"3533977744\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","h3","ul","li","h2","pre","code","_provideComponents","components","React","href","className","_templateObject","wrapper","MDXLayout","PostDetailPage","_ref","data","children","title","date","tags","heroImage","heroImageAlt","mdx","frontmatter","image","getImage","Layout","Tags","map","tag","key","Link","to","GatsbyImage","alt","MdxContent","Comments","styled","_taggedTemplateLiteralLoose","theme","dimens","gutter","thin","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","slug","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}