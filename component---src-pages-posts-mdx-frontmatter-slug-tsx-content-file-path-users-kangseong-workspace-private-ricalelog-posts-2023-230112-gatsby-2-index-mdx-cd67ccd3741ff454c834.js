"use strict";(self.webpackChunkricalelog=self.webpackChunkricalelog||[]).push([[4207],{4387:function(n,a,e){e.r(a),e.d(a,{Head:function(){return I},default:function(){return _}});var t=e(1151),s=e(7294);function l(n){const a=Object.assign({p:"p",h1:"h1",code:"code",a:"a",h2:"h2",div:"div",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,t.ah)(),n.components);return s.createElement(s.Fragment,null,s.createElement(a.p,null,"이전 글에서는 Gatsby 기본 기능을 구현을 위한 튜토리얼을 소개했고 태그 기능을 구현했다. 오늘은 MDX 글 안에 인라인 이미지와 테이블을 삽입해보자."),"\n",s.createElement(a.h1,null,"1. 이미지 삽입"),"\n",s.createElement(a.p,null,"정적 이미지는 ",s.createElement(a.code,null,"gatsby-plugin-image")," 플러그인과 ",s.createElement(a.code,null,"StaticImage")," 컴포넌트로 적용한다. 페이지 컴포넌트에 들어가는 동적 이미지는 ",s.createElement(a.code,null,"gatsby-transformer-sharp")," 플러그인과 ",s.createElement(a.code,null,"GatsbyImage")," 컴포넌트로 적용한다. 그렇다면 MDX 본문 안에 들어가는 이미지는 어떻게 적용할까?"),"\n",s.createElement(a.p,null,s.createElement(a.a,{href:"https://www.gatsbyjs.com/docs/how-to/images-and-media/working-with-images-in-markdown/"},"공식 문서"),"에도 잘 나와있지만 그럼에도 불구하고 적용에 살짝 애를 먹었기 때문에 기록해두도록 하겠다."),"\n",s.createElement(a.h2,null,"1.1. ",s.createElement(a.code,null,"gatsby-remark-images")," 플러그인 적용"),"\n",s.createElement(a.p,null,"일단 플러그인을 설치하자."),"\n",s.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="sh"><pre class="language-sh"><code class="language-sh">$ <span class="token function">npm</span> i gatsby-remark-images</code></pre></div>'}}),"\n",s.createElement(a.p,null,"그리고 ",s.createElement(a.code,null,"gatsby-config.ts")," 를 수정하자."),"\n",s.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token comment">// gatsby-config.ts</span>\n<span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> GatsbyConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"gatsby"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> config<span class="token operator">:</span> GatsbyConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// ...</span>\n    <span class="token comment">// "gatsby-plugin-mdx", // &lt;- 이렇게 문자열 형식으로 gatsby-plugin-mdx 를 쓰고 있었다면, 이 줄은 삭제하자.</span>\n    <span class="token punctuation">{</span>\n      resolve<span class="token operator">:</span> <span class="token string">"gatsby-plugin-mdx"</span><span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        gatsbyRemarkPlugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            resolve<span class="token operator">:</span> <span class="token string">"gatsby-remark-images"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              maxWidth<span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>\n              backgroundColor<span class="token operator">:</span> <span class="token string">"none"</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// ....</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(a.h2,null,"1.2. MDX 에 인라인 이미지 사용"),"\n",s.createElement(a.p,null,s.createElement(a.a,{href:"https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/#mdxoptions"},"https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/#mdxoptions")),"\n",s.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="mdx"><pre class="language-mdx"><code class="language-mdx">![Alt message](./screenshot.png)</code></pre></div>'}}),"\n",s.createElement(a.h1,null,"2. 인라인 테이블 문법 적용"),"\n",s.createElement(a.p,null,"Markdown 은 원래 아래와 같은 문법으로 테이블을 삽입할 수 있다."),"\n",s.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="mdx"><pre class="language-mdx"><code class="language-mdx">| 호스트명     | IP 주소         |\n| ------------ | --------------- |\n| mydomain.com | 111.111.111.222 |\n| mydomain.com | 111.111.222.111 |\n| mydomain.com | 111.222.111.111 |\n| mydomain.com | 222.111.111.111 |</code></pre></div>'}}),"\n",s.createElement(a.p,null,"...있는 줄 알았다. 그런데 알고 보니 이 문법은 원래 마크다운 기본 문법이 아니라 GitHub 에서 만든 ",s.createElement(a.a,{href:"https://github.github.com/gfm/"},"GitHub Flavored Markdown"),"(GFM) 스펙에서 지원하는 문법이었다. 당연히 MDX 에서도 기본적으로 적용되지 않는다. 하지만 다행히도 Gatsby 에서 GFM 을 적용할 수 있는 방법을 제공한다."),"\n",s.createElement(a.h2,null,"2.1. ",s.createElement(a.code,null,"remark-gfm")," 플러그인 적용"),"\n",s.createElement(a.p,null,"일단 플러그인을 설치하자."),"\n",s.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="sh"><pre class="language-sh"><code class="language-sh">$ <span class="token function">npm</span> i remark-gfm@^1</code></pre></div>'}}),"\n",s.createElement(a.p,null,"여기서 버전 1을 설치하는 이유는 Gatsby 가 ESM 을 아직 지원하지 않는데, remark-gfm 버전 2부터는 ESM 이기 때문이다. ",s.createElement(a.a,{href:"https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/#mdxoptions"},"공식 문서"),"에도 잘 설명되어 있다. (mdxOptions 섹션의 Please Note 부분을 보자.)"),"\n",s.createElement(a.p,null,"그리고 ",s.createElement(a.code,null,"gatsby-config.ts")," 에 플러그인을 적용하자."),"\n",s.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token keyword">import</span> <span class="token keyword">type</span> <span class="token punctuation">{</span> GatsbyConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"gatsby"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> config<span class="token operator">:</span> GatsbyConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// ...</span>\n    <span class="token punctuation">{</span>\n      resolve<span class="token operator">:</span> <span class="token string">"gatsby-plugin-mdx"</span><span class="token punctuation">,</span>\n      options<span class="token operator">:</span> <span class="token punctuation">{</span>\n        mdxOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n          remarkPlugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">"remark-gfm"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token comment">// ...</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token comment">// ...</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(a.h2,null,"2.2. MDX 에 테이블 사용"),"\n",s.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="mdx"><pre class="language-mdx"><code class="language-mdx">| 호스트명     | IP 주소         |\n| ------------ | --------------- |\n| mydomain.com | 111.111.111.222 |\n| mydomain.com | 111.111.222.111 |\n| mydomain.com | 111.222.111.111 |\n| mydomain.com | 222.111.111.111 |</code></pre></div>'}}),"\n",s.createElement(a.table,null,s.createElement(a.thead,null,s.createElement(a.tr,null,s.createElement(a.th,null,"호스트명"),s.createElement(a.th,null,"IP 주소"))),s.createElement(a.tbody,null,s.createElement(a.tr,null,s.createElement(a.td,null,"mydomain.com"),s.createElement(a.td,null,"111.111.111.222")),s.createElement(a.tr,null,s.createElement(a.td,null,"mydomain.com"),s.createElement(a.td,null,"111.111.222.111")),s.createElement(a.tr,null,s.createElement(a.td,null,"mydomain.com"),s.createElement(a.td,null,"111.222.111.111")),s.createElement(a.tr,null,s.createElement(a.td,null,"mydomain.com"),s.createElement(a.td,null,"222.111.111.111")))))}var o,p,c,r,u=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.ah)(),n.components);return a?s.createElement(a,n,s.createElement(l,n)):l(n)},m=e(1880),i=e(1883),g=e(3723),d=e(1858),k=e(3904),h=e(891),y=e(5534),E=e(5777),b=e(7178);const f=n=>{let{data:a,children:e}=n;const{frontmatter:t,sameSeriesPosts:l}=a.mdx,{title:o,slug:p,date:c,tags:r,series:u,heroImage:m,heroImageAlt:k}=t,h=m?(0,g.c)(m):null;return s.createElement(d.Z,null,s.createElement(w,null,s.createElement("h1",null,o),s.createElement(v,null,c),s.createElement(M,null,r.map((n=>s.createElement("li",{key:n},s.createElement(i.rU,{to:"/tags/"+n},n)))))),s.createElement(b.Z,{name:u,data:l,current:p}),!!h&&s.createElement(x,{image:h,alt:null!=k?k:""}),s.createElement(y.Z,null,e),s.createElement(E.Z,null))},w=h.ZP.div(o||(o=(0,m.Z)(["\n  margin: 60px 0 72px;\n  padding: 0 24px;\n\n  & > h1 {\n    font-size: 2.5rem;\n    word-break: keep-all;\n    margin: 0;\n  }\n"]))),x=(0,h.ZP)(g.G)(p||(p=(0,m.Z)(["\n  margin-bottom: 16px;\n"]))),v=h.ZP.div(c||(c=(0,m.Z)(["\n  margin: 16px 0;\n"]))),M=h.ZP.ul(r||(r=(0,m.Z)(["\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: ","px;\n\n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  > li {\n    padding: ","px\n      ","px;\n    border-radius: 2px;\n\n    background-color: ",";\n    color: ",";\n\n    > a {\n      text-decoration: none;\n    }\n  }\n"])),(n=>n.theme.dimens.gutter),(n=>n.theme.dimens.spacing),(n=>n.theme.dimens.gutter),(n=>n.theme.colors.tag),(n=>n.theme.colors.onTag)),I=n=>{var a,e;let{data:t}=n;const{frontmatter:{title:l,slug:o,tags:p,heroImage:c,previewContent:r},excerpt:u}=t.mdx,m=c?(0,g.c)(c):null;return s.createElement(k.Z,{title:l,description:null!=r?r:u,path:"posts/"+o,thumbnail:null==m||null===(a=m.images)||void 0===a||null===(e=a.fallback)||void 0===e?void 0:e.src,keywords:p,ogType:"article"})};function _(n){return s.createElement(f,n,s.createElement(u,n))}}}]);
//# sourceMappingURL=component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2023-230112-gatsby-2-index-mdx-cd67ccd3741ff454c834.js.map