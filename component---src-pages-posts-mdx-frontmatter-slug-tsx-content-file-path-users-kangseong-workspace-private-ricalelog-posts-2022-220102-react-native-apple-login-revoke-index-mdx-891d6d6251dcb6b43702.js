"use strict";(self.webpackChunkricalelog=self.webpackChunkricalelog||[]).push([[9405],{5356:function(n,a,s){s.r(a),s.d(a,{Head:function(){return S},default:function(){return x}});var e=s(1151),t=s(7294);function p(n){const a=Object.assign({h2:"h2",p:"p",ul:"ul",li:"li",a:"a",code:"code",h3:"h3",blockquote:"blockquote",h4:"h4",div:"div"},(0,e.ah)(),n.components);return t.createElement(t.Fragment,null,t.createElement(a.h2,null,"1. 서두"),"\n",t.createElement(a.p,null,"토이 프로젝트에서 아래 라이브러리를 사용해 소셜 로그인을 구현하고 있다."),"\n",t.createElement(a.ul,null,"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"https://www.npmjs.com/package/@react-native-firebase/app"},"@react-native-firebase/app"),": React Native Firebase 코어 모듈"),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"https://www.npmjs.com/package/@react-native-firebase/auth"},"@react-native-firebase/auth"),": React Native Firebase Authentication 모듈"),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"https://github.com/react-native-google-signin/google-signin"},"@react-native-google-signin/google-signin"),": React Native 구글 소셜 로그인 라이브러리"),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"https://github.com/invertase/react-native-apple-authentication"},"@invertase/react-native-apple-authentication"),": React Native 애플 소셜 로그인 라이브러리"),"\n"),"\n",t.createElement(a.p,null,"이 글에서는 애플 소셜 로그인에서도 탈퇴(앱과 연결 끊기) 기능 구현을 정리한다. 탈퇴는 사용자에게 당연히 제공되어야 하는 사용자의 권리다. 뭐 필수 기능이니 구현하는 데 어려울 건 없을 것이다. 아마 라이브러리에 ",t.createElement(a.code,null,"탈퇴하기()")," 같은 메서드가 있을 것이고 우리는 그걸 호출하기만 하면 될 것이다. 아주 쉽다. 자 시작해보자. ...어? 아니네?"),"\n",t.createElement(a.h3,null,"1.1. 엥? 로그인은? 로그아웃은? 구글은?"),"\n",t.createElement(a.p,null,"애플 소셜 로그인/로그아웃, 구글 소셜 로그인/로그아웃/탈퇴 기능 구현에는 특별한 이슈가 없다. 개발자가 상상하고 있는 거의 그대로 메서드가 나와있고 우리는 호출하기만 되는 형태다. 일부 콜백을 사용해야 하긴 하지만 큰 문제는 아니다. 따라서 일단은 이슈가 있다고 생각되는 애플 쪽의 탈퇴 기능을 먼저 정리한다. (나머지 기능들은 나중에 정리할 수도 있다.) 일단은 공식문서들을 참고하시라."),"\n",t.createElement(a.ul,null,"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"https://rnfirebase.io/auth/usage"},"React Native Firebase - Authentication")),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"https://github.com/react-native-google-signin/google-signin"},"Github - react-native-google-signin/google-signin")),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"https://github.com/invertase/react-native-apple-authentication"},"GitHub - invertase/react-native-apple-authentication")),"\n"),"\n",t.createElement(a.h2,null,"2. 구현"),"\n",t.createElement(a.h3,null,"2.1. ",t.createElement(a.code,null,"onCredentialRevoked()")),"\n",t.createElement(a.p,null,"일단 ",t.createElement(a.a,{href:"https://github.com/invertase/react-native-apple-authentication"},"@invertase/react-native-apple-authentication")," 라이브러리의 README 를 찬찬히 살펴봐도 탈퇴를 위한 메서드는 존재하지 않는다. (구글 쪽 라이브러리에서는 ",t.createElement(a.code,null,"revokeAccess()"),"라는 메서드를 제공하는 것과 대조적이다.) 그나마 탈퇴 쪽과 관련된 메서드라면 ",t.createElement(a.code,null,"onCredentialRevoked(listener)")," 가 있다. 이 메서드는 사용자가 탈퇴되었을 때 실행되는 콜백을 등록하게 해준다."),"\n",t.createElement(a.p,null,"여기서 평소 iOS 를 사용하지 않는 사람들은 당황할 수 있다 (내가 그랬다). 탈퇴 기능은 제공하지 않지만 탈퇴 상태를 들을 수 있는 이벤트 리스너만 제공하고 있는 것이다. 그럼 대체 탈퇴는 어떻게 하는 거야?"),"\n",t.createElement(a.p,null,"다행히 답은 멀리 있지 않다. 애플은 iOS 기기 내에서 특정 앱과의 연결을 끊을 수 있는 (탈퇴할 수 있는) 기능을 제공한다. (apple.com 에서도 제공하는 것으로 알고 있다. 확인해보지는 않았다.)"),"\n",t.createElement(a.blockquote,null,"\n",t.createElement(a.p,null,"iOS 기기의 [설정] 앱 - 최상단의 자신의 이름 영역 선택 - [암호 및 보안] - [Apple ID를 사용하는 앱] - 탈퇴할 앱 선택 - [Apple ID 사용 중단]"),"\n"),"\n",t.createElement(a.p,null,"이 말은 즉슨, 탈퇴 기능을 직접 구현할 필요는 없다는 것이다. 우리는 사용자가 애플을 통해 탈퇴를 했을 때 그에 대응하는 처리만 해주면 된다."),"\n",t.createElement(a.h4,null,"구현 예"),"\n",t.createElement(a.p,null,"그럼 문서에 나와있는대로 탈퇴 기능을 구현해보자."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// 현재 기기가 애플 로그인을 지원하는 기기인지 확인</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>appleAuth<span class="token punctuation">.</span>isSupported<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> unsubscriber <span class="token operator">=</span> appleAuth<span class="token punctuation">.</span><span class="token function">onCredentialRevoked</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token comment">// 사용자의 정보를 가지고 탈퇴 기능을 수행하자.</span>\n      <span class="token function">doSomethingForRevoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token comment">// firebase 에서도 로그아웃</span>\n      <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">signOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> unsubscriber<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// ...</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>View<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>View<span class="token operator">></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",t.createElement(a.h3,null,"2.2. ",t.createElement(a.code,null,"getCredentialStateForUser()")),"\n",t.createElement(a.p,null,"좋다. 구현이 완료되었다. 라이브러리의 README 에는 예외 처리에 대한 안내가 없는 걸로 봐서 이 콜백은 사용자의 탈퇴 시 무조건 실행을 보장하는 것 같다 (API 문서를 보고 싶지만 링크가 깨져있다)."),"\n",t.createElement(a.p,null,"그렇게 믿고 싶다. 하지만 세상에 백퍼센트는 없다. 특히 앱 프로세스가 완전히 죽은 상태에서 탈퇴를 하고 앱을 실행했을 때 ",t.createElement(a.code,null,"onCredentialRevoked()")," 가 실행되지 않는 것을 여러차례 직접 목격한 나로서는, 더더욱 무시할 수 없었다. 이 콜백이 실행되지 않을 때를 대비해야 한다."),"\n",t.createElement(a.p,null,"이럴 때 쓸 수 있는 메서드가 ",t.createElement(a.code,null,"getCredentialStateForUser(user)"),"다. 이 메서드는 현재 사용자의 상태를 반환한다."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="typescript"><pre class="language-typescript"><code class="language-typescript"><span class="token keyword">enum</span> AppleCredentialState <span class="token punctuation">{</span>\n  <span class="token constant">REVOKED</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// The Opaque user ID was revoked by the user.</span>\n  <span class="token constant">AUTHORIZED</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// The Opaque user ID is in good state.</span>\n  <span class="token constant">NOT_FOUND</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// The Opaque user ID was not found.</span>\n  <span class="token constant">TRANSFERRED</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">// N/A</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",t.createElement(a.p,null,"즉 사용자가 앱에 진앱했을 때, 혹은 사용자 정보가 업데이트되었다고 추정될 때, 이 메서드로 사용자의 상태를 확인하면 탈퇴 여부를 확인할 수 있다는 말이다."),"\n",t.createElement(a.h4,null,"구현 예"),"\n",t.createElement(a.p,null,'여기서는 "사용자의 인증 정보가 바뀐 시점"을 React Native Firebase 의 ',t.createElement(a.code,null,"auth().onAuthStateChanged()")," 콜백으로 확인한다. 만약 React Native Firebase 를 사용하지 않는다면 다른 방법으로 해당 시점을 찾아야 할 것이다."),"\n",t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> subscribe <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onAuthStateChanged</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">user</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 로그아웃된 상태 처리</span>\n        <span class="token function">loggedOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token keyword">const</span> isApple <span class="token operator">=</span> <span class="token punctuation">(</span>\n        appleAuth<span class="token punctuation">.</span>isSupported\n        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span>providerData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>providerId <span class="token operator">===</span> <span class="token string">\'apple.com\'</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> uidInProvider <span class="token operator">=</span> user<span class="token punctuation">.</span>providerData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>uid<span class="token punctuation">;</span>\n      <span class="token keyword">const</span> appleState <span class="token operator">=</span> <span class="token keyword">await</span> appleAuth<span class="token punctuation">.</span><span class="token function">getCredentialStateForUser</span><span class="token punctuation">(</span>uidInProvider<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">if</span><span class="token punctuation">(</span>isApple <span class="token operator">&amp;&amp;</span> appleState <span class="token operator">===</span> appleAuth<span class="token punctuation">.</span>State<span class="token punctuation">.</span><span class="token constant">REVOKED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 사용자의 정보를 가지고 탈퇴 기능을 수행하자.</span>\n        <span class="token function">revokeThisService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// firebase 에서도 로그아웃</span>\n        <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">signOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// ...</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>View<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>View<span class="token operator">></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",t.createElement(a.h2,null,"3. 결론"),"\n",t.createElement(a.p,null,"마지막으로 요약하자. React Native 에서 ",t.createElement(a.a,{href:"https://github.com/invertase/react-native-apple-authentication"},"@invertase/react-native-apple-authentication")," 라이브러리를 사용해 탈퇴 기능을 구현할 때는 아래 두 개의 메서드를 적절히 잘 조합하면 되겠다."),"\n",t.createElement(a.ul,null,"\n",t.createElement(a.li,null,t.createElement(a.code,null,"onCredentialRevoked()")),"\n",t.createElement(a.li,null,t.createElement(a.code,null,"getCredentialStateForUser()")),"\n"))}var o,c,l,u,i=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,e.ah)(),n.components);return a?t.createElement(a,n,t.createElement(p,n)):p(n)},r=s(1880),k=s(1883),m=s(3723),d=s(1858),g=s(3904),h=s(891),E=s(5534),v=s(5777),f=s(7178);const b=n=>{let{data:a,children:s}=n;const{frontmatter:e,sameSeriesPosts:p}=a.mdx,{title:o,slug:c,date:l,tags:u,series:i,heroImage:r,heroImageAlt:g}=e,h=r?(0,m.c)(r):null;return t.createElement(d.Z,null,t.createElement(w,null,t.createElement("h1",null,o),t.createElement(A,null,l),t.createElement(R,null,u.map((n=>t.createElement("li",{key:n},t.createElement(k.rU,{to:"/tags/"+n},n)))))),t.createElement(f.Z,{name:i,data:p,current:c}),!!h&&t.createElement(y,{image:h,alt:null!=g?g:""}),t.createElement(E.Z,null,s),t.createElement(v.Z,null))},w=h.ZP.div(o||(o=(0,r.Z)(["\n  margin: 60px 0 72px;\n  padding: 0 24px;\n\n  & > h1 {\n    font-size: 2.5rem;\n    word-break: keep-all;\n    margin: 0;\n  }\n"]))),y=(0,h.ZP)(m.G)(c||(c=(0,r.Z)(["\n  margin-bottom: 16px;\n"]))),A=h.ZP.div(l||(l=(0,r.Z)(["\n  margin: 16px 0;\n"]))),R=h.ZP.ul(u||(u=(0,r.Z)(["\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: ","px;\n\n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  > li {\n    padding: ","px\n      ","px;\n    border-radius: 2px;\n\n    background-color: ",";\n    color: ",";\n\n    > a {\n      text-decoration: none;\n    }\n  }\n"])),(n=>n.theme.dimens.gutter),(n=>n.theme.dimens.spacing),(n=>n.theme.dimens.gutter),(n=>n.theme.colors.tag),(n=>n.theme.colors.onTag)),S=n=>{var a,s;let{data:e}=n;const{frontmatter:{title:p,slug:o,tags:c,heroImage:l,previewContent:u},excerpt:i}=e.mdx,r=l?(0,m.c)(l):null;return t.createElement(g.Z,{title:p,description:null!=u?u:i,path:"posts/"+o,thumbnail:null==r||null===(a=r.images)||void 0===a||null===(s=a.fallback)||void 0===s?void 0:s.src,keywords:c,ogType:"article"})};function x(n){return t.createElement(b,n,t.createElement(i,n))}}}]);
//# sourceMappingURL=component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2022-220102-react-native-apple-login-revoke-index-mdx-891d6d6251dcb6b43702.js.map