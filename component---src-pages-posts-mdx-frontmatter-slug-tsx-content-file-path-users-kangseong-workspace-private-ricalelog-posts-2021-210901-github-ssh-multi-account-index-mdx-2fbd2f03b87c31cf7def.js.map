{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2021-210901-github-ssh-multi-account-index-mdx-2fbd2f03b87c31cf7def.js","mappings":"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","sources":["webpack://ricalelog/./posts/2021/210901-github-ssh-multi-account/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\",\n    p: \"p\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    h2: \"h2\",\n    code: \"code\",\n    button: \"button\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.div, {\n    className: \"md\"\n  }, React.createElement(_components.p, null, \"얼마 전 \", React.createElement(_components.a, {\n    href: \"https://github.blog/changelog/2021-08-12-git-password-authentication-is-shutting-down/\"\n  }, \"GitHub 의 비밀번호 인증 방식이 중지\"), \"되었다. 이제는 pull, push 등 GitHub 에 인증이 필요한 액션을 할 때 비밀번호가 아닌 다른 인증 방식을 설정해야 한다.\"), React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Instead, token-based authentication (for example, personal access, OAuth, SSH Key, or GitHub App installation token) will be required for all authenticated Git operations.\"), \"\\n\"), React.createElement(_components.p, null, \"그나마 익숙한 것이 무엇인가 살펴보았더니 SSH인 것 같았다. 그래서 SSH로 인증을 설정하기로 했다.\"), React.createElement(_components.p, null, \"(이 글은 Mac 기준으로 작성되었다.)\"), React.createElement(_components.h2, {\n    id: \"1-하나의-계정에-대한-ssh-인증-설정\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#1-%ED%95%98%EB%82%98%EC%9D%98-%EA%B3%84%EC%A0%95%EC%97%90-%EB%8C%80%ED%95%9C-ssh-%EC%9D%B8%EC%A6%9D-%EC%84%A4%EC%A0%95\",\n    \"aria-label\": \"1 하나의 계정에 대한 ssh 인증 설정 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1. 하나의 계정에 대한 SSH 인증 설정\"), React.createElement(_components.p, null, \"한 계정에 대한 설정 방법은 \", React.createElement(_components.a, {\n    href: \"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\"\n  }, \"GitHub 공식 문서\"), \"에 매우 잘 설명되어 있다. 영어가 불편하지 않다면 공식 문서를 보자.\"), React.createElement(_components.p, null, \"일단 \", React.createElement(_components.code, null, \"ssh-keygen\"), \"을 사용해 인증서를 생성하자.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">ssh-keygen <span class=\\\"token parameter variable\\\">-t</span> ed25519 <span class=\\\"token parameter variable\\\">-C</span> <span class=\\\"token string\\\">\\\"your_email@example.com\\\"</span>\\nGenerating public/private ed25519 key pair.\\nEnter <span class=\\\"token function\\\">file</span> <span class=\\\"token keyword\\\">in</span> <span class=\\\"token function\\\">which</span> to save the key <span class=\\\"token punctuation\\\">(</span>/Users/default/.ssh/id_ed25519<span class=\\\"token punctuation\\\">)</span>:\\nEnter passphrase <span class=\\\"token punctuation\\\">(</span>empty <span class=\\\"token keyword\\\">for</span> no passphrase<span class=\\\"token punctuation\\\">)</span>:\\nEnter same passphrase again:</code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"경로를 지정하고 싶다면 \", React.createElement(_components.code, null, \"-f\"), \" 옵션을 주자\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">ssh-keygen <span class=\\\"token parameter variable\\\">-t</span> ed25519 <span class=\\\"token parameter variable\\\">-C</span> <span class=\\\"token string\\\">\\\"your_email@example.com\\\"</span> <span class=\\\"token parameter variable\\\">-f</span> ~/.ssh/myCompany/ed25519</code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"생성된 인증서를 key agent 에 등록시켜야 한다. ssh-agent 를 백그라운드에서 실행하자.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token builtin class-name\\\">eval</span> <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span>ssh-agent <span class=\\\"token parameter variable\\\">-s</span><span class=\\\"token variable\\\">)</span></span>\\\"</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"설정에는 \", React.createElement(_components.code, null, \"~/.ssh/config\"), \" 파일이 필요한데, 맥의 경우 자동 생성되지 않았을 수 있다. 그 경우 파일을 직접 생성해서 아래와 같은 내용을 넣어야 한다.\"), React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">Host *\\n  AddKeysToAgent yes\\n  UseKeychain yes\\n  IdentityFile ~/.ssh/id_ed25519</code></pre></div>\"\n    }\n  }), React.createElement(_components.p, null, React.createElement(_components.code, null, \"~/.ssh/config\"), \" 파일도 확인했으면 이제 아래 명령어를 통해 인증서를 ssh-agent 에 추가하자.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">ssh-add <span class=\\\"token parameter variable\\\">-K</span> ~/.ssh/id_ed25519</code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"GitHub에 인증서를 등록하려면 아래 명령어를 통해 공개키를 클립보드로 복사해서 사용하면 된다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">pbcopy <span class=\\\"token operator\\\">&lt;</span> ~/.ssh/id_ed25519.pub</code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"복사한 공개키는 GitHub [Settings] - [SSH and GPG keys] - [New SSH key] 를 통해 등록하자.\"), React.createElement(_components.p, null, \"여기까지 하면 이제 리파지토리의 SSH 주소를 remote 로 사용해 코드를 push/pull 할 수 있다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">git</span> remote set-url origin git@github.com:ME/MY_REPOSITORY.git</code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.h2, {\n    id: \"2-여러-계정의-ssh-설정을-한-기기에서-같이-하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-%EC%97%AC%EB%9F%AC-%EA%B3%84%EC%A0%95%EC%9D%98-ssh-%EC%84%A4%EC%A0%95%EC%9D%84-%ED%95%9C-%EA%B8%B0%EA%B8%B0%EC%97%90%EC%84%9C-%EA%B0%99%EC%9D%B4-%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"2 여러 계정의 ssh 설정을 한 기기에서 같이 하기 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2. 여러 계정의 SSH 설정을 한 기기에서 같이 하기\"), React.createElement(_components.p, null, \"한 사람이 GitHub 계정을 여러 개 가지고 있을 수도 있다. 예를 들면 개인 계정과 회사 계정을 분리한 경우가 있을 수 있다. 그리고 사람 일이 늘 그렇듯, 한 기기에서 개인 일과 회사 일을 다 해야 하는 경우가 생길 수도 있다. 그럴 경우에는 어떻게 설정해주면 될까?\"), React.createElement(_components.p, null, \"거의 모든 과정이 1번과 동일하다. 다른 것은 키가 저장될 위치, \", React.createElement(_components.code, null, \"~/.ssh/config\"), \", 그리고 로컬 리파지토리의 remote 주소이다.\"), React.createElement(_components.h3, {\n    id: \"21-키가-저장될-위치\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#21-%ED%82%A4%EA%B0%80-%EC%A0%80%EC%9E%A5%EB%90%A0-%EC%9C%84%EC%B9%98\",\n    \"aria-label\": \"21 키가 저장될 위치 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1. 키가 저장될 위치\"), React.createElement(_components.p, null, \"키가 저장될 위치가 다른 것은 당연하다. 다른 두 파일을 하나의 위치에 같이 저장할 수는 없으니까. 일단 처음에 저장된 것은 기본 위치에 두고, 추후 추가되는 것을 다른 위치에 저장해보자.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># 처음에 저장된 SSH 키의 위치. (기본값)</span>\\n~/.ssh/id_ed25519\\n~/.ssh/id_ed25519.pub\\n<span class=\\\"token comment\\\"># 이후 추가한 SSH 키의 위치.</span>\\n<span class=\\\"token comment\\\"># 당연하지만 다른 디렉토리의 다른 파일명으로 저장해도 무방하다.</span>\\n~/.ssh/myCompany/id_ed25519\\n~/.ssh/myCompany/id_ed25519.pub</code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"자신이 원하는 아무 곳에나 저장하면 된다.\"), React.createElement(_components.h3, {\n    id: \"22-sshconfig\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#22-sshconfig\",\n    \"aria-label\": \"22 sshconfig permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.2. \", React.createElement(_components.code, null, \"~/.ssh/config\")), React.createElement(_components.p, null, \"저장된 위치를 설정 파일에 반영하자.\"), React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">Host github-private\\n  hostName github.com\\n  IdentityFile ~/.ssh/id_ed25519\\n  User git\\n  IdentitiesOnly yes\\n\\nHost github-my-company\\n  hostName github.com\\n  IdentityFile ~/.ssh/myCompany/id_ed25519\\n  User git\\n  IdentitiesOnly yes</code></pre></div>\"\n    }\n  }), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"Host\"), \": 본래 호스트명 대신 사용할 호스트명. alias 라고 이해하면 쉽다. 원하는 이름으로 하면 된다. (사용 예는 2.3. 에서 확인할 수 있다.)\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"hostName\"), \": git 서비스의 호스트명\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"IdentityFile\"), \": 인증 파일 경로\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"IdentitiesOnly\"), \": 인증 파일 경로를 확인함에 있어 내가 지정한 값(\", React.createElement(_components.code, null, \"IdentityFile\"), \")만을 사용할 건지 여부. 만약 값을 \", React.createElement(_components.code, null, \"no\"), \"로 하면, 키 파일을 가져오기 위해 \", React.createElement(_components.code, null, \"IdentityFile\"), \"의 위치를 확인하기에 \", React.createElement(_components.strong, null, \"앞서\"), \" 시스템의 기본값(이 경우 \", React.createElement(_components.code, null, \"~/.ssh/id_ed25519\"), \"일 것이다.)을 먼저 확인한다고 한다.\"), \"\\n\"), \"\\n\"), \"\\n\"), React.createElement(_components.h3, {\n    id: \"23-로컬-리파지토리의-remote-주소-변경\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#23-%EB%A1%9C%EC%BB%AC-%EB%A6%AC%ED%8C%8C%EC%A7%80%ED%86%A0%EB%A6%AC%EC%9D%98-remote-%EC%A3%BC%EC%86%8C-%EB%B3%80%EA%B2%BD\",\n    \"aria-label\": \"23 로컬 리파지토리의 remote 주소 변경 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.3. 로컬 리파지토리의 remote 주소 변경\"), React.createElement(_components.p, null, \"자 이제 2.2. 항목에서 설정한 값을 가지고 리파지토리의 주소를 변경해주어야 한다.\"), React.createElement(_components.p, null, \"변경하는 방법은 간단하다. 기존 호스트명(\", React.createElement(_components.code, null, \"github.com\"), \") 대신 우리가 위 설정파일에서 지정한 호스트명(\", React.createElement(_components.code, null, \"Host github-my-company\"), \")를 적용해주면 된다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\">## 원래 주소</span>\\n<span class=\\\"token comment\\\"># git@github.com:ME/MY-REPOSITORY.git</span>\\n<span class=\\\"token comment\\\">## 변경할 주소</span>\\n<span class=\\\"token comment\\\"># git@github-private:ME/MY-REPOSITORY.git</span>\\n<span class=\\\"token function\\\">git</span> remote set-url origin git@github-private:ME/MY-REPOSITORY.git</code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"다른 쪽 리파지토리도 마찬가지다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\">## 원래 주소</span>\\n<span class=\\\"token comment\\\"># git@github.com:COMPANY/COMPANY-REPOSITORY.git</span>\\n<span class=\\\"token comment\\\">## 변경할 주소</span>\\n<span class=\\\"token comment\\\"># git@github-my-company:COMPANY/COMPANY-REPOSITORY.git</span>\\n<span class=\\\"token function\\\">git</span> remote set-url origin git@github-my-company:COMPANY/COMPANY-REPOSITORY.git</code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"이제 양쪽 다 SSH 인증을 사용할 수 있다.\"), React.createElement(_components.h2, {\n    id: \"references\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#references\",\n    \"aria-label\": \"references permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"References\"), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"The GitHub Blog - \", React.createElement(_components.a, {\n    href: \"https://github.blog/changelog/2021-08-12-git-password-authentication-is-shutting-down/\"\n  }, \"Git password authentication is shutting down\")), \"\\n\", React.createElement(_components.li, null, \"GitHub Docs - \", React.createElement(_components.a, {\n    href: \"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\"\n  }, \"Generating a new SSH key and adding it to the ssh-agent\")), \"\\n\", React.createElement(_components.li, null, \"GitHub Docs - \", React.createElement(_components.a, {\n    href: \"https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account\"\n  }, \"Adding a new SSH key to your GitHub account\")), \"\\n\", React.createElement(_components.li, null, \"Stack Overflow - \", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/7927750/specify-an-ssh-key-for-git-push-for-a-given-domain\"\n  }, \"Specify an SSH key for git push for a given domain\")), \"\\n\")), \"\\n\", React.createElement(_components.div, {\n    className: \"toc\"\n  }, React.createElement(_components.p, null, \"목차\"), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#1-%ED%95%98%EB%82%98%EC%9D%98-%EA%B3%84%EC%A0%95%EC%97%90-%EB%8C%80%ED%95%9C-ssh-%EC%9D%B8%EC%A6%9D-%EC%84%A4%EC%A0%95\"\n  }, \"1. 하나의 계정에 대한 SSH 인증 설정\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#2-%EC%97%AC%EB%9F%AC-%EA%B3%84%EC%A0%95%EC%9D%98-ssh-%EC%84%A4%EC%A0%95%EC%9D%84-%ED%95%9C-%EA%B8%B0%EA%B8%B0%EC%97%90%EC%84%9C-%EA%B0%99%EC%9D%B4-%ED%95%98%EA%B8%B0\"\n  }, \"2. 여러 계정의 SSH 설정을 한 기기에서 같이 하기\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#21-%ED%82%A4%EA%B0%80-%EC%A0%80%EC%9E%A5%EB%90%A0-%EC%9C%84%EC%B9%98\"\n  }, \"2.1. 키가 저장될 위치\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#22-sshconfig\"\n  }, \"2.2. \", React.createElement(_components.code, null, \"~/.ssh/config\"))), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#23-%EB%A1%9C%EC%BB%AC-%EB%A6%AC%ED%8C%8C%EC%A7%80%ED%86%A0%EB%A6%AC%EC%9D%98-remote-%EC%A3%BC%EC%86%8C-%EB%B3%80%EA%B2%BD\"\n  }, \"2.3. 로컬 리파지토리의 remote 주소 변경\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#references\"\n  }, \"References\")), \"\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2021/210901-github-ssh-multi-account/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nimport SameSeriesPosts from \"../../components/SameSeriesPosts\";\nimport TagList from \"../../components/TagList\";\nimport highlightCurrentHeading from \"../../utils/highlightCurrentHeading\";\nimport PostImage from \"../../components/PostImage\";\nfunction PostDetailPage(_ref) {\n  let {data, children} = _ref;\n  const ref = React.useRef();\n  const {frontmatter, sameSeriesPosts} = data.mdx;\n  const {title, slug, date, tags, series, heroImage, heroImageAlt} = frontmatter;\n  React.useEffect(() => {\n    var _ref$current;\n    const headingElements = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.querySelectorAll(\".md h1, .md h2, .md h3, .md h4, .md h5, .md h6\");\n    const observer = new IntersectionObserver(() => highlightCurrentHeading(ref, headingElements), {\n      rootMargin: \"0px 0px -90% 0px\",\n      threshold: [0, 1.0]\n    });\n    headingElements === null || headingElements === void 0 ? void 0 : headingElements.forEach(element => observer.observe(element));\n    return () => observer.disconnect();\n  }, []);\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, React.createElement(Link, {\n    to: \"/posts/\" + slug\n  }, title)), React.createElement(WrittenDate, null, date), React.createElement(TagList, {\n    tags: tags\n  })), React.createElement(SameSeriesPosts, {\n    name: series,\n    data: sameSeriesPosts,\n    current: slug\n  }), React.createElement(PostImage, {\n    data: heroImage,\n    alt: heroImageAlt\n  }), React.createElement(PostContent, {\n    ref: ref\n  }, children), React.createElement(Comments, null));\n}\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n\\n    > a {\\n      color: \", \";\\n    }\\n  }\\n\"])), p => p.theme.colors.onBackground);\nconst WrittenDate = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst PostContent = styled(MdxContent)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 60px;\\n\"])));\nconst query = \"2677585968\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage, previewContent}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: previewContent !== null && previewContent !== void 0 ? previewContent : excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","div","p","a","blockquote","h2","code","button","h3","ul","li","strong","_provideComponents","components","React","className","href","id","style","position","dangerouslySetInnerHTML","__html","_templateObject","_templateObject2","_templateObject3","wrapper","MDXLayout","PostDetailPage","_ref","data","children","ref","frontmatter","sameSeriesPosts","mdx","title","slug","date","tags","series","heroImage","heroImageAlt","_ref$current","headingElements","current","querySelectorAll","observer","IntersectionObserver","highlightCurrentHeading","rootMargin","threshold","forEach","element","observe","disconnect","Layout","Header","Link","to","WrittenDate","TagList","SameSeriesPosts","name","PostImage","alt","PostContent","Comments","styled","_taggedTemplateLiteralLoose","theme","colors","onBackground","MdxContent","Head","_ref2","_image$images","_image$images$fallbac","previewContent","excerpt","image","getImage","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}