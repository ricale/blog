{"version":3,"file":"component---src-templates-tag-detail-page-template-tsx-450f5fc8b27cd2f839be.js","mappings":"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","sources":["webpack://ricalelog/./src/constants/urls.ts","webpack://ricalelog/./src/components/RelatedLinks/GitHubIcon.tsx","webpack://ricalelog/./src/components/RelatedLinks/HomeIcon.tsx","webpack://ricalelog/./src/components/RelatedLinks/index.tsx","webpack://ricalelog/./src/components/Layout/Header.tsx","webpack://ricalelog/./src/components/Layout/Footer.tsx","webpack://ricalelog/./src/components/Layout/index.tsx","webpack://ricalelog/./src/components/ListPageHeader.tsx","webpack://ricalelog/./src/components/Seo.tsx","webpack://ricalelog/./src/components/SimplePostList.tsx","webpack://ricalelog/./src/templates/TagDetailPageTemplate.tsx","webpack://ricalelog/./src/themes/themedStyledComponents.ts","webpack://ricalelog/./src/themes/normal.ts","webpack://ricalelog/./src/themes/GlobalStyle.ts","webpack://ricalelog/./src/themes/index.ts","webpack://ricalelog/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["export const BLOG_GITHUB_REPOSITORY_URL = \"https://github.com/ricale/blog\";\nexport const CCL_URL = \"https://creativecommons.org/licenses/by-nc-sa/2.0/kr/\";\nexport const GATSBY_URL = \"https://www.gatsbyjs.com/\";\nexport const GITHUB_PAGES_URL = \"https://pages.github.com/\";\nexport const RICALE_HOME_URL = \"https://ricale.kr\";\n","import * as React from \"react\";\n\ntype GitHubIconProps = {\n  fill?: string;\n  size?: number;\n};\nfunction GitHubIcon({ fill = \"#FFFFFF\", size = 24 }: GitHubIconProps) {\n  return (\n    <svg\n      fill=\"currentColor\"\n      width={size}\n      height={size}\n      viewBox=\"-2 -2 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      preserveAspectRatio=\"xMinYMin\"\n    >\n      <path d=\"M18.88 1.099C18.147.366 17.265 0 16.233 0H3.746C2.714 0 1.832.366 1.099 1.099.366 1.832 0 2.714 0 3.746v12.487c0 1.032.366 1.914 1.099 2.647.733.733 1.615 1.099 2.647 1.099H6.66c.19 0 .333-.007.429-.02a.504.504 0 0 0 .286-.169c.095-.1.143-.245.143-.435l-.007-.885c-.004-.564-.006-1.01-.006-1.34l-.3.052c-.19.035-.43.05-.721.046a5.555 5.555 0 0 1-.904-.091 2.026 2.026 0 0 1-.872-.39 1.651 1.651 0 0 1-.572-.8l-.13-.3a3.25 3.25 0 0 0-.41-.663c-.186-.243-.375-.407-.566-.494l-.09-.065a.956.956 0 0 1-.17-.156.723.723 0 0 1-.117-.182c-.026-.061-.004-.111.065-.15.07-.04.195-.059.378-.059l.26.04c.173.034.388.138.643.311a2.1 2.1 0 0 1 .631.677c.2.355.44.626.722.813.282.186.566.28.852.28.286 0 .533-.022.742-.065a2.59 2.59 0 0 0 .585-.196c.078-.58.29-1.028.637-1.34a8.907 8.907 0 0 1-1.333-.234 5.314 5.314 0 0 1-1.223-.507 3.5 3.5 0 0 1-1.047-.872c-.277-.347-.505-.802-.683-1.365-.177-.564-.266-1.215-.266-1.952 0-1.049.342-1.942 1.027-2.68-.32-.788-.29-1.673.091-2.652.252-.079.625-.02 1.119.175.494.195.856.362 1.086.5.23.14.414.257.553.352a9.233 9.233 0 0 1 2.497-.338c.859 0 1.691.113 2.498.338l.494-.312a6.997 6.997 0 0 1 1.197-.572c.46-.174.81-.221 1.054-.143.39.98.424 1.864.103 2.653.685.737 1.028 1.63 1.028 2.68 0 .737-.089 1.39-.267 1.957-.177.568-.407 1.023-.689 1.366-.282.343-.633.63-1.053.865-.42.234-.828.403-1.223.507a8.9 8.9 0 0 1-1.333.235c.45.39.676 1.005.676 1.846v3.11c0 .147.021.266.065.357a.36.36 0 0 0 .208.189c.096.034.18.056.254.064.074.01.18.013.318.013h2.914c1.032 0 1.914-.366 2.647-1.099.732-.732 1.099-1.615 1.099-2.647V3.746c0-1.032-.367-1.914-1.1-2.647z\" />\n    </svg>\n  );\n}\n\nexport default GitHubIcon;\n","import * as React from \"react\";\n\ntype HomeIconProps = {\n  fill?: string;\n  size?: number;\n};\nfunction HomeIcon({ fill = \"#FFFFFF\", size = 24 }: HomeIconProps) {\n  return (\n    <svg\n      fill=\"currentColor\"\n      width={size}\n      height={size}\n      viewBox=\"-2 -1.5 24 24\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      preserveAspectRatio=\"xMinYMin\"\n    >\n      <path d=\"M13 20.565v-5a3 3 0 0 0-6 0v5H2a2 2 0 0 1-2-2V7.697a2 2 0 0 1 .971-1.715l8-4.8a2 2 0 0 1 2.058 0l8 4.8A2 2 0 0 1 20 7.697v10.868a2 2 0 0 1-2 2h-5z\" />\n    </svg>\n  );\n}\n\nexport default HomeIcon;\n","import * as React from \"react\";\n\nimport {\n  BLOG_GITHUB_REPOSITORY_URL,\n  RICALE_HOME_URL,\n} from \"../../constants/urls\";\nimport styled from \"../../themes\";\nimport GitHubIcon from \"./GitHubIcon\";\nimport HomeIcon from \"./HomeIcon\";\n\nfunction RelatedLinks() {\n  return (\n    <Container>\n      <a href={RICALE_HOME_URL}>\n        <HomeIcon size={24} />\n      </a>\n      <a href={BLOG_GITHUB_REPOSITORY_URL}>\n        <GitHubIcon size={24} />\n      </a>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  gap: 4px;\n  align-items: center;\n\n  & > a {\n    display: flex;\n    color: #aaaaaa;\n    &:hover {\n      color: #ffffff;\n    }\n  }\n`;\n\nexport default RelatedLinks;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport { RICALE_HOME_URL } from \"../../constants/urls\";\nimport styled, { css } from \"../../themes\";\nimport RelatedLinks from \"../RelatedLinks\";\n\nconst isDevelopment = process.env.NODE_ENV === \"development\";\n\nconst MENU_ITEMS = [\n  { path: \"/posts\", title: \"모든글\" },\n  { path: \"/series\", title: \"시리즈\" },\n  { path: \"/tags\", title: \"태그\" },\n  { href: \"/rss.xml\", title: \"RSS\" },\n  ...(isDevelopment ? [{ path: \"/drafts\", title: \"임시글\" }] : []),\n];\n\ntype HeaderProps = {\n  emphasize?: boolean;\n  title: string;\n  author: string;\n  siteUrl: string;\n};\nfunction Header({ emphasize, title, author, siteUrl }: HeaderProps) {\n  const menuItems = !emphasize ? MENU_ITEMS : MENU_ITEMS.slice(3);\n  return (\n    <Container emphasize={emphasize}>\n      <HeaderContainer emphasize={emphasize}>\n        <header>\n          <Link to=\"/\">{title}</Link>\n        </header>\n        <address>\n          <a href={RICALE_HOME_URL}>{`by ${author}`}</a>\n        </address>\n        {emphasize && <RelatedLinks />}\n      </HeaderContainer>\n      <Menu shrink={emphasize}>\n        <ul>\n          {menuItems.map((item, i) => (\n            <li key={i}>\n              {item.path ? (\n                <Link to={item.path}>{item.title}</Link>\n              ) : (\n                <a href={`${siteUrl}${item.href}`}>{item.title}</a>\n              )}\n            </li>\n          ))}\n        </ul>\n      </Menu>\n    </Container>\n  );\n}\n\ntype ContainerProps = {\n  emphasize?: boolean;\n};\nconst Container = styled.div<ContainerProps>`\n  display: flex;\n  flex-direction: row;\n\n  margin: 0px 16px 8px;\n  padding-top: 8px;\n\n  ${(p) =>\n    p.emphasize &&\n    css`\n      @media (max-width: 500px) {\n        flex-direction: column;\n      }\n    `}\n`;\n\ntype HeaderContainerProps = {\n  emphasize?: boolean;\n};\nconst HeaderContainer = styled.div<HeaderContainerProps>`\n  display: flex;\n  flex-direction: row;\n\n  font-family: monospace;\n\n  & > header {\n    margin-right: 8px;\n    font-weight: 600;\n    font-size: 1.25rem;\n    > a {\n      color: white;\n    }\n  }\n\n  & > address {\n    font-size: 0.875rem;\n    font-style: normal;\n    > a {\n      color: white;\n    }\n  }\n\n  @media (max-width: 799px) {\n    flex-direction: column;\n  }\n\n  ${(p) =>\n    p.emphasize &&\n    css`\n      flex-direction: column;\n\n      padding-top: 76px;\n      padding-bottom: 68px;\n\n      & > header {\n        font-size: 5rem;\n      }\n      & > address {\n        font-size: 1.5rem;\n      }\n      & > :last-child {\n        margin-top: 8px;\n      }\n\n      @media (max-width: 799px) {\n        & > header {\n          font-size: 4.5rem;\n        }\n        & > address {\n          font-size: 1.25rem;\n        }\n      }\n      @media (max-width: 500px) {\n        & > header {\n          font-size: 4rem;\n        }\n        & > address {\n          font-size: 1.125rem;\n        }\n        order: 2;\n      }\n    `}\n`;\n\ntype MenuProps = {\n  shrink?: boolean;\n};\nconst Menu = styled.nav<MenuProps>`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n\n  flex: 1;\n  > ul {\n    display: flex;\n    flex-direction: row;\n    gap: 8px;\n\n    margin: 0;\n    padding: 0;\n    list-style: none;\n\n    > li > a {\n      display: inline-block;\n      color: ${(p) => p.theme.colors.headerText};\n      text-decoration: underline;\n      font-size: 0.875rem;\n    }\n  }\n\n  ${(p) =>\n    p.shrink &&\n    css`\n      @media (max-width: 500px) {\n        order: 1;\n      }\n    `}\n`;\n\nexport default Header;\n","import * as React from \"react\";\nimport styled from \"../../themes\";\nimport RelatedLinks from \"../RelatedLinks\";\nimport {\n  CCL_URL,\n  GATSBY_URL,\n  GITHUB_PAGES_URL,\n  RICALE_HOME_URL,\n} from \"../../constants/urls\";\n\ntype FooterProps = {\n  showLinks?: boolean;\n};\nfunction Footer({ showLinks }: FooterProps) {\n  return (\n    <Container>\n      {showLinks && <RelatedLinks />}\n      <InfoRow>\n        <p>\n          Copyright 2021{\" \"}\n          <strong>\n            <a href={RICALE_HOME_URL}>ricale</a>.\n          </strong>\n        </p>\n        <p>\n          <a href={CCL_URL}>CC BY-NC-SA 2.0 KR</a>.\n        </p>\n        <p>\n          Powered by{\" \"}\n          <strong>\n            <a href={GATSBY_URL}>Gatsby</a>\n          </strong>{\" \"}\n          and{\" \"}\n          <strong>\n            <a href={GITHUB_PAGES_URL}>GitHub Pages</a>\n          </strong>\n          .\n        </p>\n      </InfoRow>\n    </Container>\n  );\n}\n\nconst Container = styled.footer`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  margin-top: 60px;\n  margin-bottom: 16px;\n\n  gap: 16px;\n`;\nconst InfoRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 4px;\n\n  font-size: 0.8125rem;\n\n  color: ${(p) => p.theme.colors.inactiveText};\n  p {\n    white-space: nowrap;\n  }\n  a {\n    color: ${(p) => p.theme.colors.inactiveText};\n  }\n  strong,\n  strong > a {\n    font-weight: normal;\n    color: ${(p) => p.theme.colors.onBackground};\n  }\n`;\n\nexport default Footer;\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport styled, { GlobalStyle, normalTheme, ThemeProvider } from \"../../themes\";\nimport { SiteMetadata } from \"../../types\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\ntype LayoutQueryData = {\n  site: {\n    siteMetadata: SiteMetadata;\n  };\n};\ntype LayoutProps = {\n  emphasize?: boolean;\n  minContentHeight?: number;\n  children?: React.ReactNode;\n};\nfunction Layout({ emphasize, minContentHeight, children }: LayoutProps) {\n  const data = useStaticQuery<LayoutQueryData>(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          author\n          siteUrl\n        }\n      }\n    }\n  `);\n  const { title, author, siteUrl } = data.site.siteMetadata;\n  return (\n    <ThemeProvider theme={normalTheme}>\n      <GlobalStyle />\n      <Container>\n        <Header\n          emphasize={emphasize}\n          title={title}\n          author={author}\n          siteUrl={siteUrl}\n        />\n        <main\n          style={minContentHeight ? { minHeight: minContentHeight } : undefined}\n        >\n          {children}\n        </main>\n        <Footer showLinks={!emphasize} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  overflow-x: hidden;\n\n  > main {\n    padding-left: ${(p) => p.theme.dimens.margin}px;\n    padding-right: ${(p) => p.theme.dimens.margin}px;\n    padding-bottom: ${(p) => p.theme.dimens.margin}px;\n\n    @media (max-width: 799px) {\n      padding-left: ${(p) => p.theme.dimens.margin + 4}px;\n      padding-right: ${(p) => p.theme.dimens.margin + 4}px;\n    }\n  }\n`;\n\nexport default Layout;\n","import * as React from \"react\";\nimport styled from \"../themes\";\n\ntype ListPageHeaderProps = {\n  title: string;\n  subtitle?: string;\n  note?: string | number;\n};\nfunction ListPageHeader({ title, subtitle, note }: ListPageHeaderProps) {\n  return (\n    <Container>\n      {!!subtitle && <Subtitle>{subtitle}</Subtitle>}\n      <TitleRow>\n        <h1>{title}</h1>\n        {!!note && <Note>{`(${note})`}</Note>}\n      </TitleRow>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 40px 0 45px;\n  padding-left: 40px;\n\n  @media (max-width: 500px) {\n    padding-left: 20px;\n  }\n`;\n\nconst Subtitle = styled.p``;\n\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n\n  & > h1 {\n    word-break: keep-all;\n  }\n\n  @media (max-width: 500px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst Note = styled.p`\n  margin-bottom: 8px;\n  font-size: 0.9375rem;\n`;\n\nexport default ListPageHeader;\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { SiteMetadata } from \"../types\";\n\ntype SeoQueryData = {\n  site: {\n    siteMetadata: SiteMetadata;\n  };\n};\ntype SeoProps = {\n  title?: string;\n  description?: string;\n  path?: string;\n  thumbnail?: string;\n  keywords?: string[];\n  ogType?: string;\n};\nfunction Seo({\n  title,\n  description,\n  path,\n  thumbnail,\n  ogType,\n  keywords,\n}: SeoProps) {\n  const data = useStaticQuery<SeoQueryData>(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          author\n          siteUrl\n          description\n        }\n      }\n    }\n  `);\n\n  const {\n    siteMetadata: { title: siteTitle, author, siteUrl, description: siteDesc },\n  } = data.site;\n\n  const pageTitle = title\n    ? `${title} | ${siteTitle}`\n    : `${siteTitle} by ${author}`;\n  const seoTitle = title ?? siteTitle;\n  const desc = description || siteDesc;\n  const pageUrl = `${siteUrl}${path ? `/${path}` : \"\"}`;\n  const imageUrl = thumbnail ? `${siteUrl}${thumbnail}` : null;\n  const keywordsString = keywords ? keywords.join(\", \") : null;\n\n  return (\n    <>\n      <title>{pageTitle}</title>\n      <meta name=\"description\" content={desc} />\n      <meta name=\"author\" content={author} />\n      {keywordsString && <meta name=\"keywords\" content={keywordsString} />}\n\n      {!!ogType && <meta property=\"og:type\" content={ogType} />}\n      <meta property=\"og:title\" content={seoTitle} />\n      <meta property=\"og:description\" content={desc} />\n      <meta property=\"og:url\" content={pageUrl} />\n      {!!imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n\n      <meta property=\"twitter:card\" content=\"summary_large_image\" />\n      <meta property=\"twitter:title\" content={seoTitle} />\n      <meta property=\"twitter:description\" content={desc} />\n      <meta property=\"twitter:url\" content={pageUrl} />\n      {!!imageUrl && <meta property=\"twitter:image\" content={imageUrl} />}\n\n      <meta\n        name=\"google-site-verification\"\n        content=\"Z24DuzLFxq0tVrtFhTxfPETtFXf9rOEG73-HpKk2Pgs\"\n      />\n      <meta name=\"msvalidate.01\" content=\"06C6843D272653A5EF82A3F39E712F62\" />\n    </>\n  );\n}\n\nexport default Seo;\n","import * as React from \"react\";\nimport { navigate } from \"gatsby\";\nimport styled from \"../themes\";\nimport { PostFrontmatter } from \"../types\";\n\ntype SimplePostListProps = {\n  data: {\n    node: {\n      frontmatter: Pick<PostFrontmatter, \"title\" | \"slug\" | \"date\"> & {\n        originalDate: string;\n      };\n    };\n  }[];\n  actions?: React.ReactNode;\n};\n\nfunction SimplePostList({ data: source, actions }: SimplePostListProps) {\n  const [orderByAsc, setOrderByAsc] = React.useState(false);\n  const data = [...source].sort(\n    (a, b) =>\n      a.node.frontmatter.originalDate.localeCompare(\n        b.node.frontmatter.originalDate\n      ) * (orderByAsc ? 1 : -1)\n  );\n\n  return (\n    <Container>\n      <Actions>\n        {actions && (\n          <>\n            <div>{actions}</div>\n            <span className=\"divider\">|</span>\n          </>\n        )}\n        <SortingAction>\n          <span>정렬:</span>\n          <a onClick={() => setOrderByAsc((st) => !st)}>\n            {`작성일 ${orderByAsc ? \"오름차순\" : \"내림차순\"}`}\n          </a>\n        </SortingAction>\n      </Actions>\n      <PostList>\n        {data.map(({ node: { frontmatter } }) => (\n          <li\n            key={frontmatter.slug}\n            onClick={() => navigate(`/posts/${frontmatter.slug}`)}\n          >\n            <span className=\"date\">{frontmatter.date}</span>\n            <span className=\"title\">{frontmatter.title}</span>\n          </li>\n        ))}\n      </PostList>\n    </Container>\n  );\n}\n\nconst Container = styled.div``;\n\nconst Actions = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 2px;\n\n  & > div:first-child {\n    display: flex;\n    align-items: center;\n  }\n  & > span.divider {\n    font-size: 0.75rem;\n  }\n`;\nconst SortingAction = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 4px;\n\n  > span {\n    font-size: 0.875rem;\n    color: ${(p) => p.theme.colors.onBackground};\n  }\n  > a {\n    border: 0;\n    text-decoration: underline;\n\n    font-size: 0.875rem;\n    color: ${(p) => p.theme.colors.onBackground};\n    background-color: transparent;\n    cursor: pointer;\n  }\n`;\n\nconst PostList = styled.ol`\n  margin-top: 8px;\n  padding-left: 0px;\n  list-style: none;\n  cursor: pointer;\n\n  li {\n    display: flex;\n    align-items: center;\n\n    padding: 2px;\n    margin-bottom: 4px;\n    :hover {\n      background-color: ${(p) => p.theme.colors.hoverSimplePostSeries};\n    }\n\n    > .date {\n      margin-right: 8px;\n      font-family: monospace;\n      font-size: 0.875rem;\n    }\n    > .title {\n      color: skyblue;\n    }\n  }\n\n  @media (max-width: 500px) {\n    li {\n      flex-direction: column;\n      align-items: flex-start;\n\n      margin-bottom: 12px;\n      > .date {\n        order: 2;\n        font-size: 0.75rem;\n      }\n      > .title {\n        order: 1;\n      }\n    }\n  }\n`;\n\nexport default SimplePostList;\n","import * as React from \"react\";\nimport { graphql, HeadProps, PageProps } from \"gatsby\";\n\nimport Layout from \"../components/Layout\";\nimport ListPageHeader from \"../components/ListPageHeader\";\nimport SimplePostList from \"../components/SimplePostList\";\nimport { PostFrontmatter } from \"../types\";\nimport Seo from \"../components/Seo\";\n\ntype TagDetailPageTemplateData = {\n  allMdx: {\n    totalCount: number;\n    edges: {\n      node: {\n        frontmatter: Pick<PostFrontmatter, \"title\" | \"slug\" | \"date\"> & {\n          originalDate: string;\n        };\n      };\n    }[];\n  };\n};\ntype TagDetailPageTemplateContext = {\n  tag: string;\n};\nconst TagDetailPageTemplate = ({\n  pageContext,\n  data,\n}: PageProps<TagDetailPageTemplateData, TagDetailPageTemplateContext>) => {\n  const { tag } = pageContext;\n  const { totalCount, edges } = data.allMdx;\n\n  return (\n    <Layout minContentHeight={500}>\n      <ListPageHeader title={tag} subtitle=\"태그\" note={totalCount} />\n      <SimplePostList data={edges} />\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] }, date: { ne: \"\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            title\n            slug\n            date(formatString: \"YYYY.MM.DD.\")\n            originalDate: date\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = ({\n  pageContext,\n  data,\n}: HeadProps<TagDetailPageTemplateData, TagDetailPageTemplateContext>) => {\n  const { tag } = pageContext;\n  const { totalCount } = data.allMdx;\n\n  return (\n    <Seo\n      title={`태그 \"${tag}\"`}\n      description={`${totalCount}개의 글이 있습니다.`}\n      path={`tags/${tag}`}\n    />\n  );\n};\n\nexport default TagDetailPageTemplate;\n","import * as styledComponents from \"styled-components\";\n\nimport { RicalelogTheme } from \"./normal\";\n\nexport const {\n  default: styled,\n  css,\n  keyframes,\n  ThemeProvider,\n  ThemeContext,\n  createGlobalStyle,\n} = styledComponents as unknown as styledComponents.ThemedStyledComponentsModule<RicalelogTheme>;\n","const base = 16;\n\nconst colors = {\n  background: \"#060606\",\n  onBackground: \"#ffffff\",\n\n  inactiveText: \"#aaaaaa\",\n\n  headerText: \"#dddddd\",\n\n  blockquoteBorder: \"#666666\",\n  blockquote: \"#1a1a1a\",\n  onBlockquote: \"#ffffff\",\n\n  fixedToc: \"#1a1a1a\",\n  onFixedToc: \"#dddddd\",\n\n  code: \"#333333\",\n  onCode: \"#dddddd\",\n\n  codeblockHighlightBorder: \"#999999\",\n  codeblockHighlight: \"#444444\",\n  codeblockTitle: \"#060606\",\n  codeblockTitleInMobile: \"#666666\",\n  codeblockCopyButtonLabel: \"#dddddd\",\n\n  headingBorder: \"#222222\",\n\n  tag: \"#222222\",\n  onTag: \"skyblue\",\n\n  hr: \"#333333\",\n\n  imageBorder: \"#333333\",\n  imageCaptionText: \"#aaaaaa\",\n\n  tableBorder: \"#333333\",\n\n  postCardItem: \"#333333\",\n\n  postListItemHover: \"#666666\",\n  postListItemThumbnail: \"#222222\",\n  postListItemSubtitleText: \"#dddddd\",\n\n  seriesListItemThumbnail: \"#222222\",\n  sereisListItemCount: \"#b7b3cc99\",\n  seriesListItemCountText: \"#ffff00\",\n  seriesListItemInfo: \"#00000099\",\n\n  sameSereisPosts: \"#1a1a1a\",\n\n  hoverSimplePostSeries: \"#666666\",\n\n  nearbyPostLink: \"#1a1a1a\",\n  onNearbyPostLink: \"#ffffff\",\n};\n\nconst normal = {\n  dimens: {\n    bigMargin: base * 2,\n    margin: base * 1,\n    gutter: base * 0.5,\n    spacing: base * 0.25,\n    thin: base * 0.125,\n  },\n  colors,\n};\n\nexport default normal;\nexport type RicalelogTheme = typeof normal;\n","import { createGlobalStyle } from \"./themedStyledComponents\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, #___gatsby {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    \n    font-family: -apple-system,\n      BlinkMacSystemFont,\n      \"Segoe UI\",\n      \"Noto Sans\",\n      Helvetica,\n      Arial,\n      sans-serif,\n      \"Apple Color Emoji\",\n      \"Segoe UI Emoji\";\n\n    background-color: ${(p) => p.theme.colors.background};\n    color: ${(p) => p.theme.colors.onBackground};\n  }\n\n  h1, h2, h3, h4, h5, h6, p {\n    margin: 0;\n  }\n\n  a {\n    color: skyblue;\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n\n  input, button, select {\n    margin: 0;\n    padding: 0;\n    font-size: 16px;\n    appearance: none;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nexport default GlobalStyle;\n","import {\n  styled,\n  css,\n  keyframes,\n  ThemeProvider,\n} from \"./themedStyledComponents\";\n\nexport default styled;\nexport { css, keyframes, ThemeProvider };\n\nexport { default as normalTheme } from \"./normal\";\nexport * from \"./normal\";\nexport { default as GlobalStyle } from \"./GlobalStyle\";\nexport { default as useTheme } from \"./useTheme\";\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}"],"names":["RICALE_HOME_URL","fill","size","React","width","height","viewBox","xmlns","preserveAspectRatio","d","Container","styled","href","HomeIcon","GitHubIcon","MENU_ITEMS","path","title","p","emphasize","css","HeaderContainer","Menu","theme","colors","headerText","shrink","author","siteUrl","menuItems","slice","Link","to","RelatedLinks","map","item","i","key","InfoRow","inactiveText","onBackground","showLinks","dimens","margin","minContentHeight","children","data","useStaticQuery","site","siteMetadata","ThemeProvider","normalTheme","GlobalStyle","Header","style","minHeight","undefined","Footer","Subtitle","TitleRow","Note","subtitle","note","description","thumbnail","ogType","keywords","siteTitle","siteDesc","pageTitle","seoTitle","desc","pageUrl","imageUrl","keywordsString","join","name","content","property","Actions","SortingAction","PostList","hoverSimplePostSeries","source","actions","orderByAsc","setOrderByAsc","_toConsumableArray","sort","a","b","node","frontmatter","originalDate","localeCompare","className","onClick","st","_ref2","slug","navigate","date","Head","pageContext","tag","totalCount","allMdx","Seo","_ref","edges","Layout","ListPageHeader","SimplePostList","default","keyframes","ThemeContext","createGlobalStyle","styledComponents","bigMargin","base","gutter","spacing","thin","background","blockquoteBorder","blockquote","onBlockquote","fixedToc","onFixedToc","code","onCode","codeblockHighlightBorder","codeblockHighlight","codeblockTitle","codeblockTitleInMobile","codeblockCopyButtonLabel","headingBorder","onTag","hr","imageBorder","imageCaptionText","tableBorder","postCardItem","postListItemHover","postListItemThumbnail","postListItemSubtitleText","seriesListItemThumbnail","sereisListItemCount","seriesListItemCountText","seriesListItemInfo","sameSereisPosts","nearbyPostLink","onNearbyPostLink","_taggedTemplateLiteralLoose","strings","raw"],"sourceRoot":""}