{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2021-210628-read-writings-index-mdx-30ddb8bc809fea2c4672.js","mappings":"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","sources":["webpack://ricalelog/./posts/2021/210628-read-writings/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"JavaScript\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://swizec.com/blog/a-surprising-feature-of-javascript-optional-chaining/\"\n  }, \"A surprising feature of JavaScript optional chaining\")), \"\\n\", React.createElement(_components.p, null, \"제목 그대로, \", React.createElement(_components.code, null, \"?.\"), \" 문법의 사용법에 관한 글이다. 처음보는 용례까지 있어서 깜짝 놀랐다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://h3manth.com/ES2021/\"\n  }, \"ES2021 Features!\")), \"\\n\", React.createElement(_components.p, null, \"ES2021의 새로운 기능들을 소개하는 글이다. 아래 다섯 가지 새로운 기능을 소개하고 있다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Logical Assignment Operators\"), \"\\n\", React.createElement(_components.li, null, \"Numeric Separators\"), \"\\n\", React.createElement(_components.li, null, \"Promise.any and AggregateError\"), \"\\n\", React.createElement(_components.li, null, \"String.prototype.replaceAll\"), \"\\n\", React.createElement(_components.li, null, \"WeakRefs and FinalizationRegistry Objects\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"React\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://medium.com/geekculture/react-5-things-that-might-surprise-you-ddefd9fbac0f\"\n  }, \"React — 5 Things That Might Surprise You\")), \"\\n\", React.createElement(_components.p, null, \"React 에서 사람들이 놓치기 쉬운 특징들 다섯 가지에 대해 설명하는 글이다. 각각 \", React.createElement(_components.code, null, \"useState\"), \", \", React.createElement(_components.code, null, \"useRef\"), \", \", React.createElement(_components.code, null, \"key\"), \" 어트리뷰트, \", React.createElement(_components.code, null, \"Context\"), \" API, \", React.createElement(_components.code, null, \"children\"), \" 프로퍼티와 관련된 내용이다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://kentcdodds.com/blog/usememo-and-usecallback\"\n  }, \"When to useMemo and useCallback\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"useMemo\"), \"와 \", React.createElement(_components.code, null, \"useCallback\"), \"을 언제 써야 할지에 관한 글이다. 안 쓰는 사람들에게 \\\"적극적으로 쓰자\\\"고 말하는 글이 아니라, 남발하는 사람들에게 \\\"적절히 쓰자\\\"고 말하는 글이다. 개인적으로 글 중에 나온 아래 구절이 인상깊었다.\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Performance optimizations are not free. They ALWAYS come with a cost but do NOT always come with a benefit to offset that cost.\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://tinloof.com/blog/using-next.js-and-vercel-to-instantly-load-a-data-heavy-website/\"\n  }, \"Using Next.js and Vercel to instantly load a data-heavy website\")), \"\\n\", React.createElement(_components.p, null, \"Vercel 플랫폼에서 돌아가는 Next.js 웹앱의 성능 개선에 관한 글. 프로덕션 레벨까지 배포된 앱에서의 \", React.createElement(_components.code, null, \"getStaticProps\"), \"의 상세한 사용 예를 볼 수 있다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://www.joshwcomeau.com/react/demystifying-styled-components/\"\n  }, \"Demystifying styled-components\")), \"\\n\", React.createElement(_components.p, null, \"styled-components 의 동작 원리를 간단한 코드와 함께 살펴보는 글. 동적으로 CSS를 삽입하고 클래스 이름을 생성하는 기본적인 원리부터, styled 메서드를 중첩 적용했을 때 어떻게 스타일이 문제 없이 적용되는지에 대해서까지. 사용만으로는 알 수 없는, 공식 문서에서도 찾아보기 힘든 내용들이 들어있다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2021/210628-read-writings/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nimport SameSeriesPosts from \"../../components/SameSeriesPosts\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {frontmatter, sameSeriesPosts} = data.mdx;\n  const {title, slug, date, tags, series, heroImage, heroImageAlt} = frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, title), React.createElement(WrittenDate, null, date), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag))))), React.createElement(SameSeriesPosts, {\n    name: series,\n    data: sameSeriesPosts,\n    current: slug\n  }), !!image && React.createElement(ThumbnailImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children), React.createElement(Comments, null));\n};\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n  }\\n\"])));\nconst ThumbnailImage = styled(GatsbyImage)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 16px;\\n\"])));\nconst WrittenDate = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst Tags = styled.ul(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px\\n      \", \"px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.spacing, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"2677585968\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage, previewContent}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: previewContent !== null && previewContent !== void 0 ? previewContent : excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","a","p","code","ul","li","blockquote","_provideComponents","components","React","href","_templateObject","_templateObject2","_templateObject3","_templateObject4","wrapper","MDXLayout","PostDetailPage","_ref","data","children","frontmatter","sameSeriesPosts","mdx","title","slug","date","tags","series","heroImage","heroImageAlt","image","getImage","Layout","Header","WrittenDate","Tags","map","tag","key","Link","to","SameSeriesPosts","name","current","ThumbnailImage","alt","MdxContent","Comments","styled","_taggedTemplateLiteralLoose","GatsbyImage","theme","dimens","gutter","spacing","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","previewContent","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}