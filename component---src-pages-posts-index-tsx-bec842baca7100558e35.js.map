{"version":3,"file":"component---src-pages-posts-index-tsx-bec842baca7100558e35.js","mappings":"qJAoBA,MAAMA,EAAYC,EAAAA,GAAAA,IAAU,sIAStBC,EAAWD,EAAAA,GAAAA,EAAQ,sBAEnBE,EAAWF,EAAAA,GAAAA,IAAU,gOAerBG,EAAOH,EAAAA,GAAAA,EAAQ,wEAKrB,IA3CA,SAAwB,GAAiD,IAAjD,MAAEI,EAAK,SAAEC,EAAQ,KAAEC,GAA2B,EACpE,OACEC,EAAAA,cAACR,EAAS,OACLM,GAAYE,EAAAA,cAACN,EAAQ,KAAEI,GAC1BE,EAAAA,cAACL,EAAQ,KACPK,EAAAA,cAAAA,KAAAA,KAAKH,KACFE,GAAQC,EAAAA,cAACJ,EAAI,SAAMG,EAAI,MAIlC,C,mHCcA,MAAMP,EAAYC,EAAAA,GAAAA,IAAU,sKASHQ,GAAMA,EAAEC,MAAMC,OAAOC,oBAIxCC,EAAmBZ,EAAAA,GAAAA,IAAU,8GAMZQ,GAAMA,EAAEC,MAAMC,OAAOG,wBAGtCC,EAAOd,EAAAA,GAAAA,IAAU,iGASjBC,EAAWD,EAAAA,GAAAA,IAAU,gEAEfQ,GAAMA,EAAEC,MAAMC,OAAOK,2BAGjC,I,EAAA,EAzDA,SAAsB,GAMC,IAND,MACpBX,EAAK,KACLY,EAAI,KACJC,EAAI,UACJC,EAAS,aACTC,GACkB,EAClB,MAAMC,EAXoB,iBAWNH,EACpB,OACEV,EAAAA,cAACR,EAAS,CAACsB,QAAS,KAAMC,EAAAA,EAAAA,UAAS,UAAUN,IAC3CT,EAAAA,cAACK,EAAgB,KACfL,EAAAA,cAACgB,EAAAA,EAAc,CAACC,OAAQN,EAAWO,IAAKN,KAE1CZ,EAAAA,cAACO,EAAI,KACHP,EAAAA,cAAAA,KAAAA,KAAKH,GACLG,EAAAA,cAACN,EAAQ,KAAEmB,EAAcH,EAAOD,IAIxC,ECXA,MAAMjB,EAAYC,EAAAA,GAAAA,IAAU,mFAM5B,MAhBA,SAAkB,GAA0B,IAA1B,KAAE0B,GAAqB,EACvC,OACEnB,EAAAA,cAACR,EAAS,KACP2B,EAAKC,KAAI,CAAC,EAAaC,KAAC,OAATC,GAAM,SACpBtB,EAAAA,cAACuB,EAAY,eAACC,IAAKH,GAAOC,GAAQ,IAI1C,C,0DCaA,MAAMG,GAAQhC,E,OAAAA,IAAOiC,EAAAA,EAAPjC,CAAmB,+EAMjC,IAvBA,SAAwB,GAAuC,IAAvC,OAAEwB,EAAM,IAAEC,GAA0B,EAC1D,MAAMS,EAAQV,GAASW,EAAAA,EAAAA,GAASX,GAAU,KAE1C,OAAIU,EACK3B,EAAAA,cAACyB,EAAK,CAACE,MAAOA,EAAOT,IAAKA,QAAAA,EAAO,KAIxClB,EAAAA,cAAC6B,EAAAA,EAAW,CACVC,IAAI,kCACJZ,IAAI,oBACJa,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,SAAU,CAAEC,UAAW,QAASC,eAAgB,YAAa,qBAGnE,C,qBCtBA,IAJA,SAAkBnB,GAChB,OAAOA,EAAOG,KAAKE,IAAI,IAAWA,EAAKe,eACzC,C,iICqBO,MAuBMC,EAAO,IAAMtC,EAAAA,cAACuC,EAAAA,EAAG,CAAC1C,MAAM,SAErC,UAnCA,SAAmB,GAAoC,IAApC,KAAEsB,GAAgC,EACnD,MAAMqB,GAAQC,EAAAA,EAAAA,GAAStB,EAAKuB,OAAOC,OACnC,OACE3C,EAAAA,cAAC4C,EAAAA,EAAM,KACL5C,EAAAA,cAAC6C,EAAAA,EAAc,CAAChD,MAAM,IAAIE,KAAMyC,EAAMM,SACtC9C,EAAAA,cAAC+C,EAAAA,EAAQ,CAAC5B,KAAMqB,IAGtB,C","sources":["webpack://ricalelog/./src/components/ListPageHeader.tsx","webpack://ricalelog/./src/components/PostList/PostListItem.tsx","webpack://ricalelog/./src/components/PostList/index.tsx","webpack://ricalelog/./src/components/ThumbnailImage.tsx","webpack://ricalelog/./src/getters/getPosts.ts","webpack://ricalelog/./src/pages/posts/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from \"../themes\";\n\ntype ListPageHeaderProps = {\n  title: string;\n  subtitle?: string;\n  note?: string | number;\n};\nfunction ListPageHeader({ title, subtitle, note }: ListPageHeaderProps) {\n  return (\n    <Container>\n      {!!subtitle && <Subtitle>{subtitle}</Subtitle>}\n      <TitleRow>\n        <h1>{title}</h1>\n        {!!note && <Note>{`(${note})`}</Note>}\n      </TitleRow>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 40px 0 45px;\n  padding-left: 40px;\n\n  @media (max-width: 500px) {\n    padding-left: 20px;\n  }\n`;\n\nconst Subtitle = styled.p``;\n\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n\n  & > h1 {\n    word-break: keep-all;\n  }\n\n  @media (max-width: 500px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst Note = styled.p`\n  margin-bottom: 8px;\n  font-size: 0.9375rem;\n`;\n\nexport default ListPageHeader;\n","import * as React from \"react\";\nimport { navigate } from \"gatsby\";\n\nimport styled from \"../../themes\";\nimport { Post } from \"../../types\";\nimport ThumbnailImage from \"../ThumbnailImage\";\n\nconst INVALID_DATE_STRING = \"Invalid date\";\n\ntype PostListItemProps = Post;\n\nfunction PostListItem({\n  title,\n  slug,\n  date,\n  heroImage,\n  heroImageAlt,\n}: PostListItemProps) {\n  const dateIsValid = date !== INVALID_DATE_STRING;\n  return (\n    <Container onClick={() => navigate(`/posts/${slug}`)}>\n      <ThumbnailWrapper>\n        <ThumbnailImage source={heroImage} alt={heroImageAlt} />\n      </ThumbnailWrapper>\n      <Info>\n        <h2>{title}</h2>\n        <Subtitle>{dateIsValid ? date : slug}</Subtitle>\n      </Info>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 2px;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${(p) => p.theme.colors.postListItemHover};\n  }\n`;\n\nconst ThumbnailWrapper = styled.div`\n  position: relative;\n\n  width: 60px;\n  height: 60px;\n\n  background-color: ${(p) => p.theme.colors.postListItemThumbnail};\n`;\n\nconst Info = styled.div`\n  flex: 1;\n\n  & > h2 {\n    margin: 0;\n    font-size: 1.125rem;\n  }\n`;\n\nconst Subtitle = styled.div`\n  font-size: 0.8125rem;\n  color: ${(p) => p.theme.colors.postListItemSubtitleText};\n`;\n\nexport default PostListItem;\n","import * as React from \"react\";\n\nimport styled from \"../../themes\";\nimport { Post } from \"../../types\";\nimport PostListItem from \"./PostListItem\";\n\ntype PostListProps = {\n  data: Post[];\n};\nfunction PostList({ data }: PostListProps) {\n  return (\n    <Container>\n      {data.map(({ ...item }, i) => (\n        <PostListItem key={i} {...item} />\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport default PostList;\n","import * as React from \"react\";\nimport {\n  GatsbyImage,\n  getImage,\n  ImageDataLike,\n  StaticImage,\n} from \"gatsby-plugin-image\";\nimport styled from \"../themes\";\n\ntype ThumbnailImageProps = {\n  source: ImageDataLike | undefined;\n  alt: string | undefined;\n};\nfunction ThumbnailImage({ source, alt }: ThumbnailImageProps) {\n  const image = source ? getImage(source) : null;\n\n  if (image) {\n    return <Image image={image} alt={alt ?? \"\"} />;\n  }\n\n  return (\n    <StaticImage\n      src=\"../images/defaultThumbnail.jpeg\"\n      alt=\"default thumbnail\"\n      style={{ width: \"100%\", height: \"100%\" }}\n      imgStyle={{ objectFit: \"cover\", objectPosition: \"top left\" }}\n    />\n  );\n}\n\nconst Image = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nexport default ThumbnailImage;\n","import { Post, PostSource } from \"../types\";\n\nfunction getPosts(source: PostSource[]): Post[] {\n  return source.map((item) => ({ ...item.frontmatter }));\n}\n\nexport default getPosts;\n","import * as React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport ListPageHeader from \"../../components/ListPageHeader\";\nimport { PostSource } from \"../../types\";\nimport PostList from \"../../components/PostList\";\nimport getPosts from \"../../getters/getPosts\";\n\ntype PostsPageData = {\n  allMdx: {\n    nodes: PostSource[];\n  };\n};\nfunction PostsPage({ data }: PageProps<PostsPageData>) {\n  const posts = getPosts(data.allMdx.nodes);\n  return (\n    <Layout>\n      <ListPageHeader title=\"글\" note={posts.length} />\n      <PostList data={posts} />\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMdx(\n      filter: { frontmatter: { date: { ne: \"\" } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          slug\n          date(formatString: \"YYYY. M. D.\")\n          heroImageAlt\n          heroImage {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title=\"모든 글\" />;\n\nexport default PostsPage;\n"],"names":["Container","styled","Subtitle","TitleRow","Note","title","subtitle","note","React","p","theme","colors","postListItemHover","ThumbnailWrapper","postListItemThumbnail","Info","postListItemSubtitleText","slug","date","heroImage","heroImageAlt","dateIsValid","onClick","navigate","ThumbnailImage","source","alt","data","map","i","item","PostListItem","key","Image","GatsbyImage","image","getImage","StaticImage","src","style","width","height","imgStyle","objectFit","objectPosition","frontmatter","Head","Seo","posts","getPosts","allMdx","nodes","Layout","ListPageHeader","length","PostList"],"sourceRoot":""}