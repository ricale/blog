{"version":3,"file":"component---src-pages-drafts-index-tsx-5a740931c85204a353cd.js","mappings":"qJAoBA,MAAMA,EAAYC,EAAAA,GAAAA,IAAU,iIAStBC,EAAWD,EAAAA,GAAAA,EAAQ,sBAEnBE,EAAWF,EAAAA,GAAAA,IAAU,gOAerBG,EAAOH,EAAAA,GAAAA,EAAQ,wEAKrB,IA3CA,SAAwB,GAAiD,IAAjD,MAAEI,EAAK,SAAEC,EAAQ,KAAEC,GAA2B,EACpE,OACEC,EAAAA,cAACR,EAAS,OACLM,GAAYE,EAAAA,cAACN,EAAQ,KAAEI,GAC1BE,EAAAA,cAACL,EAAQ,KACPK,EAAAA,cAAAA,KAAAA,KAAKH,KACFE,GAAQC,EAAAA,cAACJ,EAAI,SAAMG,EAAI,MAIlC,C,sHCYA,MAAMP,EAAYC,EAAAA,GAAAA,IAAU,0KAatBQ,EAAmBR,EAAAA,GAAAA,IAAU,kHAS7BS,GAAiBT,EAAAA,EAAAA,IAAOU,EAAAA,EAAPV,CAAmB,+EAMpCW,EAAOX,EAAAA,GAAAA,IAAU,iGASjBY,EAAcZ,EAAAA,GAAAA,IAAU,oEAK9B,I,EAAA,EA/DA,SAAsB,GAMC,IAND,MACpBI,EAAK,KACLS,EAAI,KACJC,EAAI,UACJC,EAAS,aACTC,GACkB,EAClB,MAAMC,EAAQF,GAAYG,EAAAA,EAAAA,GAASH,GAAa,KAChD,OACER,EAAAA,cAACR,EAAS,CAACoB,QAAS,KAAMC,EAAAA,EAAAA,IAAS,UAAUP,IAC3CN,EAAAA,cAACC,EAAgB,OACZS,GAASV,EAAAA,cAACE,EAAc,CAACQ,MAAOA,EAAOI,IAAKL,QAAAA,EAAgB,MAEjET,EAAAA,cAACI,EAAI,KACHJ,EAAAA,cAAAA,KAAAA,KAAKH,GACLG,EAAAA,cAACK,EAAW,KAAEE,IAItB,ECPA,MAAMf,EAAYC,EAAAA,GAAAA,IAAU,mFAM5B,MAhBA,SAAkB,GAA0B,IAA1B,KAAEsB,GAAqB,EACvC,OACEf,EAAAA,cAACR,EAAS,KACPuB,EAAKC,KAAI,CAAC,EAA0BC,KAAC,IAA3B,YAAEC,KAAgBC,GAAM,SACjCnB,EAAAA,cAACoB,EAAY,eAACC,IAAKJ,GAAOC,EAAiBC,GAAQ,IAI3D,C,uHCOO,MAuBMG,EAAO,IAAMtB,EAAAA,cAACuB,EAAAA,EAAG,MAE9B,UAnCA,SAAoB,GAAqC,IAArC,KAAER,GAAiC,EACrD,MAAMS,EAAST,EAAKU,OAAOC,MAC3B,OACE1B,EAAAA,cAAC2B,EAAAA,EAAM,KACL3B,EAAAA,cAAC4B,EAAAA,EAAc,CAAC/B,MAAM,MAAME,KAAMyB,EAAOK,SACzC7B,EAAAA,cAAC8B,EAAAA,EAAQ,CAACf,KAAMS,IAGtB,C","sources":["webpack://ricalelog/./src/components/ListPageHeader.tsx","webpack://ricalelog/./src/components/PostList/PostListItem.tsx","webpack://ricalelog/./src/components/PostList/index.tsx","webpack://ricalelog/./src/pages/drafts/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from \"../themes\";\n\ntype ListPageHeaderProps = {\n  title: string;\n  subtitle?: string;\n  note?: string | number;\n};\nfunction ListPageHeader({ title, subtitle, note }: ListPageHeaderProps) {\n  return (\n    <Container>\n      {!!subtitle && <Subtitle>{subtitle}</Subtitle>}\n      <TitleRow>\n        <h1>{title}</h1>\n        {!!note && <Note>{`(${note})`}</Note>}\n      </TitleRow>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 40px 0;\n  padding-left: 40px;\n\n  @media (max-width: 414px) {\n    padding-left: 20px;\n  }\n`;\n\nconst Subtitle = styled.p``;\n\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n\n  & > h1 {\n    word-break: keep-all;\n  }\n\n  @media (max-width: 414px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst Note = styled.p`\n  margin-bottom: 8px;\n  font-size: 0.9375rem;\n`;\n\nexport default ListPageHeader;\n","import * as React from \"react\";\nimport { navigate } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\n\nimport styled from \"../../themes\";\nimport { PostFrontmatter } from \"../../types\";\n\ntype PostListItemProps = Omit<PostFrontmatter, \"tags\">;\n\nfunction PostListItem({\n  title,\n  slug,\n  date,\n  heroImage,\n  heroImageAlt,\n}: PostListItemProps) {\n  const image = heroImage ? getImage(heroImage) : null;\n  return (\n    <Container onClick={() => navigate(`/posts/${slug}`)}>\n      <ThumbnailWrapper>\n        {!!image && <ThumbnailImage image={image} alt={heroImageAlt ?? \"\"} />}\n      </ThumbnailWrapper>\n      <Info>\n        <h2>{title}</h2>\n        <WrittenDate>{date}</WrittenDate>\n      </Info>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 2px;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: #666666;\n  }\n`;\n\nconst ThumbnailWrapper = styled.div`\n  position: relative;\n\n  width: 60px;\n  height: 60px;\n\n  background-color: #222222;\n`;\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst Info = styled.div`\n  flex: 1;\n\n  & > h2 {\n    margin: 0;\n    font-size: 1.125rem;\n  }\n`;\n\nconst WrittenDate = styled.div`\n  font-size: 0.8125rem;\n  color: #dddddd;\n`;\n\nexport default PostListItem;\n","import * as React from \"react\";\n\nimport styled from \"../../themes\";\nimport { PostFrontmatter } from \"../../types\";\nimport PostListItem from \"./PostListItem\";\n\ntype PostListProps = {\n  data: {\n    frontmatter: PostFrontmatter;\n  }[];\n};\nfunction PostList({ data }: PostListProps) {\n  return (\n    <Container>\n      {data.map(({ frontmatter, ...item }, i) => (\n        <PostListItem key={i} {...frontmatter} {...item} />\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport default PostList;\n","import * as React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport ListPageHeader from \"../../components/ListPageHeader\";\nimport { PostFrontmatter } from \"../../types\";\nimport PostList from \"../../components/PostList\";\n\ntype DraftsPageData = {\n  allMdx: {\n    nodes: {\n      frontmatter: PostFrontmatter;\n    }[];\n  };\n};\nfunction DraftsPage({ data }: PageProps<DraftsPageData>) {\n  const drafts = data.allMdx.nodes;\n  return (\n    <Layout>\n      <ListPageHeader title=\"임시글\" note={drafts.length} />\n      <PostList data={drafts} />\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMdx(\n      filter: { frontmatter: { date: { eq: \"\" } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          slug\n          date(formatString: \"YYYY. M. D.\")\n          heroImageAlt\n          heroImage {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo />;\n\nexport default DraftsPage;\n"],"names":["Container","styled","Subtitle","TitleRow","Note","title","subtitle","note","React","ThumbnailWrapper","ThumbnailImage","GatsbyImage","Info","WrittenDate","slug","date","heroImage","heroImageAlt","image","getImage","onClick","navigate","alt","data","map","i","frontmatter","item","PostListItem","key","Head","Seo","drafts","allMdx","nodes","Layout","ListPageHeader","length","PostList"],"sourceRoot":""}