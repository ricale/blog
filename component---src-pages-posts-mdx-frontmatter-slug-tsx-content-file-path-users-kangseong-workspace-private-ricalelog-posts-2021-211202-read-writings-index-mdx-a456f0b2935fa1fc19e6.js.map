{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2021-211202-read-writings-index-mdx-a456f0b2935fa1fc19e6.js","mappings":"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","sources":["webpack://ricalelog/./posts/2021/211202-read-writings/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    code: \"code\",\n    ol: \"ol\",\n    li: \"li\",\n    hr: \"hr\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://wormwlrm.github.io/2021/10/11/Why-User-Agent-string-is-so-complex.html\"\n  }, \"브라우저의 사용자 에이전트는 왜 이렇게 복잡하게 생겼을까?\")), \"\\n\", React.createElement(_components.p, null, \"브라우저 사용자 에이전트의 역사에 대한 간략한 소개. 간추리자면 \\\"사용자 에이전트 정보가 이렇게 엉망이 된 이유는 브라우저 개발사들이 경쟁에서 뒤쳐지지 않기 위해 다른 회사 브라우저의 사용자 에이전트 정보까지 자신들의 브라우저에 포함시켰기 때문이다.\\\" 라는 이야기다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://reactiver.dev/review-react-derived-state/\"\n  }, \"React Derived State 다시 보기\")), \"\\n\", React.createElement(_components.p, null, \"Derived State 가 뭔지, 문제가 뭔지, 개선책이 뭔지를 설명한다. Derived State 는 props 에 의해 초기화되는 상태값으로, \", React.createElement(_components.code, null, \"initial\"), \" 을 말머리로 갖는 props 를 작성한 적이 있거나 본 적이 있다면 이미 잘 알고 있을 것이다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://overreacted.io/before-you-memo/\"\n  }, \"Before You memo()\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"memo()\"), \" 를 사용하기 전에 적용해볼 수 있는, React 앱의 성능을 개선하는 기초적이면서도 놓치기 쉬운 방법을 소개한다. 투박하게 축약하자면, \\\"자주 변경되는 상태값을 너무 상위 컴포넌트에 두지 말자\\\"가 되겠다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://overreacted.io/writing-resilient-components/\"\n  }, \"Writing Resilient Components\")), \"\\n\", React.createElement(_components.p, null, \"탄력적인 컴포넌트를 작성하는 원칙에 관한 글. 여기서 말하는 \\\"탄력적인 컴포넌트\\\"는 유연하고 독립적인 컴포넌트를 말하는 듯 하다. 말하는 원칙은 아래 네 개인데\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"데이터 흐름을 막지 마라: props, state 의 변경에 따라 동작하는 React 컴포넌트의 기본 라이프사이클을 흐리지 말라는 말이다. 불필요한 Derived State 사용을 줄이는 것도 여기에 포함된다.\"), \"\\n\", React.createElement(_components.li, null, \"언제나 렌더링 되게 하라: 굳이 렌더링 타이밍을 조정하려 하지 말라는 말. 자연스럽게 현재 상태에 따라 동작하게 하라는 의미다.\"), \"\\n\", React.createElement(_components.li, null, \"컴포넌트는 싱글톤이 아니다: 자신도 모르게 싱글톤으로 작성하고 있을 수도 있다고? 그럼 같은 한 화면에서 컴포넌트를 두 번 렌더링해보자.\"), \"\\n\", React.createElement(_components.li, null, \"컴포넌트의 로컬 상태는 독립적으로: 이건 뭐 부언할 말도 없다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"공감이 되기도 하고 새삼 되새기게 되기도 하는 좋은 글이다. 한글 번역본도 글 말머리에 링크가 있어 영어가 약해도 읽을 수 있다.\"), \"\\n\", React.createElement(_components.hr), \"\\n\", React.createElement(_components.p, null, \"앞으로는 글을 많이 읽고 링크만 공유하는 것에 초점을 두지 않고 (어차피 제대로 지켜진 적도 없다), 글을 적게 읽더라도 어느정도 요약을 작성하면서 자주자주 적는 걸 목표로 하려고 한다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2021/211202-read-writings/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {title, date, tags, heroImage, heroImageAlt} = data.mdx.frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, title), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag)))), React.createElement(\"div\", null, date), !!image && React.createElement(GatsbyImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children));\n};\nconst Tags = styled.ul(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px \", \"px\\n      0px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.thin, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"3533977744\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h3","a","p","code","ol","li","hr","_provideComponents","components","React","href","_templateObject","wrapper","MDXLayout","PostDetailPage","_ref","data","children","title","date","tags","heroImage","heroImageAlt","mdx","frontmatter","image","getImage","Layout","Tags","map","tag","key","Link","to","GatsbyImage","alt","MdxContent","styled","_taggedTemplateLiteralLoose","theme","dimens","gutter","thin","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","slug","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}