{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2021-210821-react-native-webview-android-back-button-index-mdx-72931275a2716e673c3b.js","mappings":"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","sources":["webpack://ricalelog/./posts/2021/210821-react-native-webview-android-back-button/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx","webpack://ricalelog/./src/components/Comments.tsx","webpack://ricalelog/./src/components/MdxContent.tsx","webpack://ricalelog/./src/components/SameSeriesPosts.tsx","webpack://ricalelog/./src/components/Tag.tsx","webpack://ricalelog/./src/components/TagList.tsx","webpack://ricalelog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    div: \"div\",\n    code: \"code\",\n    h3: \"h3\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"React Native 를 웹뷰 컨테이너로 사용해 웹앱을 구현하고 있다.\"), \"\\n\", React.createElement(_components.p, null, \"웹뷰를 사용한 하이브리드앱 구현 시 주의해야 할 점 중 하나는 안드로이드 기기의 백버튼(뒤로가기 버튼)에 대한 처리다. 사람들은 이전 웹페이지로 돌아가길 기대하며 백버튼을 누르지만, React Native 는 웹뷰 내에서의 이전 페이지로 이동하는 것이 아니라 React Native 상의 이전 화면으로 돌아가기 때문이다.\"), \"\\n\", React.createElement(_components.p, null, \"만약 웹뷰 화면이 해당 앱의 첫 화면이라면, 백버튼을 눌렀을 때 이전 웹페이지로 가는 것이 아니라 앱이 종료되는 것을 경험할 수 있다. 당연하게도 그것은 개발자가 의도한 사항도, 사용자가 의도한 사항도 아니다.\"), \"\\n\", React.createElement(_components.p, null, \"그러면 웹뷰가 있는 화면에서 백버튼을 눌렀을 때 React Native 의 이전 화면이 아닌 웹뷰의 이전 웹페이지가로 가도록 코드를 수정해보자.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"1-onnavigationstatechange\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#1-onnavigationstatechange\",\n    \"aria-label\": \"1 onnavigationstatechange permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1. \", React.createElement(_components.code, null, \"onNavigationStateChange\")), \"\\n\", React.createElement(_components.p, null, \"React Native WebView 를 사용하고 있다면 \", React.createElement(_components.a, {\n    href: \"https://github.com/react-native-webview/react-native-webview/blob/master/docs/Reference.md#onnavigationstatechange\"\n  }, React.createElement(_components.code, null, \"onNavigationStateChange\"), \" 콜백\"), \"과 \", React.createElement(_components.a, {\n    href: \"https://reactnative.dev/docs/backhandler\"\n  }, React.createElement(_components.code, null, \"BackHandler\"), \" API\"), \"를 사용해 이전 웹페이지로 이동하도록 백버튼의 기능을 조정할 수 있다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">HomeScreen</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> ref <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>navState<span class=\\\"token punctuation\\\">,</span> setNavState<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onPress</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>navState<span class=\\\"token punctuation\\\">.</span>canGoBack<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// 뒤로 갈 수 있는 상태라면 이전 웹페이지로 이동한다</span>\\n        ref<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">goBack</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// 기본 뒤로가기 동작을 수행하지 않을 거라면 true 를 리턴한다.</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// 뒤로 갈 수 없는 상태라면</span>\\n        <span class=\\\"token comment\\\">// 다른 원하는 행동을 하면 된다</span>\\n        console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"do something\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token comment\\\">// 기본 뒤로가기 동작을 수행하지 않을 거라면 true 가 아닌 값을 리턴한다.</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// 안드로이드 백버튼이 눌렸을 때 이벤트 리스너를 등록한다.</span>\\n    BackHandler<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hardwareBackPress\\\"</span><span class=\\\"token punctuation\\\">,</span> onPress<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      BackHandler<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">removeEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hardwareBackPress\\\"</span><span class=\\\"token punctuation\\\">,</span> onPress<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>navState<span class=\\\"token punctuation\\\">.</span>canGoBack<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>WebView\\n      <span class=\\\"token comment\\\">// ...</span>\\n      ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>ref<span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token comment\\\">// 웹뷰의</span>\\n      onNavigationStateChange<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>setNavState<span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"onNavigationStateChange\"), \" 콜백의 첫 번째 인자(\", React.createElement(_components.code, null, \"navState\"), \")는 웹뷰의 현재 상태가 담긴 객체인데, 해당 객체의 \", React.createElement(_components.code, null, \"canGoBack\"), \" 값은 현재 웹뷰에서 뒤로가기가 가능한 상태인지를 알려준다 (예를 들어 첫페이지에서는 뒤로 갈 수 없을 것이다. 그런 경우에는 \", React.createElement(_components.code, null, \"false\"), \" 값을 가진다).\"), \"\\n\", React.createElement(_components.p, null, \"뒤로 갈 수 있다면 \", React.createElement(_components.code, null, \"ref.current.goBack()\"), \"메서드를 사용해 이전 페이지로 돌아가고, 그렇지 않다면 필요한 다른 작업을 하면 되겠다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"2-html5-history-api-대응\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-html5-history-api-%EB%8C%80%EC%9D%91\",\n    \"aria-label\": \"2 html5 history api 대응 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2. HTML5 History API 대응\"), \"\\n\", React.createElement(_components.p, null, \"하지만 \", React.createElement(_components.code, null, \"onNavigationStateChange\"), \" 콜백에 문제가 있으니, 바로 \", React.createElement(_components.code, null, \"pushState()\"), \", \", React.createElement(_components.code, null, \"replaceState()\"), \" 등 \", React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/API/History_API\"\n  }, \"HTML5 History API\"), \"로 추가된 기능으로 페이지 이동을 하면 동작하지 않는다는 것이다. 이는 \", React.createElement(_components.code, null, \"canGoBack\"), \" 값이 최신화되지 않는다는 뜻이고, 위에서 작성한 코드가 정상적으로 동작할 수 없다는 뜻이다.\"), \"\\n\", React.createElement(_components.p, null, \"물론 여기서 주저앉을 수는 없다. 이제 우리는 \", React.createElement(_components.a, {\n    href: \"https://github.com/react-native-webview/react-native-webview/blob/master/docs/Reference.md#onmessage\"\n  }, React.createElement(_components.code, null, \"onMessage\"), \" 콜백\"), \"과 \", React.createElement(_components.a, {\n    href: \"https://github.com/react-native-webview/react-native-webview/blob/master/docs/Reference.md#injectjavascriptstr\"\n  }, React.createElement(_components.code, null, \"webview.injectJavaScript()\"), \" 메서드\"), \"를 통해 \", React.createElement(_components.code, null, \"pushState()\"), \", \", React.createElement(_components.code, null, \"replaceState()\"), \" 동작 시 웹뷰의 상태를 받아오도록 할 것이다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"21-webviewinjectjavascript\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#21-webviewinjectjavascript\",\n    \"aria-label\": \"21 webviewinjectjavascript permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1. \", React.createElement(_components.code, null, \"webview.injectJavaScript()\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"webview.injectJavaScript()\"), \" 메서드는 웹뷰에 자바스크립트 코드를 삽입할 수 있도록 해주는 메서드이다. 해당 메서드를 통해 \", React.createElement(_components.code, null, \"pushState()\"), \"와 \", React.createElement(_components.code, null, \"replaceState()\"), \" 메서드를 래핑해줄 것이다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">INJECTED_CODE</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\n(function() {\\n  function wrap(fn) {\\n    return function wrapper() {\\n      var res = fn.apply(this, arguments);\\n      window.ReactNativeWebView.postMessage('navigationStateChange');\\n      return res;\\n    }\\n  }\\n\\n  history.pushState = wrap(history.pushState);\\n  history.replaceState = wrap(history.replaceState);\\n  window.addEventListener('popstate', function() {\\n    window.ReactNativeWebView.postMessage('navigationStateChange');\\n  });\\n})();\\n\\ntrue;\\n</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">HomeScreen</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>WebView\\n      <span class=\\\"token comment\\\">// ...</span>\\n      ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>ref<span class=\\\"token punctuation\\\">}</span>\\n      onLoadStart<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> ref<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">injectJavaScript</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">INJECTED_CODE</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n      onNavigationStateChange<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>setNavState<span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h4, {\n    id: \"211-injectedjavascript-props-는-안-되나\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#211-injectedjavascript-props-%EB%8A%94-%EC%95%88-%EB%90%98%EB%82%98\",\n    \"aria-label\": \"211 injectedjavascript props 는 안 되나 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1.1. \", React.createElement(_components.code, null, \"injectedJavaScript\"), \" props 는 안 되나?\"), \"\\n\", React.createElement(_components.p, null, \"React Native WebView 에는 \", React.createElement(_components.code, null, \"webview.injectJavaScript()\"), \"메서드와 비슷한 기능을 하는 \", React.createElement(_components.a, {\n    href: \"https://github.com/react-native-webview/react-native-webview/blob/master/docs/Reference.md#injectedjavascript\"\n  }, React.createElement(_components.code, null, \"injectedJavaScript\"), \" prop\"), \"도 존재한다. 하지만 결정적인 차이점이 존재하는데, \", React.createElement(_components.code, null, \"webview.injectJavaScript()\"), \"는 우리가 원하는 때에만 골라서 코드를 삽입할 수 있지만, \", React.createElement(_components.code, null, \"injectedJavaScript\"), \"는 \", React.createElement(_components.code, null, \"onLoad\"), \" 이벤트가 발생할 때마다 코드를 삽입된다는 것이다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"onLoadStart\"), \" 이벤트는 실제 페이지 이동이 일어날 때만 발생하는데 반해 \", React.createElement(_components.code, null, \"onLoad\"), \" 이벤트는 History API 등으로 로딩이 발생할 때도 발생한다. 때문에 같은 코드가 중복적으로 삽입될 수 있고, 우리는 그러한 현상을 피하기 위해 \", React.createElement(_components.code, null, \"onLoadStart\"), \"와 \", React.createElement(_components.code, null, \"injectJavaScript()\"), \" 메서드를 조합해서 코드를 삽입한다.\"), \"\\n\", React.createElement(_components.p, null, \"(단, \", React.createElement(_components.code, null, \"injectedJavaScriptBeforeContentLoaded\"), \" prop 을 사용하면 위 코드와 거의 동일한 효과를 낼 수 있다.)\"), \"\\n\", React.createElement(_components.h4, {\n    id: \"212-삽입된-코드는-어떤-코드\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#212-%EC%82%BD%EC%9E%85%EB%90%9C-%EC%BD%94%EB%93%9C%EB%8A%94-%EC%96%B4%EB%96%A4-%EC%BD%94%EB%93%9C\",\n    \"aria-label\": \"212 삽입된 코드는 어떤 코드 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1.2. 삽입된 코드는 어떤 코드?\"), \"\\n\", React.createElement(_components.p, null, \"위 코드에는 삽입된 코드가 통문자열로 되어있기 때문에 알아보기 힘들다. 하이라이트된 코드로 다시 살펴보자.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">wrap</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">fn</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">wrapper</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">var</span> res <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">fn</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">apply</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">,</span> arguments<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      window<span class=\\\"token punctuation\\\">.</span>ReactNativeWebView<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">postMessage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"navigationStateChange\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token keyword\\\">return</span> res<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  history<span class=\\\"token punctuation\\\">.</span>pushState <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">wrap</span><span class=\\\"token punctuation\\\">(</span>history<span class=\\\"token punctuation\\\">.</span>pushState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  history<span class=\\\"token punctuation\\\">.</span>replaceState <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">wrap</span><span class=\\\"token punctuation\\\">(</span>history<span class=\\\"token punctuation\\\">.</span>replaceState<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  window<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"popstate\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    window<span class=\\\"token punctuation\\\">.</span>ReactNativeWebView<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">postMessage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"navigationStateChange\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"pushState()\"), \"와 \", React.createElement(_components.code, null, \"replaceState()\"), \"를 래핑하고 \", React.createElement(_components.code, null, \"popState\"), \" 이벤트에 리스너를 붙이는 코드라는 것을 알 수 있다. 모든 코드들은 공통적으로 \", React.createElement(_components.a, {\n    href: \"https://github.com/react-native-webview/react-native-webview/blob/master/docs/Reference.md#postmessagestr\"\n  }, React.createElement(_components.code, null, \"ReactNativeWebView.postMessage()\"), \" 메서드\"), \"를 호출하는 것을 볼 수 있다. 이 메서드가 호출될 때마다 웹뷰는 웹페이지의 상태를 \", React.createElement(_components.code, null, \"onMessage\"), \" 콜백으로 받아볼 수 있다.\"), \"\\n\", React.createElement(_components.h3, {\n    id: \"22-onmessage\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#22-onmessage\",\n    \"aria-label\": \"22 onmessage permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.2. \", React.createElement(_components.code, null, \"onMessage\")), \"\\n\", React.createElement(_components.p, null, \"그럼 \", React.createElement(_components.code, null, \"onMessage\"), \" 콜백도 넣어보자.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">HomeScreen</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>WebView\\n      <span class=\\\"token comment\\\">// ...</span>\\n      ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>ref<span class=\\\"token punctuation\\\">}</span>\\n      onLoadStart<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> ref<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">injectJavaScript</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">INJECTED_CODE</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n      onNavigationStateChange<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>setNavState<span class=\\\"token punctuation\\\">}</span>\\n      onMessage<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> nativeEvent <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nativeEvent<span class=\\\"token punctuation\\\">.</span>data <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">\\\"navigationStateChange\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token function\\\">setNavState</span><span class=\\\"token punctuation\\\">(</span>nativeEvent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"됐다. 이제 \", React.createElement(_components.code, null, \"pushState()\"), \", \", React.createElement(_components.code, null, \"replaceState()\"), \"도 놓치지 않게 되었다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"3-전체-코드\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#3-%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C\",\n    \"aria-label\": \"3 전체 코드 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3. 전체 코드\"), \"\\n\", React.createElement(_components.p, null, \"(아래 코드는 이해를 돕기 위한 의사코드로, 실제로는 동작하지 않을 수도 있다)\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token constant\\\">INJECTED_CODE</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\n(function() {\\n  function wrap(fn) {\\n    return function wrapper() {\\n      var res = fn.apply(this, arguments);\\n      window.ReactNativeWebView.postMessage('navigationStateChange');\\n      return res;\\n    }\\n  }\\n\\n  history.pushState = wrap(history.pushState);\\n  history.replaceState = wrap(history.replaceState);\\n  window.addEventListener('popstate', function() {\\n    window.ReactNativeWebView.postMessage('navigationStateChange');\\n  });\\n})();\\n\\ntrue;\\n</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">HomeScreen</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">props</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> ref <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>navState<span class=\\\"token punctuation\\\">,</span> setNavState<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">onPress</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>navState<span class=\\\"token punctuation\\\">.</span>canGoBack<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// 뒤로 갈 수 있는 상태라면 이전 웹페이지로 이동한다</span>\\n        ref<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">goBack</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// 뒤로 갈 수 없는 상태라면</span>\\n        <span class=\\\"token comment\\\">// 다른 원하는 행동을 하면 된다</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token comment\\\">// 안드로이드 백버튼이 눌렸을 때 이벤트 리스너를 등록한다.</span>\\n    BackHandler<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">addEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hardwareBackPress\\\"</span><span class=\\\"token punctuation\\\">,</span> onPress<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      BackHandler<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">removeEventListener</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"hardwareBackPress\\\"</span><span class=\\\"token punctuation\\\">,</span> onPress<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>navState<span class=\\\"token punctuation\\\">.</span>canGoBack<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">&lt;</span>WebView\\n      <span class=\\\"token comment\\\">// ...</span>\\n      ref<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>ref<span class=\\\"token punctuation\\\">}</span>\\n      onLoadStart<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> ref<span class=\\\"token punctuation\\\">.</span>current<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">injectJavaScript</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">INJECTED_CODE</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span>\\n      onNavigationStateChange<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span>setNavState<span class=\\\"token punctuation\\\">}</span>\\n      onMessage<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> nativeEvent <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>nativeEvent<span class=\\\"token punctuation\\\">.</span>data <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">\\\"navigationStateChange\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token function\\\">setNavState</span><span class=\\\"token punctuation\\\">(</span>nativeEvent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"4-참고\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#4-%EC%B0%B8%EA%B3%A0\",\n    \"aria-label\": \"4 참고 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"4. 참고\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/react-native-webview/react-native-webview\"\n  }, \"React Native WebView\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/react-native-webview/react-native-webview/issues/24#issuecomment-483956651\"\n  }, \"MIGRATED: iOS WebView doesn't support hash url change. The onNavigationStateChange listener will not be called when url hash changes. (#20447) #24\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2021/210821-react-native-webview-android-back-button/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\nimport * as React from \"react\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nimport SameSeriesPosts from \"../../components/SameSeriesPosts\";\nimport TagList from \"../../components/TagList\";\nfunction PostDetailPage(_ref) {\n  let {data, children} = _ref;\n  const {frontmatter, sameSeriesPosts} = data.mdx;\n  const {title, slug, date, tags, series, heroImage, heroImageAlt} = frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, title), React.createElement(WrittenDate, null, date), React.createElement(TagList, {\n    tags: tags\n  })), React.createElement(SameSeriesPosts, {\n    name: series,\n    data: sameSeriesPosts,\n    current: slug\n  }), !!image && React.createElement(ThumbnailImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(PostContent, null, children), React.createElement(Comments, null));\n}\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n  }\\n\"])));\nconst ThumbnailImage = styled(GatsbyImage)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 16px;\\n\"])));\nconst WrittenDate = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst Tags = styled.ul(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px\\n      \", \"px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.spacing, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst PostContent = styled(MdxContent)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 60px;\\n\"])));\nconst query = \"2677585968\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage, previewContent}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: previewContent !== null && previewContent !== void 0 ? previewContent : excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { useEffect, useRef } from \"react\";\n\nfunction Comments() {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const scriptTag = document.createElement(\"script\");\n    const attrs = {\n      src: \"https://utteranc.es/client.js\",\n      repo: \"ricale/blog\",\n      \"issue-term\": \"pathname\",\n      label: \"utterances\",\n      theme: \"github-dark\",\n      crossOrigin: \"anonymous\",\n      async: \"true\",\n    };\n    Object.entries(attrs).forEach(([key, value]) => {\n      scriptTag.setAttribute(key, value);\n    });\n    ref.current?.appendChild(scriptTag);\n  }, []);\n\n  return <div id=\"comments\" ref={ref} />;\n}\n\nexport default Comments;\n","import styled from \"../themes\";\n\nconst MdxContent = styled.div`\n  font-size: 16px;\n  line-height: 1.5;\n\n  p {\n    margin-top: 0;\n    margin-bottom: 16px;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 24px;\n    margin-bottom: 16px;\n    line-height: 1.25;\n    font-weight: 600;\n\n    > a.anchor path {\n      fill: white;\n    }\n  }\n\n  h1 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid #21262d;\n    font-size: 2.125em;\n  }\n\n  h2 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid #21262d;\n    font-size: 1.625em;\n  }\n\n  h3 {\n    font-size: 1.5em;\n  }\n\n  h4 {\n    font-size: 1.25em;\n  }\n\n  h5 {\n    font-size: 1em;\n  }\n\n  h6 {\n    font-size: 0.9375em;\n  }\n\n  ul,\n  ol,\n  .gatsby-resp-image-wrapper {\n    margin-bottom: 16px;\n  }\n\n  table {\n    width: max-content;\n    max-width: 100%;\n    margin-bottom: 16px;\n    border-collapse: collapse;\n    tr {\n      border-top: 1px solid #21262d;\n    }\n    td,\n    th {\n      padding: 6px 13px;\n      border: 1px solid #30363d;\n    }\n  }\n\n  hr {\n    height: 0.25em;\n    margin: 24px 0;\n    border: 0;\n\n    background-color: #30363d;\n  }\n\n  li > ul,\n  li > ol {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  blockquote {\n    position: relative;\n\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 16px;\n    padding: 16px 32px;\n    border-left: 1px solid ${(p) => p.theme.colors.blockquoteBorder};\n    border-left-width: 10px;\n\n    background-color: ${(p) => p.theme.colors.blockquote};\n\n    > :first-child {\n      margin-top: 0;\n    }\n    > :last-child {\n      margin-bottom: 0;\n    }\n    > ul,\n    > ol {\n      padding-left: 20px;\n    }\n  }\n\n  blockquote:before {\n    content: '\"';\n\n    position: absolute;\n    top: -10px;\n    left: 5px;\n\n    font-size: 3em;\n    color: ${(p) => p.theme.colors.blockquoteBorder};\n  }\n  blockquote:after {\n    content: '\"';\n\n    position: absolute;\n    bottom: -30px;\n    right: 5px;\n\n    font-size: 3em;\n    color: ${(p) => p.theme.colors.blockquoteBorder};\n  }\n\n  code {\n    padding: 0.2em 0.4em;\n    border-radius: 2px;\n\n    font-size: 0.85em;\n\n    background-color: ${(p) => p.theme.colors.code};\n    color: ${(p) => p.theme.colors.onCode};\n    white-space: break-spaces;\n  }\n\n  pre[class*=\"language-\"] {\n    margin-bottom: 16px;\n\n    /* overflow-x: auto; */\n  }\n\n  pre > code {\n    padding: unset;\n    border-radius: unset;\n    background-color: unset;\n    color: unset;\n  }\n`;\n\nexport default MdxContent;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport styled, { css } from \"../themes\";\nimport { PostFrontmatter } from \"../types\";\n\ntype SameSeriesPostsProps = {\n  name?: string;\n  data?:\n    | null\n    | {\n        frontmatter: Pick<PostFrontmatter, \"title\" | \"slug\">;\n      }[];\n  current?: string;\n};\nfunction SameSeriesPosts({ name, data, current }: SameSeriesPostsProps) {\n  const [collapsed, setCollapsed] = React.useState(true);\n  if (!data) {\n    return null;\n  }\n  return (\n    <Container>\n      <Header collapsed={collapsed} onClick={() => setCollapsed((st) => !st)}>\n        <h2>\n          시리즈 <Link to={`/series/${name}/`}>{`\"${name}\"`}</Link>\n        </h2>\n        <span>▲</span>\n      </Header>\n      {!collapsed && (\n        <List>\n          {data.map(({ frontmatter: { slug, title } }) => (\n            <ListItem active={slug === current} key={slug}>\n              <Link to={`/posts/${slug}`}>{title}</Link>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin-bottom: 16px;\n  align-items: center;\n\n  background-color: #111111;\n`;\n\ntype HeaderProps = {\n  collapsed: boolean;\n};\nconst Header = styled.div<HeaderProps>`\n  display: flex;\n  justify-content: space-between;\n  padding: 16px;\n  cursor: pointer;\n\n  > h2 {\n    margin: 0;\n    font-size: 1rem;\n  }\n\n  > span {\n    user-select: none;\n    transform: rotate(${(p) => (p.collapsed ? 0 : 180)}deg);\n  }\n`;\n\nconst List = styled.ol`\n  margin: 0 16px;\n  padding-bottom: 16px;\n`;\n\ntype ListItemProps = {\n  active: boolean;\n};\nconst ListItem = styled.li<ListItemProps>`\n  ${(p) =>\n    p.active &&\n    css`\n      & > a {\n        font-weight: bold;\n        font-style: italic;\n        text-decoration: underline;\n      }\n    `}\n`;\n\nexport default SameSeriesPosts;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"../themes\";\n\ntype TagProps = {\n  value: string;\n};\nfunction Tag({ value }: TagProps) {\n  return <TagComp to={`/tags/${value}`}>{value}</TagComp>;\n}\n\nconst TagComp = styled(Link)`\n  display: inline-block;\n  padding: ${(p) => p.theme.dimens.spacing}px ${(p) => p.theme.dimens.gutter}px;\n  border-radius: 2px;\n\n  background-color: ${(p) => p.theme.colors.tag};\n  color: ${(p) => p.theme.colors.onTag};\n  text-decoration: none;\n`;\n\nexport default Tag;\n","import * as React from \"react\";\n\nimport styled from \"../themes\";\nimport Tag from \"./Tag\";\n\nfunction isStringArray(arr: unknown[]): arr is string[] {\n  return typeof arr[0] === \"string\";\n}\n\ntype TagListProps = {\n  tags: string[] | { fieldValue: string; totalCount: number }[];\n  showCount?: boolean;\n};\nfunction TagList({ tags, showCount, ...props }: TagListProps) {\n  const items = isStringArray(tags)\n    ? tags.map((tag) => ({ fieldValue: tag, totalCount: undefined }))\n    : tags;\n  return (\n    <Container {...props}>\n      {items.map((tag) => (\n        <li key={tag.fieldValue}>\n          <Tag value={tag.fieldValue} />\n          {showCount && !!tag.totalCount && <sup>{`${tag.totalCount}`}</sup>}\n        </li>\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: ${(p) => p.theme.dimens.gutter}px;\n\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport default TagList;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","a","div","code","h3","h4","ul","li","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","wrapper","MDXLayout","PostDetailPage","_ref","data","children","frontmatter","sameSeriesPosts","mdx","title","slug","date","tags","series","heroImage","heroImageAlt","image","getImage","Layout","Header","WrittenDate","TagList","SameSeriesPosts","name","current","ThumbnailImage","alt","PostContent","Comments","styled","_taggedTemplateLiteralLoose","GatsbyImage","theme","dimens","gutter","spacing","colors","tag","onTag","MdxContent","Head","_ref2","_image$images","_image$images$fallbac","previewContent","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","ref","useRef","useEffect","scriptTag","document","createElement","entries","repo","label","crossOrigin","async","forEach","key","value","setAttribute","_ref$current","appendChild","blockquoteBorder","blockquote","onCode","Container","collapsed","List","ListItem","active","css","setCollapsed","onClick","st","Link","to","map","TagComp","showCount","items","fieldValue","totalCount","undefined","Tag","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}