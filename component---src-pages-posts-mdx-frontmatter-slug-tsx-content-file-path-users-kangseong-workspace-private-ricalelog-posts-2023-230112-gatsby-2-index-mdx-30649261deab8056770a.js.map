{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2023-230112-gatsby-2-index-mdx-30649261deab8056770a.js","mappings":"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","sources":["webpack://ricalelog/./posts/2023/230112-gatsby-2/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    code: \"code\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"이전 글에서는 Gatsby 기본 기능을 구현을 위한 튜토리얼을 소개했고 태그 기능을 구현했다. 오늘은 MDX 글 안에 인라인 이미지와 테이블을 삽입해보자.\"), \"\\n\", React.createElement(_components.h1, null, \"1. 이미지 삽입\"), \"\\n\", React.createElement(_components.p, null, \"정적 이미지는 \", React.createElement(_components.code, null, \"gatsby-plugin-image\"), \" 플러그인과 \", React.createElement(_components.code, null, \"StaticImage\"), \" 컴포넌트로 적용한다. 페이지 컴포넌트에 들어가는 동적 이미지는 \", React.createElement(_components.code, null, \"gatsby-transformer-sharp\"), \" 플러그인과 \", React.createElement(_components.code, null, \"GatsbyImage\"), \" 컴포넌트로 적용한다. 그렇다면 MDX 본문 안에 들어가는 이미지는 어떻게 적용할까?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/how-to/images-and-media/working-with-images-in-markdown/\"\n  }, \"공식 문서\"), \"에도 잘 나와있지만 그럼에도 불구하고 적용에 살짝 애를 먹었기 때문에 기록해두도록 하겠다.\"), \"\\n\", React.createElement(_components.h2, null, \"1.1. \", React.createElement(_components.code, null, \"gatsby-remark-images\"), \" 플러그인 적용\"), \"\\n\", React.createElement(_components.p, null, \"일단 플러그인을 설치하자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"$ npm i gatsby-remark-images\\n\")), \"\\n\", React.createElement(_components.p, null, \"그리고 \", React.createElement(_components.code, null, \"gatsby-config.ts\"), \" 를 수정하자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"// gatsby-config.ts\\nimport type { GatsbyConfig } from \\\"gatsby\\\";\\n\\nconst config: GatsbyConfig = {\\n  // ...\\n  plugins: [\\n    // ...\\n    // \\\"gatsby-plugin-mdx\\\", // <- 이렇게 문자열 형식으로 gatsby-plugin-mdx 를 쓰고 있었다면, 이 줄은 삭제하자.\\n    {\\n      resolve: \\\"gatsby-plugin-mdx\\\",\\n      options: {\\n        gatsbyRemarkPlugins: [\\n          {\\n            resolve: \\\"gatsby-remark-images\\\",\\n            options: {\\n              maxWidth: 800,\\n              backgroundColor: \\\"none\\\",\\n            },\\n          },\\n        ],\\n      },\\n    },\\n    // ....\\n  ],\\n};\\n\\nexport default config;\\n\")), \"\\n\", React.createElement(_components.h2, null, \"1.2. MDX 에 인라인 이미지 사용\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/#mdxoptions\"\n  }, \"https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/#mdxoptions\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-mdx\"\n  }, \"![Alt message](./screenshot.png)\\n\")), \"\\n\", React.createElement(_components.h1, null, \"2. 인라인 테이블 문법 적용\"), \"\\n\", React.createElement(_components.p, null, \"Markdown 은 원래 아래와 같은 문법으로 테이블을 삽입할 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-mdx\"\n  }, \"| 호스트명     | IP 주소         |\\n| ------------ | --------------- |\\n| mydomain.com | 111.111.111.222 |\\n| mydomain.com | 111.111.222.111 |\\n| mydomain.com | 111.222.111.111 |\\n| mydomain.com | 222.111.111.111 |\\n\")), \"\\n\", React.createElement(_components.p, null, \"...있는 줄 알았다. 그런데 알고 보니 이 문법은 원래 마크다운 기본 문법이 아니라 GitHub 에서 만든 \", React.createElement(_components.a, {\n    href: \"https://github.github.com/gfm/\"\n  }, \"GitHub Flavored Markdown\"), \"(GFM) 스펙에서 지원하는 문법이었다. 당연히 MDX 에서도 기본적으로 적용되지 않는다. 하지만 다행히도 Gatsby 에서 GFM 을 적용할 수 있는 방법을 제공한다.\"), \"\\n\", React.createElement(_components.h2, null, \"2.1. \", React.createElement(_components.code, null, \"remark-gfm\"), \" 플러그인 적용\"), \"\\n\", React.createElement(_components.p, null, \"일단 플러그인을 설치하자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"$ npm i remark-gfm@^1\\n\")), \"\\n\", React.createElement(_components.p, null, \"여기서 버전 1을 설치하는 이유는 Gatsby 가 ESM 을 아직 지원하지 않는데, remark-gfm 버전 2부터는 ESM 이기 때문이다. \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/#mdxoptions\"\n  }, \"공식 문서\"), \"에도 잘 설명되어 있다. (mdxOptions 섹션의 Please Note 부분을 보자.)\"), \"\\n\", React.createElement(_components.p, null, \"그리고 \", React.createElement(_components.code, null, \"gatsby-config.ts\"), \" 에 플러그인을 적용하자.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ts\"\n  }, \"import type { GatsbyConfig } from \\\"gatsby\\\";\\n\\nconst config: GatsbyConfig = {\\n  // ...\\n  plugins: [\\n    // ...\\n    {\\n      resolve: \\\"gatsby-plugin-mdx\\\",\\n      options: {\\n        mdxOptions: {\\n          remarkPlugins: [require(\\\"remark-gfm\\\")],\\n        },\\n        // ...\\n      },\\n    },\\n    // ...\\n  ],\\n};\\n\\nexport default config;\\n\")), \"\\n\", React.createElement(_components.h2, null, \"2.2. MDX 에 테이블 사용\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-mdx\"\n  }, \"| 호스트명     | IP 주소         |\\n| ------------ | --------------- |\\n| mydomain.com | 111.111.111.222 |\\n| mydomain.com | 111.111.222.111 |\\n| mydomain.com | 111.222.111.111 |\\n| mydomain.com | 222.111.111.111 |\\n\")), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"호스트명\"), React.createElement(_components.th, null, \"IP 주소\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"mydomain.com\"), React.createElement(_components.td, null, \"111.111.111.222\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"mydomain.com\"), React.createElement(_components.td, null, \"111.111.222.111\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"mydomain.com\"), React.createElement(_components.td, null, \"111.222.111.111\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"mydomain.com\"), React.createElement(_components.td, null, \"222.111.111.111\")))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2023/230112-gatsby-2/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {title, date, tags, heroImage, heroImageAlt} = data.mdx.frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, title), React.createElement(WrittenDate, null, date), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag))))), !!image && React.createElement(GatsbyImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children), React.createElement(Comments, null));\n};\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n  }\\n\"])));\nconst WrittenDate = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst Tags = styled.ul(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px\\n      \", \"px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.spacing, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"3533977744\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","code","a","h2","pre","table","thead","tr","th","tbody","td","_provideComponents","components","React","href","className","_templateObject","_templateObject2","_templateObject3","wrapper","MDXLayout","PostDetailPage","_ref","data","children","title","date","tags","heroImage","heroImageAlt","mdx","frontmatter","image","getImage","Layout","Header","WrittenDate","Tags","map","tag","key","Link","to","GatsbyImage","alt","MdxContent","Comments","styled","_taggedTemplateLiteralLoose","theme","dimens","gutter","spacing","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","slug","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}