"use strict";(self.webpackChunkricalelog=self.webpackChunkricalelog||[]).push([[451],{2237:function(n,a,e){e.r(a),e.d(a,{Head:function(){return S},default:function(){return C}});var s=e(1151),t=e(7294);function p(n){const a=Object.assign({div:"div",h2:"h2",a:"a",p:"p",code:"code",blockquote:"blockquote",h3:"h3",h4:"h4",h5:"h5",ul:"ul",li:"li"},(0,s.ah)(),n.components);return t.createElement(t.Fragment,null,t.createElement(a.div,{className:"md"},t.createElement(a.h2,{id:"1-서문",style:{position:"relative"}},t.createElement(a.a,{href:"#1-%EC%84%9C%EB%AC%B8","aria-label":"1 서문 permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"1. 서문"),t.createElement(a.p,null,"create-react-app(이하 CRA) 으로 React 웹앱을 만들었다. typescript도 쓰고 싶어서 만들 때 ",t.createElement(a.code,null,"--template typescript")," 옵션도 주었다. webpack 설정을 직접 수정하고 싶어서 ",t.createElement(a.code,null,"yarn eject")," 커맨드도 실행했다."),t.createElement(a.p,null,"(위 문단이 이해되지 않는 사람이라면 이 글이 다소 이해하기 어려울 수도 있다. 그럴 경우 ",t.createElement(a.a,{href:"https://create-react-app.dev/docs/documentation-intro"},"create-react-app 공식 문서"),"를 참고하자.)"),t.createElement(a.p,null,"webpack 직접 설정하기 첫걸음으로, ",t.createElement(a.code,null,"resolve.alias"),"를 설정해보자."),t.createElement(a.h2,{id:"2-resolvealias-설정하기",style:{position:"relative"}},t.createElement(a.a,{href:"#2-resolvealias-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0","aria-label":"2 resolvealias 설정하기 permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2. ",t.createElement(a.code,null,"resolve.alias")," 설정하기"),t.createElement(a.p,null,t.createElement(a.code,null,"resolve.alias")," 옵션은 ",t.createElement(a.a,{href:"https://webpack.js.org/configuration/resolve/#resolvealias"},"공식 문서")," 에서 아래와 같이 설명하고 있다."),t.createElement(a.blockquote,null,"\n",t.createElement(a.p,null,"Create aliases to import or require certain modules more easily.\n특정 모듈을 더욱 쉽게 import 혹은 require 하기 위해 aliases 를 생성한다."),"\n"),t.createElement(a.p,null,"말하자면 상대 경로로 불편하게 ",t.createElement(a.code,null,"import"),"해야 했던 것을 쉽게 ",t.createElement(a.code,null,"import"),"할 수 있게 해주는 옵션이다."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token comment">/* webpack.config.js */</span>\n\n<span class="token comment">// ...</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">//...</span>\n  <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">Utilities</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"src/utilities/"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">/* someCode.js */</span>\n\n<span class="token comment">// // 위 resolve.alias 설정이 없었다면 이렇게 import 해야 하지만</span>\n<span class="token comment">// import Utility from \'../../utilities/utility\';</span>\n\n<span class="token comment">// 설정 덕분에 상대 경로 없이 편하게 import 할 수 있다.</span>\n<span class="token keyword">import</span> Utility <span class="token keyword">from</span> <span class="token string">"utilities/utility"</span><span class="token punctuation">;</span></code></pre></div>'}}),t.createElement(a.p,null,"CRA로 만든 앱에서도 이 설정을 이용하고 싶다. 어떻게 하면 효율적으로 적용할 수 있을까? 일단 기존 코드를 분석해보자."),t.createElement(a.h3,{id:"21-기존-resolvealias-분석",style:{position:"relative"}},t.createElement(a.a,{href:"#21-%EA%B8%B0%EC%A1%B4-resolvealias-%EB%B6%84%EC%84%9D","aria-label":"21 기존 resolvealias 분석 permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.1. 기존 ",t.createElement(a.code,null,"resolve.alias")," 분석"),t.createElement(a.p,null,"CRA로 만든 앱의 기존 ",t.createElement(a.code,null,"resolve.alias")," 는 아래와 같다."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token comment">// ...</span>\n<span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 2.1.1. \'react-native\'</span>\n    <span class="token comment">// Support React Native Web</span>\n    <span class="token string-property property">\'react-native\'</span><span class="token operator">:</span> <span class="token string">\'react-native-web\'</span><span class="token punctuation">,</span>\n    <span class="token comment">// 2.1.2. profiling</span>\n    <span class="token comment">// Allows for better profiling with ReactDevTools</span>\n    <span class="token operator">...</span><span class="token punctuation">(</span>isEnvProductionProfile <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">\'react-dom$\'</span><span class="token operator">:</span> <span class="token string">\'react-dom/profiling\'</span><span class="token punctuation">,</span>\n      <span class="token string-property property">\'scheduler/tracing\'</span><span class="token operator">:</span> <span class="token string">\'scheduler/tracing-profiling\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token comment">// 2.1.3. webpackAliases</span>\n    <span class="token operator">...</span><span class="token punctuation">(</span>modules<span class="token punctuation">.</span>webpackAliases <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.h4,{id:"211-react-native",style:{position:"relative"}},t.createElement(a.a,{href:"#211-react-native","aria-label":"211 react native permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.1.1. ",t.createElement(a.code,null,"'react-native'")),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token comment">// Support React Native Web</span>\n<span class="token string-property property">\'react-native\'</span><span class="token operator">:</span> <span class="token string">\'react-native-web\'</span><span class="token punctuation">,</span></code></pre></div>'}}),t.createElement(a.p,null,"이 설정은 react-native-web을 지원하기 위한 설정이다. 지금 우리의 관심사는 아니니 넘어가자."),t.createElement(a.h4,{id:"212-profiling",style:{position:"relative"}},t.createElement(a.a,{href:"#212-profiling","aria-label":"212 profiling permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.1.2. profiling"),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token comment">// Allows for better profiling with ReactDevTools</span>\n<span class="token operator">...</span><span class="token punctuation">(</span>isEnvProductionProfile <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n  <span class="token string-property property">\'react-dom$\'</span><span class="token operator">:</span> <span class="token string">\'react-dom/profiling\'</span><span class="token punctuation">,</span>\n  <span class="token string-property property">\'scheduler/tracing\'</span><span class="token operator">:</span> <span class="token string">\'scheduler/tracing-profiling\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></code></pre></div>'}}),t.createElement(a.p,null,"여기서 ",t.createElement(a.code,null,"isEnvProductionProfile")," 값은 아래와 같다."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">const</span> isEnvProductionProfile <span class="token operator">=</span>\n  isEnvProduction <span class="token operator">&amp;&amp;</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"--profile"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),t.createElement(a.p,null,"프로덕션 환경이면서, webpack 실행 당시 ",t.createElement(a.code,null,"--profile")," 옵션을 받았는지 여부를 확인하는 플래그이다."),t.createElement(a.p,null,"즉 이 웹앱의 성능 분석을 하고자 할 때 사용하는 옵션이다. 자세한 사항은 React 성능 분석 관련 공식 문서(",t.createElement(a.a,{href:"https://reactjs.org/blog/2018/09/10/introducing-the-react-profiler.html"},"Introducing the React Profiler"),")를 참고하자."),t.createElement(a.h4,{id:"213-webpackaliases",style:{position:"relative"}},t.createElement(a.a,{href:"#213-webpackaliases","aria-label":"213 webpackaliases permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.1.3. ",t.createElement(a.code,null,"webpackAliases")),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token operator">...</span><span class="token punctuation">(</span>modules<span class="token punctuation">.</span>webpackAliases <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span></code></pre></div>'}}),t.createElement(a.p,null,"여기서 ",t.createElement(a.code,null,"modules"),"는 아래와 같다."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./modules"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),t.createElement(a.p,null,"그럼 ",t.createElement(a.code,null,"./modules.js")," 파일을 찾아가 ",t.createElement(a.code,null,"webpackAliases")," 값은 어떻게 지정되어 있는지 살펴보자."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">return</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token literal-property property">webpackAliases</span><span class="token operator">:</span> <span class="token function">getWebpackAliases</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre></div>'}}),t.createElement(a.p,null,t.createElement(a.code,null,"options"),"와 ",t.createElement(a.code,null,"getWebpackAliases"),"는 뭔지 살펴보자."),t.createElement(a.h5,{id:"2131-options",style:{position:"relative"}},t.createElement(a.a,{href:"#2131-options","aria-label":"2131 options permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.1.3.1. ",t.createElement(a.code,null,"options")),t.createElement(a.p,null,t.createElement(a.code,null,"options")," 값은 아래와 같다."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">let</span> config<span class="token punctuation">;</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>hasTsConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> ts <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>resolve<span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token string">"typescript"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">basedir</span><span class="token operator">:</span> paths<span class="token punctuation">.</span>appNodeModules<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  config <span class="token operator">=</span> ts<span class="token punctuation">.</span><span class="token function">readConfigFile</span><span class="token punctuation">(</span>paths<span class="token punctuation">.</span>appTsConfig<span class="token punctuation">,</span> ts<span class="token punctuation">.</span>sys<span class="token punctuation">.</span>readFile<span class="token punctuation">)</span><span class="token punctuation">.</span>config<span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>hasJsConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">/// ...</span>\n<span class="token punctuation">}</span>\nconfig <span class="token operator">=</span> config <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> options <span class="token operator">=</span> config<span class="token punctuation">.</span>compilerOptions <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre></div>'}}),t.createElement(a.p,null,t.createElement(a.code,null,"tsconfig.json"),"의 ",t.createElement(a.code,null,"compilerOptions")," 값을 읽어온 것이 ",t.createElement(a.code,null,"options"),"다."),t.createElement(a.h5,{id:"2132-getwebpackaliases",style:{position:"relative"}},t.createElement(a.a,{href:"#2132-getwebpackaliases","aria-label":"2132 getwebpackaliases permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.1.3.2. ",t.createElement(a.code,null,"getWebpackAliases")),t.createElement(a.p,null,t.createElement(a.code,null,"getWebpackAliases")," 내용도 보자."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getWebpackAliases</span><span class="token punctuation">(</span><span class="token parameter">options <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> baseUrl <span class="token operator">=</span> options<span class="token punctuation">.</span>baseUrl<span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>baseUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">const</span> baseUrlResolved <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>paths<span class="token punctuation">.</span>appPath<span class="token punctuation">,</span> baseUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>paths<span class="token punctuation">.</span>appPath<span class="token punctuation">,</span> baseUrlResolved<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">src</span><span class="token operator">:</span> paths<span class="token punctuation">.</span>appSrc<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.p,null,"인자로 받은 ",t.createElement(a.code,null,"options"),"에 ",t.createElement(a.code,null,"baseUrl"),"값이 있고, 해당 값이 ",t.createElement(a.code,null,"path.appPath"),"와 같으면, ",t.createElement(a.code,null,"{ src: paths.appSrc }"),"를 반환하는 함수다."),t.createElement(a.p,null,"여기서 ",t.createElement(a.code,null,"baseUrl"),"은 타입스크립트 설정에서 쓰이는 값이다. 이 값은 webpack 설정의 ",t.createElement(a.code,null,"resolve.alias"),"와 거의 같은 일을 한다. ",t.createElement(a.code,null,"import"),"할 때 상대 경로를 쓰지 않고 ",t.createElement(a.code,null,"baseUrl"),"부터 절대 경로로 쓸 수 있게끔 설정해준다."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token comment">/* tsconfig.json */</span>\n<span class="token punctuation">{</span>\n  <span class="token string-property property">"compilerOptions"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n    <span class="token string-property property">"baseUrl"</span><span class="token operator">:</span> <span class="token string">"./"</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// // 위 설정이 없었따면 아래처럼 import 해야 한다.</span>\n<span class="token comment">// import { Button } from \'../../../components\';</span>\n\n<span class="token comment">// 위 설정 덕에 아래처럼 import 가능하다.</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'src/components\'</span><span class="token punctuation">;</span></code></pre></div>'}}),t.createElement(a.p,null,"문제는 webpack 도 같이 설정을 해주어야 이 기능을 제대로 쓸 수 있다는 것이다. 그래서 위에 나왔던 ",t.createElement(a.code,null,"getWebpackAliases"),"의 마지막 즈음 문장을 해석하자면"),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>paths<span class="token punctuation">.</span>appPath<span class="token punctuation">,</span> baseUrlResolved<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">src</span><span class="token operator">:</span> paths<span class="token punctuation">.</span>appSrc<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.p,null,t.createElement(a.code,null,"path.appPath"),"(앱의 루트 디렉토리의 절대 경로)와 ",t.createElement(a.code,null,"baseUrlResolved"),"(",t.createElement(a.code,null,"baseUrl"),"의 절대 경로)가 같다면 ",t.createElement(a.code,null,"webpack.alias.src"),"로 쓰일 값을 ",t.createElement(a.code,null,"paths.appSrc"),"(앱의 ",t.createElement(a.code,null,"./src"),"의 절대 경로)로 해줘라, 라는 뜻이다."),t.createElement(a.p,null,"한 마디로 ",t.createElement(a.code,null,"...(modules.webpackAliases || {}),")," 이 구문은, 타입스크립트의 ",t.createElement(a.code,null,"baseUrl")," 설정값 사용을 webpack 에 적용하기 위한 설정이라고 이해하면 된다."),t.createElement(a.h4,{id:"214-정리",style:{position:"relative"}},t.createElement(a.a,{href:"#214-%EC%A0%95%EB%A6%AC","aria-label":"214 정리 permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.1.4 정리"),t.createElement(a.p,null,"정리하자면, ",t.createElement(a.code,null,"--profile")," 옵션을 주지 않고 빌드 혹은 devServer 실행을 했다고 하면 ",t.createElement(a.code,null,"resolve.alias")," 설정은 아래와 같이 된다."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">\'react-native\'</span><span class="token operator">:</span> <span class="token string">\'react-native-web\'</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.p,null,"만약 여기에 ",t.createElement(a.code,null,"tsconfig.json"),"에서 ",t.createElement(a.code,null,"baseUrl")," 값을 설정해 주었다면 이렇게 설정될 것이다."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">\'react-native\'</span><span class="token operator">:</span> <span class="token string">\'react-native-web\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">src</span><span class="token operator">:</span> paths<span class="token punctuation">.</span>appSrc<span class="token punctuation">,</span> <span class="token comment">// `./src` 디렉토리의 절대 경로</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.h3,{id:"22-resolvealias-설정-추가하기",style:{position:"relative"}},t.createElement(a.a,{href:"#22-resolvealias-%EC%84%A4%EC%A0%95-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0","aria-label":"22 resolvealias 설정 추가하기 permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.2. ",t.createElement(a.code,null,"resolve.alias")," 설정 추가하기"),t.createElement(a.p,null,"그럼 이제 현재 설정을 해치지 않으면서 자연스럽게 ",t.createElement(a.code,null,"resolve.alias")," 설정을 추가해보자."),t.createElement(a.p,null,"이 글에서는 ",t.createElement(a.code,null,"./src/components")," 디렉토리와 ",t.createElement(a.code,null,"./src/themes")," 디렉토리를 alias 로 등록할 것이다."),t.createElement(a.p,null,"타입스크립트 사용 시에는 ",t.createElement(a.code,null,"tsconfig.json"),"도 같이 수정해주어야 적용이 문제 없이 되기 때문에, 위 2.1.3. 항목에서 보았던 것처럼, ",t.createElement(a.code,null,"tsconfig.json"),"을 작성하면 자동으로 webpack 설정에도 적용되게끔 진행할 것이다."),t.createElement(a.h4,{id:"221-tsconfigjson-수정",style:{position:"relative"}},t.createElement(a.a,{href:"#221-tsconfigjson-%EC%88%98%EC%A0%95","aria-label":"221 tsconfigjson 수정 permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.2.1. ",t.createElement(a.code,null,"tsconfig.json")," 수정"),t.createElement(a.p,null,t.createElement(a.code,null,"compilerOptions"),"에 ",t.createElement(a.code,null,"baseUrl"),"과 ",t.createElement(a.code,null,"paths"),"를 추가해주자."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token punctuation">{</span>\n  <span class="token string-property property">"compilerOptions"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n    <span class="token string-property property">"baseUrl"</span><span class="token operator">:</span> <span class="token string">"./"</span><span class="token punctuation">,</span>\n    <span class="token string-property property">"paths"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token string-property property">"components"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src/components"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token string-property property">"themes"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src/themes"</span><span class="token punctuation">]</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.p,null,t.createElement(a.code,null,"baseUrl"),"은 위에서 한 번 설명했고, ",t.createElement(a.code,null,"paths"),"는 webpack 의 ",t.createElement(a.code,null,"resolve.alias"),"와 같은 기능이라고 생각하면 된다. (세부 사항이 좀 다르긴 한데, 자세한 내용은 이 문서",t.createElement(a.a,{href:"https://www.typescriptlang.org/docs/handbook/module-resolution.html"},"TypeScript - Module Resolution"),"를 참고하자)"),t.createElement(a.h4,{id:"222-configaliasesjs-작성",style:{position:"relative"}},t.createElement(a.a,{href:"#222-configaliasesjs-%EC%9E%91%EC%84%B1","aria-label":"222 configaliasesjs 작성 permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.2.2. ",t.createElement(a.code,null,"config/aliases.js")," 작성"),t.createElement(a.p,null,"기존의 설정 코드는 최대한 수정하지 않는 방향으로 진행하겠다. ",t.createElement(a.code,null,"config/aliases.js"),"을 추가해서 설정을 작성하자. 기존 코드를 참고해서 작성할 것이기 때문에 코드 중복이 생기겠지만, 기존 설정 코드를 수정할 생각은 없기 때문에 코멘트만 남기는 정도로 넘어가겠다."),t.createElement(a.p,null,"우선 ",t.createElement(a.code,null,"config/modules.js"),"를 참고해서 ",t.createElement(a.code,null,"tsconfig.json")," 설정 내용을 가져오는 함수를 작성한다."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token comment">// NOTE: duplicated with `getModules` in ./modules.js</span>\n<span class="token keyword">function</span> <span class="token function">getCompilerOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> hasTsConfig <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>paths<span class="token punctuation">.</span>appTsConfig<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasTsConfig<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"You don\'t have a tsconfig.json."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">const</span> ts <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>resolve<span class="token punctuation">.</span><span class="token function">sync</span><span class="token punctuation">(</span><span class="token string">"typescript"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n    <span class="token literal-property property">basedir</span><span class="token operator">:</span> paths<span class="token punctuation">.</span>appNodeModules<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> config <span class="token operator">=</span>\n    ts<span class="token punctuation">.</span><span class="token function">readConfigFile</span><span class="token punctuation">(</span>paths<span class="token punctuation">.</span>appTsConfig<span class="token punctuation">,</span> ts<span class="token punctuation">.</span>sys<span class="token punctuation">.</span>readFile<span class="token punctuation">)</span><span class="token punctuation">.</span>config <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> config<span class="token punctuation">.</span>compilerOptions <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.p,null,"(타입스크립트를 쓸 것이기 때문에 자바스크립트 관련 코드는 삭제했다.)"),t.createElement(a.p,null,"가져온 ",t.createElement(a.code,null,"tsconfig.json"),"의 설정을 가지고 alias 내용을 생성하는 코드도 작성한다."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getAliases</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> baseUrl<span class="token punctuation">,</span> <span class="token literal-property property">paths</span><span class="token operator">:</span> tsPaths <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">getCompilerOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// baseUrl 값이 없으면 tsconfig.json 의 paths 가 제대로 적용되지 않는다.</span>\n  <span class="token comment">// 따라서 해당 값으로 aliases 를 설정할 필요도 없다.</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>baseUrl<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">const</span> baseUrlResolved <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>paths<span class="token punctuation">.</span>appPath<span class="token punctuation">,</span> baseUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">//  앱의 루트 디렉토리와 baseUrl 이 동일한 디렉토리가 아니라면</span>\n  <span class="token comment">// alias를 설정하지 않는다.</span>\n  <span class="token comment">//  이는 `config/modules.js` 에서도 사용하는 예외처리인데,</span>\n  <span class="token comment">// convention over configuration 을 따르면서</span>\n  <span class="token comment">// 복잡한 예외 처리를 하지 않으려는 의도 같다.</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>paths<span class="token punctuation">.</span>appPath<span class="token punctuation">,</span> baseUrlResolved<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token comment">// `"components": ["src/components"],` 형태를</span>\n  <span class="token comment">// `"components": path.resolve(__dirname, `../src/components`)`</span>\n  <span class="token comment">// 형태로 변환</span>\n  <span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>tsPaths<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cfg<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    cfg<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">../</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tsPaths<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> cfg<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.p,null,"이제 ",t.createElement(a.code,null,"config/modules.js")," 와 같은 방식으로 exports 해주며 마무리하면 된다."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function">getAliases</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),t.createElement(a.h4,{id:"223-webpackconfigjs-수정",style:{position:"relative"}},t.createElement(a.a,{href:"#223-webpackconfigjs-%EC%88%98%EC%A0%95","aria-label":"223 webpackconfigjs 수정 permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.2.3. ",t.createElement(a.code,null,"webpack.config.js")," 수정"),t.createElement(a.p,null,"이제 작성한 ",t.createElement(a.code,null,"config/aliases.js")," 파일을 ",t.createElement(a.code,null,"webpack.config.js")," 안에서 사용해보자."),t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// 최상단의 온갖 코드를 require 하는 부분 마지막 부분에</span>\n<span class="token comment">// 적당히 끼워넣자.</span>\n<span class="token keyword">const</span> tsAliases <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'./aliases\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token comment">// resolve.alias 부분에 설정을 추가하자</span>\n      <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n        <span class="token string-property property">\'react-native\'</span><span class="token operator">:</span> <span class="token string">\'react-native-web\'</span><span class="token punctuation">,</span>\n        <span class="token operator">...</span><span class="token punctuation">(</span>isEnvProductionProfile <span class="token operator">&amp;&amp;</span> <span class="token punctuation">{</span>\n          <span class="token string-property property">\'react-dom$\'</span><span class="token operator">:</span> <span class="token string">\'react-dom/profiling\'</span><span class="token punctuation">,</span>\n          <span class="token string-property property">\'scheduler/tracing\'</span><span class="token operator">:</span> <span class="token string">\'scheduler/tracing-profiling\'</span><span class="token punctuation">,</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token operator">...</span><span class="token punctuation">(</span>modules<span class="token punctuation">.</span>webpackAliases <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token operator">...</span>tsAliases<span class="token punctuation">,</span> <span class="token comment">// &lt;- 이 코드를 추가하자</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre></div>'}}),t.createElement(a.h2,{id:"3-결과",style:{position:"relative"}},t.createElement(a.a,{href:"#3-%EA%B2%B0%EA%B3%BC","aria-label":"3 결과 permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3. 결과"),t.createElement(a.p,null,"이제 ",t.createElement(a.code,null,"tsconfig.json")," 파일의 ",t.createElement(a.code,null,"compilerOptions.paths")," 값을 가지고 webpack 의 ",t.createElement(a.code,null,"resolve.alias")," 옵션을 자동 설정할 수 있게 되었다. 실제 프로젝트에 적용된 코드가 궁금하다면 아래 소스 코드들을 참고하자."),t.createElement(a.ul,null,"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"https://github.com/ricale/ricale.github.io/blob/develop/tsconfig.json"},"ricale.github.io/tsconfig.json")),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"https://github.com/ricale/ricale.github.io/blob/develop/config/aliases.js"},"ricale.github.io/config/aliases.js")),"\n")),"\n",t.createElement(a.div,{className:"toc"},t.createElement(a.p,null,"목차"),t.createElement(a.ul,null,"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#1-%EC%84%9C%EB%AC%B8"},"1. 서문")),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#2-resolvealias-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0"},"2. ",t.createElement(a.code,null,"resolve.alias")," 설정하기"),"\n",t.createElement(a.ul,null,"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#21-%EA%B8%B0%EC%A1%B4-resolvealias-%EB%B6%84%EC%84%9D"},"2.1. 기존 ",t.createElement(a.code,null,"resolve.alias")," 분석"),"\n",t.createElement(a.ul,null,"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#211-react-native"},"2.1.1. ",t.createElement(a.code,null,"'react-native'"))),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#212-profiling"},"2.1.2. profiling")),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#213-webpackaliases"},"2.1.3. ",t.createElement(a.code,null,"webpackAliases")),"\n",t.createElement(a.ul,null,"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#2131-options"},"2.1.3.1. ",t.createElement(a.code,null,"options"))),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#2132-getwebpackaliases"},"2.1.3.2. ",t.createElement(a.code,null,"getWebpackAliases"))),"\n"),"\n"),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#214-%EC%A0%95%EB%A6%AC"},"2.1.4 정리")),"\n"),"\n"),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#22-resolvealias-%EC%84%A4%EC%A0%95-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0"},"2.2. ",t.createElement(a.code,null,"resolve.alias")," 설정 추가하기"),"\n",t.createElement(a.ul,null,"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#221-tsconfigjson-%EC%88%98%EC%A0%95"},"2.2.1. ",t.createElement(a.code,null,"tsconfig.json")," 수정")),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#222-configaliasesjs-%EC%9E%91%EC%84%B1"},"2.2.2. ",t.createElement(a.code,null,"config/aliases.js")," 작성")),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#223-webpackconfigjs-%EC%88%98%EC%A0%95"},"2.2.3. ",t.createElement(a.code,null,"webpack.config.js")," 수정")),"\n"),"\n"),"\n"),"\n"),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#3-%EA%B2%B0%EA%B3%BC"},"3. 결과")),"\n")))}var o,l,c,r=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,s.ah)(),n.components);return a?t.createElement(a,n,t.createElement(p,n)):p(n)},i=e(1880),u=e(3723),k=e(6758),d=e(3904),m=e(891),g=e(5534),h=e(5777),v=e(7178),f=e(2889),E=e(5924),b=e(7466);function y(n){let{data:a,children:e}=n;const s=t.useRef(),{frontmatter:p,sameSeriesPosts:o}=a.mdx,{title:l,slug:c,date:r,tags:i,series:u,heroImage:d,heroImageAlt:m}=p;return t.useEffect((()=>{var n;const a=null===(n=s.current)||void 0===n?void 0:n.querySelectorAll(".md h1, .md h2, .md h3, .md h4, .md h5, .md h6"),e=new IntersectionObserver((()=>(0,E.Z)(s,a)),{rootMargin:"0px 0px -90% 0px",threshold:[0,1]});return null==a||a.forEach((n=>e.observe(n))),()=>e.disconnect()}),[]),t.createElement(k.Z,null,t.createElement(w,null,t.createElement("h1",null,l),t.createElement(j,null,r),t.createElement(f.Z,{tags:i})),t.createElement(v.Z,{name:u,data:o,current:c}),t.createElement(b.Z,{data:d,alt:m}),t.createElement(x,{ref:s},e),t.createElement(h.Z,null))}const w=m.ZP.div(o||(o=(0,i.Z)(["\n  margin: 60px 0 72px;\n  padding: 0 24px;\n\n  & > h1 {\n    font-size: 2.5rem;\n    word-break: keep-all;\n    margin: 0;\n  }\n"]))),j=m.ZP.div(l||(l=(0,i.Z)(["\n  margin: 16px 0;\n"]))),x=(0,m.ZP)(g.Z)(c||(c=(0,i.Z)(["\n  margin-bottom: 60px;\n"]))),S=n=>{var a,e;let{data:s}=n;const{frontmatter:{title:p,slug:o,tags:l,heroImage:c,previewContent:r},excerpt:i}=s.mdx,k=c?(0,u.c)(c):null;return t.createElement(d.Z,{title:p,description:null!=r?r:i,path:"posts/"+o,thumbnail:null==k||null===(a=k.images)||void 0===a||null===(e=a.fallback)||void 0===e?void 0:e.src,keywords:l,ogType:"article"})};function C(n){return t.createElement(y,n,t.createElement(r,n))}},5777:function(n,a,e){var s=e(7294);a.Z=function(){const n=(0,s.useRef)(null);return(0,s.useEffect)((()=>{var a;const e=document.createElement("script");Object.entries({src:"https://giscus.app/client.js","data-repo":"ricale/blog","data-repo-id":"R_kgDOIvqo5g","data-category":"Giscus","data-category-id":"DIC_kwDOIvqo5s4CT7fR","data-mapping":"pathname","data-strict":"0","data-reactions-enabled":"1","data-emit-metadata":"0","data-input-position":"top","data-theme":"dark","data-lang":"ko",crossorigin:"anonymous",async:"true"}).forEach((n=>{let[a,s]=n;e.setAttribute(a,s)})),null===(a=n.current)||void 0===a||a.appendChild(e)}),[]),s.createElement("div",{id:"comments",ref:n})}},5534:function(n,a,e){var s,t,p=e(5785),o=e(1880),l=e(891);const c=l.ZP.div(s||(s=(0,o.Z)(["\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  line-height: 1.5;\n\n  > .md {\n    order: 1;\n  }\n\n  > .toc {\n    font-size: 0.875rem;\n    > ul {\n      margin: 0;\n      padding: 0;\n      list-style: none;\n\n      ul {\n        list-style: none;\n      }\n    }\n  }\n  @media (max-width: 1099px) {\n    > .toc {\n      position: absolute;\n      top: -62px;\n      right: 8px;\n      z-index: 10;\n\n      padding: 8px;\n\n      background-color: #1a1a1a;\n\n      > p {\n        margin: 0;\n        font-size: 0.875rem;\n      }\n      > ul {\n        display: none;\n      }\n    }\n    > .toc:hover {\n      left: 8px;\n      padding: 16px;\n      > p {\n        margin: 0;\n        font-size: 1.125rem;\n      }\n      > ul {\n        display: block;\n        margin-top: 8px;\n        padding-left: 20px;\n        font-size: 1rem;\n        a {\n          color: #dddddd;\n        }\n        a > code {\n          color: #dddddd;\n        }\n        ul {\n          padding-left: 30px;\n        }\n      }\n    }\n  }\n  @media (min-width: 1100px) {\n    > .toc {\n      position: absolute;\n      top: 8px;\n      left: calc(50% + 400px);\n      height: 100%;\n      > p {\n        display: none;\n      }\n      > ul {\n        position: sticky;\n        top: 10px;\n        padding-left: 8px;\n        border-left: 1px solid #aaaaaa;\n\n        white-space: nowrap;\n\n        a {\n          color: #aaaaaa;\n        }\n        a > code {\n          color: #aaaaaa;\n        }\n        code {\n          white-space: nowrap;\n        }\n        overflow: hidden;\n        ul {\n          padding-left: 15px;\n        }\n      }\n\n      .highlight {\n        color: #ffffff;\n        text-decoration: underline;\n        code {\n          color: #ffffff;\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n  > .toc {\n    ","\n\n    @media (min-width: ","px) {\n      > ul {\n        white-space: inherit;\n        code {\n          white-space: inherit;\n        }\n      }\n    }\n  }\n\n  p {\n    margin-top: 0;\n    margin-bottom: 16px;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 24px;\n    margin-bottom: 16px;\n    line-height: 1.25;\n    font-weight: 600;\n\n    > a.anchor path {\n      fill: white;\n    }\n  }\n\n  h1 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid #21262d;\n    font-size: 2.125em;\n  }\n\n  h2 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid #21262d;\n    font-size: 1.625em;\n  }\n\n  h3 {\n    font-size: 1.5em;\n  }\n\n  h4 {\n    font-size: 1.25em;\n  }\n\n  h5 {\n    font-size: 1em;\n  }\n\n  h6 {\n    font-size: 0.9375em;\n  }\n\n  ul,\n  ol {\n    margin-bottom: 16px;\n  }\n\n  .gatsby-resp-image-figure {\n    margin: 0 0 16px;\n    .gatsby-resp-image-wrapper {\n      margin-bottom: 0;\n    }\n    .gatsby-resp-image-figcaption {\n      margin-top: 4px;\n      text-align: center;\n      font-size: 0.875rem;\n      color: #aaaaaa;\n    }\n  }\n  .gatsby-resp-image-wrapper {\n    margin-bottom: 16px;\n  }\n\n  table {\n    width: max-content;\n    max-width: 100%;\n    margin-bottom: 16px;\n    border-collapse: collapse;\n    tr {\n      border-top: 1px solid #21262d;\n    }\n    td,\n    th {\n      padding: 6px 13px;\n      border: 1px solid #30363d;\n    }\n  }\n\n  hr {\n    height: 0.25em;\n    margin: 24px 0;\n    border: 0;\n\n    background-color: #30363d;\n  }\n\n  li > ul,\n  li > ol {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  blockquote {\n    position: relative;\n\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 16px;\n    padding: 16px 32px;\n    border-left: 1px solid ",";\n    border-left-width: 10px;\n\n    background-color: ",";\n\n    > :first-child {\n      margin-top: 0;\n    }\n    > :last-child {\n      margin-bottom: 0;\n    }\n    > ul,\n    > ol {\n      padding-left: 20px;\n    }\n  }\n\n  blockquote:before {\n    content: '\"';\n\n    position: absolute;\n    top: -10px;\n    left: 5px;\n\n    font-size: 3em;\n    color: ",";\n  }\n  blockquote:after {\n    content: '\"';\n\n    position: absolute;\n    bottom: -30px;\n    right: 5px;\n\n    font-size: 3em;\n    color: ",";\n  }\n\n  code {\n    padding: 0.2em 0.4em;\n    border-radius: 2px;\n\n    font-size: 0.85em;\n\n    background-color: ",";\n    color: ",';\n    white-space: break-spaces;\n  }\n\n  a > code {\n    color: skyblue;\n  }\n\n  pre[class*="language-"] {\n    margin-bottom: 16px;\n\n    /* overflow-x: auto; */\n  }\n\n  pre > code {\n    padding: unset;\n    border-radius: unset;\n    background-color: unset;\n    color: unset;\n  }\n\n  img {\n    border: 1px solid #333333;\n  }\n'])),(0,p.Z)(new Array(30)).map(((n,a)=>(0,l.iv)(t||(t=(0,o.Z)(["\n          @media (min-width: ","px) {\n            width: ","px;\n          }\n        "])),1100+10*(a+1),(1100+10*a-800)/2))),1400,(n=>n.theme.colors.blockquoteBorder),(n=>n.theme.colors.blockquote),(n=>n.theme.colors.blockquoteBorder),(n=>n.theme.colors.blockquoteBorder),(n=>n.theme.colors.code),(n=>n.theme.colors.onCode));a.Z=c},7466:function(n,a,e){var s,t=e(1880),p=e(7294),o=e(3723);const l=e(891).ZP.div(s||(s=(0,t.Z)(["\n  position: relative;\n  display: flex;\n  justify-content: center;\n  margin-bottom: 16px;\n\n  & > p {\n    position: absolute;\n    right: 4px;\n    top: calc(100% - 4px);\n\n    font-size: 0.625rem;\n    color: #aaaaaa;\n  }\n"])));a.Z=function(n){let{data:a,alt:s}=n;const t=a?(0,o.c)(a):null,c=a?null!=s?s:"PostImage":"by ricale";return p.createElement(l,null,t?p.createElement(o.G,{image:t,alt:c}):p.createElement(o.S,{src:"../images/defaultThumbnail.jpeg",alt:c,__imageData:e(6955)}),p.createElement("p",null,c))}},7178:function(n,a,e){var s,t,p,o,l,c=e(1880),r=e(7294),i=e(1883),u=e(891);const k=u.ZP.div(s||(s=(0,c.Z)(["\n  margin-bottom: 16px;\n  align-items: center;\n\n  background-color: #1a1a1a;\n"]))),d=u.ZP.div(t||(t=(0,c.Z)(["\n  display: flex;\n  justify-content: space-between;\n  padding: 16px;\n  cursor: pointer;\n\n  > h2 {\n    margin: 0;\n    font-size: 1rem;\n  }\n\n  > span {\n    user-select: none;\n    transform: rotate(","deg);\n  }\n"])),(n=>n.collapsed?0:180)),m=u.ZP.ol(p||(p=(0,c.Z)(["\n  margin: 0 16px;\n  padding-bottom: 16px;\n"]))),g=u.ZP.li(o||(o=(0,c.Z)(["\n  ","\n"])),(n=>n.active&&(0,u.iv)(l||(l=(0,c.Z)(["\n      & > a {\n        font-weight: bold;\n        font-style: italic;\n        text-decoration: underline;\n      }\n    "])))));a.Z=function(n){let{name:a,data:e,current:s}=n;const[t,p]=r.useState(!0);return e?r.createElement(k,null,r.createElement(d,{collapsed:t,onClick:()=>p((n=>!n))},r.createElement("h2",null,"시리즈 ",r.createElement(i.Link,{to:"/series/"+a+"/"},'"'+a+'"')),r.createElement("span",null,"▲")),!t&&r.createElement(m,null,e.map((n=>{let{frontmatter:{slug:a,title:e}}=n;return r.createElement(g,{active:a===s,key:a},r.createElement(i.Link,{to:"/posts/"+a},e))})))):null}},2889:function(n,a,e){e.d(a,{Z:function(){return k}});var s,t=e(1880),p=e(7294),o=e(891),l=e(1883);const c=(0,o.ZP)(l.Link)(s||(s=(0,t.Z)(["\n  display: inline-block;\n  padding: ","px ","px;\n  border-radius: 2px;\n\n  background-color: ",";\n  color: ",";\n  text-decoration: none;\n"])),(n=>n.theme.dimens.spacing),(n=>n.theme.dimens.gutter),(n=>n.theme.colors.tag),(n=>n.theme.colors.onTag));var r,i=function(n){let{value:a}=n;return p.createElement(c,{to:"/tags/"+a},a)};const u=o.ZP.ul(r||(r=(0,t.Z)(["\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: ","px;\n\n  margin: 0;\n  padding: 0;\n  list-style: none;\n"])),(n=>n.theme.dimens.gutter));var k=function(n){let{tags:a,showCount:e,...s}=n;const t="string"==typeof a[0]?a.map((n=>({fieldValue:n,totalCount:void 0}))):a;return p.createElement(u,s,t.map((n=>p.createElement("li",{key:n.fieldValue},p.createElement(i,{value:n.fieldValue}),e&&!!n.totalCount&&p.createElement("sup",null,""+n.totalCount)))))}},5924:function(n,a){const e="highlight";a.Z=function(n,a){var s,t,p;if(!a)return;const o=document.documentElement.scrollTop+10-(null!==(s=null===(t=n.current)||void 0===t?void 0:t.offsetTop)&&void 0!==s?s:0);let l;for(let e=0;e<a.length;e++)if(a[e].offsetTop>o){var c;l=null!==(c=a[e-1])&&void 0!==c?c:null;break}if(void 0===l&&(l=a[a.length-1]),null===(p=n.current)||void 0===p||p.querySelectorAll(".highlight").forEach((n=>n.classList.remove(e))),l){var r;const a=l.getAttribute("id"),s=".toc a[href='#"+encodeURI(null!=a?a:"")+"']",t=null===(r=n.current)||void 0===r?void 0:r.querySelector(s);null==t||t.classList.add(e)}}},1151:function(n,a,e){e.d(a,{ah:function(){return p}});var s=e(7294);const t=s.createContext({});function p(n){const a=s.useContext(t);return s.useMemo((()=>"function"==typeof n?n(a):{...a,...n}),[a,n])}},6955:function(n){n.exports=JSON.parse('{"layout":"constrained","backgroundColor":"#b8b8b8","images":{"fallback":{"src":"/blog/static/40a099e3bcfce50ec9b12c0a229336f1/530c7/defaultThumbnail.jpg","srcSet":"/blog/static/40a099e3bcfce50ec9b12c0a229336f1/9cf73/defaultThumbnail.jpg 1008w,\\n/blog/static/40a099e3bcfce50ec9b12c0a229336f1/2e657/defaultThumbnail.jpg 2016w,\\n/blog/static/40a099e3bcfce50ec9b12c0a229336f1/530c7/defaultThumbnail.jpg 4032w","sizes":"(min-width: 4032px) 4032px, 100vw"},"sources":[{"srcSet":"/blog/static/40a099e3bcfce50ec9b12c0a229336f1/6c158/defaultThumbnail.webp 1008w,\\n/blog/static/40a099e3bcfce50ec9b12c0a229336f1/4aebe/defaultThumbnail.webp 2016w,\\n/blog/static/40a099e3bcfce50ec9b12c0a229336f1/5065c/defaultThumbnail.webp 4032w","type":"image/webp","sizes":"(min-width: 4032px) 4032px, 100vw"}]},"width":4032,"height":1000}')}}]);
//# sourceMappingURL=component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2021-210505-cra-webpack-1-resolve-alias-index-mdx-fe81fdc0b53abb20a552.js.map