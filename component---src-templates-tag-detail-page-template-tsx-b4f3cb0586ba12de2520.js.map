{"version":3,"file":"component---src-templates-tag-detail-page-template-tsx-b4f3cb0586ba12de2520.js","mappings":"2JAeA,MAkCMA,EAAYC,EAAAA,GAAAA,IAAU,oKAKPC,GAAMA,EAAEC,MAAMC,OAAOC,SACpBH,GAAMA,EAAEC,MAAMC,OAAOC,SACpBH,GAAMA,EAAEC,MAAMC,OAAOC,SAGtCC,EAASL,EAAAA,GAAAA,IAAU,8VA0BzB,IAtEeM,IAAgC,IAA/B,SAAEC,GAAuB,EACvC,MAAMC,GAAOC,EAAAA,EAAAA,IAAc,cAS3B,OACEC,EAAAA,cAACC,EAAAA,GAAa,CAACT,MAAOU,EAAAA,IACpBF,EAAAA,cAACG,EAAAA,GAAW,MACZH,EAAAA,cAACX,EAAS,KACRW,EAAAA,cAACL,EAAM,KACLK,EAAAA,cAAAA,SAAAA,KAASF,EAAKM,KAAKC,aAAaC,OAChCN,EAAAA,cAAAA,UAAAA,KAAAA,aACAA,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACO,EAAAA,GAAI,CAACC,GAAG,UAAQ,MAEnBR,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACO,EAAAA,GAAI,CAACC,GAAG,SAAO,UAKxBR,EAAAA,cAAAA,OAAAA,KAAOH,IAEK,C,gECkBpB,UA3C8BD,IAG4C,IAH3C,YAC7Ba,EAAW,KACXX,GACmE,EACnE,MAAM,IAAEY,GAAQD,GACV,WAAEE,EAAU,MAAEC,GAAUd,EAAKe,OAEnC,OACEb,EAAAA,cAACc,EAAAA,EAAM,KACLd,EAAAA,cAAAA,KAAAA,KAAAA,OAAYU,EAAG,KACfV,EAAAA,cAAAA,IAAAA,KAAAA,KAASW,EAAU,KAEnBX,EAAAA,cAAAA,KAAAA,KACGY,EAAMG,KAAIC,IAAA,IAAGC,MAAM,YAAEC,IAAe,SACnClB,EAAAA,cAAAA,KAAAA,CAAImB,IAAKD,EAAYE,MACnBpB,EAAAA,cAACO,EAAAA,GAAI,CAACC,GAAE,UAAYU,EAAYE,MAASF,EAAYZ,OAClD,KAGF,C,6ICnCN,MACLe,QAAS/B,EAAM,IACfgC,EAAG,UACHC,EAAS,cACTtB,EACAuB,aAAY,oBACZC,GACEC,ECsBJ,I,EAAA,EAXe,CACbjC,OAAQ,CACNkC,UAAWC,GACXlC,OAAQkC,GACRC,OAAQD,EACRE,QAASF,EACTG,KAAMH,GAERI,OA5Ba,CACbC,WAAY,QACZC,aAAc,QAEdC,UAAW,UACXC,YAAa,QAEbC,iBAAkB,UAClBC,WAAY,UACZC,aAAc,QAEdC,KAAM,UACNC,OAAQ,UAER/B,IAAK,UACLgC,MAAO,UAEPC,YAAa,U,UCqBf,MAtCoBlB,EAAiB,4jBAkBZlC,GAAMA,EAAEC,MAAMwC,OAAOC,aAChC1C,GAAMA,EAAEC,MAAMwC,OAAOE,e,QCdnC,O,uBCPe,SAASU,EAA4BC,EAASC,GAK3D,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAEtBF,EAAQC,IAAMA,EACPD,CACT,C","sources":["webpack://ricalelog/./src/components/Layout.tsx","webpack://ricalelog/./src/templates/TagDetailPageTemplate.tsx","webpack://ricalelog/./src/themes/themedStyledComponents.ts","webpack://ricalelog/./src/themes/normal.ts","webpack://ricalelog/./src/themes/GlobalStyle.ts","webpack://ricalelog/./src/themes/index.ts","webpack://ricalelog/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["import { graphql, Link, useStaticQuery } from \"gatsby\";\nimport * as React from \"react\";\nimport styled, { GlobalStyle, normalTheme, ThemeProvider } from \"../themes\";\n\ntype LayoutQueryData = {\n  site: {\n    siteMetadata: {\n      title: string;\n      author: string;\n    };\n  };\n};\ntype LayoutProps = {\n  children?: React.ReactNode;\n};\nconst Layout = ({ children }: LayoutProps) => {\n  const data = useStaticQuery<LayoutQueryData>(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n  return (\n    <ThemeProvider theme={normalTheme}>\n      <GlobalStyle />\n      <Container>\n        <Header>\n          <header>{data.site.siteMetadata.title}</header>\n          <address>by ricale</address>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/posts\">글</Link>\n              </li>\n              <li>\n                <Link to=\"/tags\">태그</Link>\n              </li>\n            </ul>\n          </nav>\n        </Header>\n        <main>{children}</main>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n\n  > main {\n    padding-left: ${(p) => p.theme.dimens.margin}px;\n    padding-right: ${(p) => p.theme.dimens.margin}px;\n    padding-bottom: ${(p) => p.theme.dimens.margin}px;\n  }\n`;\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  margin: 8px 16px;\n\n  & > header {\n    font-weight: 900;\n  }\n\n  & > address {\n    margin-left: 8px;\n  }\n\n  & > nav > ul {\n    display: flex;\n    flex-direction: row;\n    gap: 8px;\n\n    margin: 0;\n    margin-left: 16px;\n    padding: 0;\n    list-style: none;\n  }\n`;\n\nexport default Layout;\n","import * as React from \"react\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport Layout from \"../components/Layout\";\n\ntype TagDetailPageTemplateData = {\n  allMdx: {\n    totalCount: number;\n    edges: {\n      node: {\n        frontmatter: {\n          slug: string;\n          title: string;\n        };\n      };\n    }[];\n  };\n};\ntype TagDetailPageTemplateContext = {\n  tag: string;\n};\nconst TagDetailPageTemplate = ({\n  pageContext,\n  data,\n}: PageProps<TagDetailPageTemplateData, TagDetailPageTemplateContext>) => {\n  const { tag } = pageContext;\n  const { totalCount, edges } = data.allMdx;\n\n  return (\n    <Layout>\n      <h1>{`태그 \"${tag}\"`}</h1>\n      <p>{`글 ${totalCount}개`}</p>\n\n      <ul>\n        {edges.map(({ node: { frontmatter } }) => (\n          <li key={frontmatter.slug}>\n            <Link to={`/posts/${frontmatter.slug}`}>{frontmatter.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            slug\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default TagDetailPageTemplate;\n","import * as styledComponents from \"styled-components\";\n\nimport { RicalelogTheme } from \"./normal\";\n\nexport const {\n  default: styled,\n  css,\n  keyframes,\n  ThemeProvider,\n  ThemeContext,\n  createGlobalStyle,\n} = styledComponents as unknown as styledComponents.ThemedStyledComponentsModule<RicalelogTheme>;\n","const base = 16;\n\nconst colors = {\n  background: \"black\",\n  onBackground: \"white\",\n\n  codeblock: \"#111111\",\n  onCodeblock: \"white\",\n\n  blockquoteBorder: \"#666666\",\n  blockquote: \"#111111\",\n  onBlockquote: \"white\",\n\n  code: \"#333333\",\n  onCode: \"#DDDDDD\",\n\n  tag: \"#222222\",\n  onTag: \"skyblue\",\n\n  tableBorder: \"white\",\n};\n\nconst normal = {\n  dimens: {\n    bigMargin: base * 2,\n    margin: base * 1,\n    gutter: base * 0.5,\n    spacing: base * 0.25,\n    thin: base * 0.125,\n  },\n  colors,\n};\n\nexport default normal;\nexport type RicalelogTheme = typeof normal;\n","import { createGlobalStyle } from \"./themedStyledComponents\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, #root {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n\n    font-family: -apple-system,\n      BlinkMacSystemFont,\n      \"Segoe UI\",\n      \"Noto Sans\",\n      Helvetica,\n      Arial,\n      sans-serif,\n      \"Apple Color Emoji\",\n      \"Segoe UI Emoji\";\n\n    overflow-x: hidden;\n\n    background-color: ${(p) => p.theme.colors.background};\n    color: ${(p) => p.theme.colors.onBackground};\n  }\n\n  a {\n    color: skyblue;\n  }\n\n  input, button, select {\n    margin: 0;\n    padding: 0;\n    font-size: 16px;\n    appearance: none;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nexport default GlobalStyle;\n","import {\n  styled,\n  css,\n  keyframes,\n  ThemeProvider,\n} from \"./themedStyledComponents\";\n\nexport default styled;\nexport { css, keyframes, ThemeProvider };\n\nexport { default as normalTheme } from \"./normal\";\nexport * from \"./normal\";\nexport { default as GlobalStyle } from \"./GlobalStyle\";\nexport { default as useTheme } from \"./useTheme\";\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}"],"names":["Container","styled","p","theme","dimens","margin","Header","_ref","children","data","useStaticQuery","React","ThemeProvider","normalTheme","GlobalStyle","site","siteMetadata","title","Link","to","pageContext","tag","totalCount","edges","allMdx","Layout","map","_ref2","node","frontmatter","key","slug","default","css","keyframes","ThemeContext","createGlobalStyle","styledComponents","bigMargin","base","gutter","spacing","thin","colors","background","onBackground","codeblock","onCodeblock","blockquoteBorder","blockquote","onBlockquote","code","onCode","onTag","tableBorder","_taggedTemplateLiteralLoose","strings","raw","slice"],"sourceRoot":""}