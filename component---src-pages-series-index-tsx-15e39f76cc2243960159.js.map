{"version":3,"file":"component---src-pages-series-index-tsx-15e39f76cc2243960159.js","mappings":"qJAoBA,MAAMA,EAAYC,EAAAA,GAAAA,IAAU,sIAStBC,EAAWD,EAAAA,GAAAA,EAAQ,sBAEnBE,EAAWF,EAAAA,GAAAA,IAAU,gOAerBG,EAAOH,EAAAA,GAAAA,EAAQ,wEAKrB,IA3CA,SAAwB,GAAiD,IAAjD,MAAEI,EAAK,SAAEC,EAAQ,KAAEC,GAA2B,EACpE,OACEC,EAAAA,cAACR,EAAS,OACLM,GAAYE,EAAAA,cAACN,EAAQ,KAAEI,GAC1BE,EAAAA,cAACL,EAAQ,KACPK,EAAAA,cAAAA,KAAAA,KAAKH,KACFE,GAAQC,EAAAA,cAACJ,EAAI,SAAMG,EAAI,MAIlC,C,oHCeA,MAAMP,EAAYC,EAAAA,GAAAA,IAAU,wJAUtBQ,EAAmBR,EAAAA,GAAAA,IAAU,gHAQ7BS,GAAiBT,EAAAA,EAAAA,IAAOU,EAAAA,EAAPV,CAAmB,+EAMpCW,EAAOX,EAAAA,GAAAA,IAAU,6fA+BvB,I,EAAA,EAhFA,SAAwB,GAKC,IALD,WACtBY,EAAU,WACVC,EAAU,YACVC,KACGC,GACiB,EACpB,MAAM,KAAEC,EAAI,UAAEC,EAAS,aAAEC,GAAiBJ,EAEpCK,EAAQF,GAAYG,EAAAA,EAAAA,GAASH,GAAa,KAEhD,OACEV,EAAAA,cAACR,EAAS,eAACsB,QAAS,KAAMC,EAAAA,EAAAA,UAAS,WAAWV,IAAmBG,GAC/DR,EAAAA,cAACC,EAAgB,OACZW,GAASZ,EAAAA,cAACE,EAAc,CAACU,MAAOA,EAAOI,IAAKL,QAAAA,EAAgB,MAEjEX,EAAAA,cAACI,EAAI,KACHJ,EAAAA,cAAAA,KAAAA,KACGK,EAAU,IAAEL,EAAAA,cAAAA,QAAAA,KAAAA,GAAWM,IAE1BN,EAAAA,cAAAA,QAAAA,KAAAA,KAAaS,IAIrB,ECZA,MAAMjB,EAAYC,EAAAA,GAAAA,IAAU,uSAmB5B,MA7BA,SAAoB,GAAsC,IAAtC,KAAEwB,KAAST,GAAwB,EACrD,OACER,EAAAA,cAACR,EAAcgB,EACZS,EAAKC,KAAKC,GACTnB,EAAAA,cAACoB,EAAc,eAACC,IAAKF,EAAGd,YAAgBc,MAIhD,C,qBCAA,IAfA,SAAmBG,GACjB,OAAOA,EACJJ,KAAIK,IAAAA,IAAC,MAAEC,KAAUL,GAAI,QAAM,IACvBA,KACAK,EAAMC,MAAK,CAACC,EAAGC,IAChBA,EAAEC,KAAKrB,YAAYsB,aAAaC,cAC9BJ,EAAEE,KAAKrB,YAAYsB,gBAErB,GAAGD,KACN,IACAH,MAAK,CAACC,EAAGC,IACRA,EAAEpB,YAAYsB,aAAaC,cAAcJ,EAAEnB,YAAYsB,eAE7D,C,iICWO,MA0BME,EAAO,IAAM/B,EAAAA,cAACgC,EAAAA,EAAG,CAACnC,MAAM,WAErC,UAvCA,SAAoB,GAA6C,IAA3CoB,KAAMK,GAAmC,EAC7D,MAAML,GAAiBgB,EAAAA,EAAAA,GAAUX,EAAOY,OAAOC,OAE/C,OACEnC,EAAAA,cAACoC,EAAAA,EAAM,KACLpC,EAAAA,cAACqC,EAAAA,EAAc,CAACxC,MAAM,QACtBG,EAAAA,cAACsC,EAAAA,EAAU,CAACrB,KAAMA,IAGxB,C","sources":["webpack://ricalelog/./src/components/ListPageHeader.tsx","webpack://ricalelog/./src/components/SeriesList/SeriesListItem.tsx","webpack://ricalelog/./src/components/SeriesList/index.tsx","webpack://ricalelog/./src/getters/getSeries.ts","webpack://ricalelog/./src/pages/series/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from \"../themes\";\n\ntype ListPageHeaderProps = {\n  title: string;\n  subtitle?: string;\n  note?: string | number;\n};\nfunction ListPageHeader({ title, subtitle, note }: ListPageHeaderProps) {\n  return (\n    <Container>\n      {!!subtitle && <Subtitle>{subtitle}</Subtitle>}\n      <TitleRow>\n        <h1>{title}</h1>\n        {!!note && <Note>{`(${note})`}</Note>}\n      </TitleRow>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 40px 0 45px;\n  padding-left: 40px;\n\n  @media (max-width: 414px) {\n    padding-left: 20px;\n  }\n`;\n\nconst Subtitle = styled.p``;\n\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n\n  & > h1 {\n    word-break: keep-all;\n  }\n\n  @media (max-width: 414px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst Note = styled.p`\n  margin-bottom: 8px;\n  font-size: 0.9375rem;\n`;\n\nexport default ListPageHeader;\n","import * as React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { navigate } from \"gatsby\";\n\nimport { Series } from \"../../types\";\nimport styled from \"../../themes\";\n\ntype SeriesListItemProps = Series;\nfunction SeriesListItem({\n  fieldValue,\n  totalCount,\n  frontmatter,\n  ...props\n}: SeriesListItemProps) {\n  const { date, heroImage, heroImageAlt } = frontmatter;\n\n  const image = heroImage ? getImage(heroImage) : null;\n\n  return (\n    <Container onClick={() => navigate(`/series/${fieldValue}`)} {...props}>\n      <ThumbnailWrapper>\n        {!!image && <ThumbnailImage image={image} alt={heroImageAlt ?? \"\"} />}\n      </ThumbnailWrapper>\n      <Info>\n        <h3>\n          {fieldValue} <small>{`${totalCount}`}</small>\n        </h3>\n        <small>{`~ ${date}`}</small>\n      </Info>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  position: relative;\n  cursor: pointer;\n  &::after {\n    content: \"\";\n    display: block;\n    padding-bottom: 100%;\n  }\n`;\n\nconst ThumbnailWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  background-color: #222222;\n`;\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst Info = styled.div`\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  right: 8px;\n  bottom: 8px;\n\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n\n  background-color: rgba(0, 0, 0, 0.6);\n\n  & > h3 {\n    flex: 1;\n    margin: 0 0 4px;\n    word-break: keep-all;\n  }\n  & > small {\n    text-align: right;\n  }\n  & > h3 > small {\n    padding: 2px 4px;\n\n    background-color: rgba(183, 179, 204, 0.6);\n    color: #ffff00;\n    font-size: 0.85rem;\n    font-weight: normal;\n  }\n`;\n\nexport default SeriesListItem;\n","import * as React from \"react\";\n\nimport styled from \"../../themes\";\nimport { Series } from \"../../types\";\nimport SeriesListItem from \"./SeriesListItem\";\n\ntype SeriesListProps = {\n  data: Series[];\n};\nfunction SeriesList({ data, ...props }: SeriesListProps) {\n  return (\n    <Container {...props}>\n      {data.map((sr) => (\n        <SeriesListItem key={sr.fieldValue} {...sr} />\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 16px;\n\n  & > * {\n    width: calc(25% - 12px);\n\n    @media (max-width: 768px) {\n      width: calc(33% - 10px);\n    }\n\n    @media (max-width: 500px) {\n      width: calc(50% - 8px);\n    }\n  }\n`;\n\nexport default SeriesList;\n","import { Series, SeriesSource } from \"../types\";\n\nfunction getSeries(source: SeriesSource[]): Series[] {\n  return source\n    .map(({ edges, ...sr }) => ({\n      ...sr,\n      ...edges.sort((a, b) =>\n        b.node.frontmatter.originalDate.localeCompare(\n          a.node.frontmatter.originalDate\n        )\n      )[0].node,\n    }))\n    .sort((a, b) =>\n      b.frontmatter.originalDate.localeCompare(a.frontmatter.originalDate)\n    );\n}\n\nexport default getSeries;\n","import * as React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport ListPageHeader from \"../../components/ListPageHeader\";\nimport { Series, SeriesSource } from \"../../types\";\nimport SeriesList from \"../../components/SeriesList\";\nimport getSeries from \"../../getters/getSeries\";\n\ntype SeriesPageData = {\n  allMdx: {\n    group: SeriesSource[];\n  };\n};\nfunction SeriesPage({ data: source }: PageProps<SeriesPageData>) {\n  const data: Series[] = getSeries(source.allMdx.group);\n\n  return (\n    <Layout>\n      <ListPageHeader title=\"시리즈\" />\n      <SeriesList data={data} />\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMdx(limit: 2000) {\n      group(field: { frontmatter: { series: SELECT } }) {\n        fieldValue\n        totalCount\n        edges {\n          node {\n            frontmatter {\n              title\n              originalDate: date\n              date(formatString: \"YYYY. M. D.\")\n              heroImageAlt\n              heroImage {\n                childImageSharp {\n                  gatsbyImageData\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title=\"시리즈 목록\" />;\n\nexport default SeriesPage;\n"],"names":["Container","styled","Subtitle","TitleRow","Note","title","subtitle","note","React","ThumbnailWrapper","ThumbnailImage","GatsbyImage","Info","fieldValue","totalCount","frontmatter","props","date","heroImage","heroImageAlt","image","getImage","onClick","navigate","alt","data","map","sr","SeriesListItem","key","source","_ref","edges","sort","a","b","node","originalDate","localeCompare","Head","Seo","getSeries","allMdx","group","Layout","ListPageHeader","SeriesList"],"sourceRoot":""}