{"version":3,"file":"component---src-pages-series-index-tsx-ab6a4a4c2db645e4ad63.js","mappings":"qJAoBA,MAAMA,EAAYC,EAAAA,GAAAA,IAAU,+DAKtBC,EAAWD,EAAAA,GAAAA,EAAQ,sBAEnBE,EAAWF,EAAAA,GAAAA,IAAU,iFAMrBG,EAAOH,EAAAA,GAAAA,EAAQ,wEAKrB,IA9BA,SAAwB,GAAiD,IAAjD,MAAEI,EAAK,SAAEC,EAAQ,KAAEC,GAA2B,EACpE,OACEC,EAAAA,cAACR,EAAS,OACLM,GAAYE,EAAAA,cAACN,EAAQ,KAAEI,GAC1BE,EAAAA,cAACL,EAAQ,KACPK,EAAAA,cAAAA,KAAAA,KAAKH,KACFE,GAAQC,EAAAA,cAACJ,EAAI,SAAMG,EAAI,MAIlC,C,wKCkBA,MAAMP,EAAYC,EAAAA,QAAAA,IAAAA,WAAU,iEAAVA,CAAU,6DAQtBQ,EAAmBR,EAAAA,QAAAA,IAAAA,WAAU,wEAAVA,CAAU,oLAoB7BS,GAAiBT,EAAAA,EAAAA,SAAOU,EAAAA,GAAY,iFAAnBV,CAAmB,8CAMpCW,EAAOX,EAAAA,QAAAA,IAAAA,WAAU,4DAAVA,CAAU,yBAMvB,I,EAAA,EA3DA,SAAoB,GAAoD,IAApD,WAAEY,EAAU,WAAEC,EAAU,KAAEC,GAAuB,EACnE,MAAM,KAAEC,EAAI,UAAEC,EAAS,aAAEC,GAAiBH,EAAKI,YAEzCC,EAAQH,GAAYI,EAAAA,EAAAA,GAASJ,GAAa,KAEhD,OACET,EAAAA,cAACR,EAAS,CAACsB,QAAS,KAAMC,EAAAA,EAAAA,IAAS,WAAWV,IAC5CL,EAAAA,cAACC,EAAgB,OACZW,GAASZ,EAAAA,cAACE,EAAc,CAACU,MAAOA,EAAOI,IAAKN,QAAAA,EAAgB,KAC/DV,EAAAA,cAAAA,QAAAA,KAAAA,GAAWM,IAEbN,EAAAA,cAACI,EAAI,KACHJ,EAAAA,cAAAA,KAAAA,KAAKK,GACLL,EAAAA,cAAAA,QAAAA,KAAAA,KAAaQ,IAIrB,E,mBCLA,MA4BMS,EAAaxB,EAAAA,GAAAA,IAAU,mFAgChByB,EAAO,IAAMlB,EAAAA,cAACmB,EAAAA,EAAG,CAACtB,MAAM,WAErC,MA9DmBuB,IAAyC,IAAxC,KAAEC,GAAiC,EACrD,MAAMC,EAASD,EAAKE,OAAOC,MACxBC,KAAIC,IAAA,IAAC,MAAEC,KAAUC,GAAI,QAAM,IACvBA,EACHrB,KAAMoB,EAAME,MAAK,CAACC,EAAGC,IACnBA,EAAExB,KAAKI,YAAYqB,aAAaC,cAC9BH,EAAEvB,KAAKI,YAAYqB,gBAErB,GAAGzB,KACN,IACAsB,MAAK,CAACC,EAAGC,IACRA,EAAExB,KAAKI,YAAYqB,aAAaC,cAC9BH,EAAEvB,KAAKI,YAAYqB,gBAIzB,OACEhC,EAAAA,cAACkC,EAAAA,EAAM,KACLlC,EAAAA,cAACmC,EAAAA,EAAc,CAACtC,MAAM,QACtBG,EAAAA,cAACiB,EAAU,KACRK,EAAOG,KAAKG,GACX5B,EAAAA,cAACoC,EAAU,eAACC,IAAKT,EAAGvB,YAAgBuB,OAGjC,C","sources":["webpack://ricalelog/./src/components/ListPageHeader.tsx","webpack://ricalelog/./src/components/SeriesItem.tsx","webpack://ricalelog/./src/pages/series/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from \"../themes\";\n\ntype ListPageHeaderProps = {\n  title: string;\n  subtitle?: string;\n  note?: string | number;\n};\nfunction ListPageHeader({ title, subtitle, note }: ListPageHeaderProps) {\n  return (\n    <Container>\n      {!!subtitle && <Subtitle>{subtitle}</Subtitle>}\n      <TitleRow>\n        <h1>{title}</h1>\n        {!!note && <Note>{`(${note})`}</Note>}\n      </TitleRow>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 40px 0;\n  padding: 0 40px;\n`;\n\nconst Subtitle = styled.p``;\n\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n`;\n\nconst Note = styled.p`\n  margin-bottom: 8px;\n  font-size: 0.9375rem;\n`;\n\nexport default ListPageHeader;\n","import * as React from \"react\";\nimport { GatsbyImage, getImage, ImageDataLike } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\nimport { navigate } from \"gatsby\";\n\ntype SeriesItemProps = {\n  fieldValue: string;\n  totalCount: number;\n  node: {\n    frontmatter: {\n      title: string;\n      date: string;\n      heroImage?: ImageDataLike;\n      heroImageAlt?: string;\n    };\n  };\n};\nfunction SeriesItem({ fieldValue, totalCount, node }: SeriesItemProps) {\n  const { date, heroImage, heroImageAlt } = node.frontmatter;\n\n  const image = heroImage ? getImage(heroImage) : null;\n\n  return (\n    <Container onClick={() => navigate(`/series/${fieldValue}`)}>\n      <ThumbnailWrapper>\n        {!!image && <ThumbnailImage image={image} alt={heroImageAlt ?? \"\"} />}\n        <small>{`${totalCount}`}</small>\n      </ThumbnailWrapper>\n      <Info>\n        <h3>{fieldValue}</h3>\n        <small>{`~ ${date}`}</small>\n      </Info>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  cursor: pointer;\n`;\n\nconst ThumbnailWrapper = styled.div`\n  position: relative;\n\n  width: 80px;\n  height: 80px;\n\n  background-color: #222222;\n\n  & > small {\n    position: absolute;\n    right: 4px;\n    bottom: 4px;\n\n    padding: 2px 4px;\n\n    background-color: #444444;\n    font-size: 0.85em;\n  }\n`;\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst Info = styled.div`\n  h3 {\n    margin: 0 0 4px;\n  }\n`;\n\nexport default SeriesItem;\n","import * as React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\nimport { ImageDataLike } from \"gatsby-plugin-image\";\n\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport SeriesItem from \"../../components/SeriesItem\";\nimport styled from \"../../themes\";\nimport ListPageHeader from \"../../components/ListPageHeader\";\n\ntype SeriesPageData = {\n  allMdx: {\n    group: {\n      fieldValue: string;\n      totalCount: number;\n      edges: {\n        node: {\n          frontmatter: {\n            title: string;\n            originalDate: string;\n            date: string;\n            heroImage?: ImageDataLike;\n            heroImageAlt?: string;\n          };\n        };\n      }[];\n    }[];\n  };\n};\nconst SeriesPage = ({ data }: PageProps<SeriesPageData>) => {\n  const series = data.allMdx.group\n    .map(({ edges, ...sr }) => ({\n      ...sr,\n      node: edges.sort((a, b) =>\n        b.node.frontmatter.originalDate.localeCompare(\n          a.node.frontmatter.originalDate\n        )\n      )[0].node,\n    }))\n    .sort((a, b) =>\n      b.node.frontmatter.originalDate.localeCompare(\n        a.node.frontmatter.originalDate\n      )\n    );\n\n  return (\n    <Layout>\n      <ListPageHeader title=\"시리즈\" />\n      <SeriesList>\n        {series.map((sr) => (\n          <SeriesItem key={sr.fieldValue} {...sr} />\n        ))}\n      </SeriesList>\n    </Layout>\n  );\n};\n\nconst SeriesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n`;\n\nexport const query = graphql`\n  query {\n    allMdx(limit: 2000) {\n      group(field: { frontmatter: { series: SELECT } }) {\n        fieldValue\n        totalCount\n        edges {\n          node {\n            frontmatter {\n              title\n              originalDate: date\n              date(formatString: \"YYYY. M. D.\")\n              heroImageAlt\n              heroImage {\n                childImageSharp {\n                  gatsbyImageData\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title=\"시리즈 목록\" />;\n\nexport default SeriesPage;\n"],"names":["Container","styled","Subtitle","TitleRow","Note","title","subtitle","note","React","ThumbnailWrapper","ThumbnailImage","GatsbyImage","Info","fieldValue","totalCount","node","date","heroImage","heroImageAlt","frontmatter","image","getImage","onClick","navigate","alt","SeriesList","Head","Seo","_ref","data","series","allMdx","group","map","_ref2","edges","sr","sort","a","b","originalDate","localeCompare","Layout","ListPageHeader","SeriesItem","key"],"sourceRoot":""}