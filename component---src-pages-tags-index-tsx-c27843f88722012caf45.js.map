{"version":3,"file":"component---src-pages-tags-index-tsx-c27843f88722012caf45.js","mappings":"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","sources":["webpack://ricalelog/./src/components/Layout.tsx","webpack://ricalelog/./src/components/ListPageHeader.tsx","webpack://ricalelog/./src/components/Seo.tsx","webpack://ricalelog/./src/components/Tag.tsx","webpack://ricalelog/./src/components/TagList.tsx","webpack://ricalelog/./src/pages/tags/index.tsx","webpack://ricalelog/./src/themes/themedStyledComponents.ts","webpack://ricalelog/./src/themes/normal.ts","webpack://ricalelog/./src/themes/GlobalStyle.ts","webpack://ricalelog/./src/themes/index.ts","webpack://ricalelog/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["import * as React from \"react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\n\nimport styled, { GlobalStyle, normalTheme, ThemeProvider } from \"../themes\";\nimport { SiteMetadata } from \"../types\";\n\nconst isDevelopment = process.env.NODE_ENV === \"development\";\n\nconst menuItems = [\n  { path: \"/posts\", title: \"모든글\" },\n  { path: \"/series\", title: \"시리즈\" },\n  { path: \"/tags\", title: \"태그\" },\n  ...(isDevelopment ? [{ path: \"/drafts\", title: \"임시글\" }] : []),\n];\n\ntype LayoutQueryData = {\n  site: {\n    siteMetadata: SiteMetadata;\n  };\n};\ntype LayoutProps = {\n  children?: React.ReactNode;\n};\nfunction Layout({ children }: LayoutProps) {\n  const data = useStaticQuery<LayoutQueryData>(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `);\n  const { title, author } = data.site.siteMetadata;\n  return (\n    <ThemeProvider theme={normalTheme}>\n      <GlobalStyle />\n      <Container>\n        <Header>\n          <header>\n            <Link to=\"/\">{title}</Link>\n          </header>\n          <address>\n            <a href=\"https://ricale.kr\">{`by ${author}`}</a>\n          </address>\n          <nav>\n            <ul>\n              {menuItems.map((item) => (\n                <li key={item.path}>\n                  <Link to={item.path}>{item.title}</Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </Header>\n        <main>{children}</main>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n\n  > main {\n    padding-left: ${(p) => p.theme.dimens.margin}px;\n    padding-right: ${(p) => p.theme.dimens.margin}px;\n    padding-bottom: ${(p) => p.theme.dimens.margin}px;\n\n    @media (max-width: 800px) {\n      padding-left: ${(p) => p.theme.dimens.margin + 4}px;\n      padding-right: ${(p) => p.theme.dimens.margin + 4}px;\n    }\n  }\n`;\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  margin: 8px 16px;\n\n  & > header {\n    font-weight: 600;\n    font-size: 1.125rem;\n    > a {\n      color: white;\n    }\n  }\n\n  & > address {\n    margin-left: 8px;\n    font-size: 0.875rem;\n    font-style: normal;\n    > a {\n      color: white;\n    }\n  }\n\n  & > nav {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n\n    flex: 1;\n    > ul {\n      display: flex;\n      flex-direction: row;\n      gap: 8px;\n\n      margin: 0;\n      margin-left: 16px;\n      padding: 0;\n      list-style: none;\n\n      > li > a {\n        display: inline-block;\n        /* padding: 0px 8px; */\n      }\n    }\n  }\n`;\n\nexport default Layout;\n","import * as React from \"react\";\nimport styled from \"../themes\";\n\ntype ListPageHeaderProps = {\n  title: string;\n  subtitle?: string;\n  note?: string | number;\n};\nfunction ListPageHeader({ title, subtitle, note }: ListPageHeaderProps) {\n  return (\n    <Container>\n      {!!subtitle && <Subtitle>{subtitle}</Subtitle>}\n      <TitleRow>\n        <h1>{title}</h1>\n        {!!note && <Note>{`(${note})`}</Note>}\n      </TitleRow>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 40px 0;\n  padding-left: 40px;\n\n  @media (max-width: 414px) {\n    padding-left: 20px;\n  }\n`;\n\nconst Subtitle = styled.p``;\n\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n\n  & > h1 {\n    word-break: keep-all;\n  }\n\n  @media (max-width: 414px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst Note = styled.p`\n  margin-bottom: 8px;\n  font-size: 0.9375rem;\n`;\n\nexport default ListPageHeader;\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { SiteMetadata } from \"../types\";\n\ntype SeoQueryData = {\n  site: {\n    siteMetadata: SiteMetadata;\n    pathPrefix: string;\n  };\n};\ntype SeoProps = {\n  title?: string;\n  description?: string;\n  path?: string;\n  thumbnail?: string;\n  keywords?: string[];\n  ogType?: string;\n};\nfunction Seo({\n  title,\n  description,\n  path,\n  thumbnail,\n  ogType,\n  keywords,\n}: SeoProps) {\n  const data = useStaticQuery<SeoQueryData>(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          author\n          siteUrl\n          description\n        }\n        pathPrefix\n      }\n    }\n  `);\n\n  const {\n    siteMetadata: { title: siteTitle, author, siteUrl, description: siteDesc },\n    pathPrefix,\n  } = data.site;\n\n  const pageTitle = title\n    ? `${title} | ${siteTitle}`\n    : `${siteTitle} by ${author}`;\n  const seoTitle = title ?? siteTitle;\n  const desc = description || siteDesc;\n  const pageUrl = `${siteUrl}${pathPrefix}${path ? `/${path}` : \"\"}`;\n  const imageUrl = thumbnail ? `${siteUrl}${thumbnail}` : null;\n  const keywordsString = keywords ? keywords.join(\", \") : null;\n\n  return (\n    <>\n      <title>{pageTitle}</title>\n      <meta name=\"description\" content={desc} />\n      <meta name=\"author\" content={author} />\n      {keywordsString && <meta name=\"keywords\" content={keywordsString} />}\n\n      {!!ogType && <meta property=\"og:type\" content={ogType} />}\n      <meta property=\"og:title\" content={seoTitle} />\n      <meta property=\"og:description\" content={desc} />\n      <meta property=\"og:url\" content={pageUrl} />\n      {!!imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n\n      <meta property=\"twitter:card\" content=\"summary_large_image\" />\n      <meta property=\"twitter:title\" content={seoTitle} />\n      <meta property=\"twitter:description\" content={desc} />\n      <meta property=\"twitter:url\" content={pageUrl} />\n      {!!imageUrl && <meta property=\"twitter:image\" content={imageUrl} />}\n    </>\n  );\n}\n\nexport default Seo;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"../themes\";\n\ntype TagProps = {\n  value: string;\n};\nfunction Tag({ value }: TagProps) {\n  return <TagComp to={`/tags/${value}`}>{value}</TagComp>;\n}\n\nconst TagComp = styled(Link)`\n  display: inline-block;\n  padding: ${(p) => p.theme.dimens.spacing}px ${(p) => p.theme.dimens.gutter}px;\n  border-radius: 2px;\n\n  background-color: ${(p) => p.theme.colors.tag};\n  color: ${(p) => p.theme.colors.onTag};\n  text-decoration: none;\n`;\n\nexport default Tag;\n","import * as React from \"react\";\n\nimport styled from \"../themes\";\nimport Tag from \"./Tag\";\n\nfunction isStringArray(arr: unknown[]): arr is string[] {\n  return typeof arr[0] === \"string\";\n}\n\ntype TagListProps = {\n  tags: string[] | { fieldValue: string; totalCount: number }[];\n  showCount?: boolean;\n};\nfunction TagList({ tags, showCount, ...props }: TagListProps) {\n  const items = isStringArray(tags)\n    ? tags.map((tag) => ({ fieldValue: tag, totalCount: undefined }))\n    : tags;\n  return (\n    <Container {...props}>\n      {items.map((tag) => (\n        <li key={tag.fieldValue}>\n          <Tag value={tag.fieldValue} />\n          {showCount && !!tag.totalCount && <sup>{`${tag.totalCount}`}</sup>}\n        </li>\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: ${(p) => p.theme.dimens.gutter}px;\n\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport default TagList;\n","import * as React from \"react\";\nimport { graphql, Link, PageProps } from \"gatsby\";\n\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport ListPageHeader from \"../../components/ListPageHeader\";\nimport Tag from \"../../components/Tag\";\nimport styled from \"../../themes\";\nimport TagList from \"../../components/TagList\";\n\ntype TagData = {\n  fieldValue: string;\n  totalCount: number;\n};\ntype TagsPageData = {\n  allMdx: {\n    group: TagData[];\n  };\n};\nfunction TagsPage({ data }: PageProps<TagsPageData>) {\n  const tags = data.allMdx.group.sort((a, b) => b.totalCount - a.totalCount);\n  const [tagsMoreThanOnce, tagsOnlyOnce] = tags.reduce(\n    (acc, tag) => {\n      acc[tag.totalCount > 1 ? 0 : 1].push(tag);\n      return acc;\n    },\n    [[], []] as [TagData[], TagData[]]\n  );\n  return (\n    <Layout>\n      <ListPageHeader title=\"태그\" />\n      {/* <Tags>\n        {tagsMoreThanOnce.map((tag) => (\n          <li key={tag.fieldValue}>\n            <Tag value={tag.fieldValue} />{\" \"}\n            {tag.totalCount > 1 && <sup>{`${tag.totalCount}`}</sup>}\n          </li>\n        ))}\n      </Tags> */}\n      <Tags tags={tagsMoreThanOnce} showCount />\n      <Tags tags={tagsOnlyOnce} />\n      {/* <Tags>\n        {tagsOnlyOnce.map((tag) => (\n          <li key={tag.fieldValue}>\n            <Tag value={tag.fieldValue} />{\" \"}\n            {tag.totalCount > 1 && <sup>{`${tag.totalCount}`}</sup>}\n          </li>\n        ))}\n      </Tags> */}\n    </Layout>\n  );\n}\n\nconst Tags = styled(TagList)`\n  margin-bottom: 24px;\n`;\n\nexport const query = graphql`\n  query {\n    allMdx(limit: 2000) {\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title=\"태그 목록\" />;\n\nexport default TagsPage;\n","import * as styledComponents from \"styled-components\";\n\nimport { RicalelogTheme } from \"./normal\";\n\nexport const {\n  default: styled,\n  css,\n  keyframes,\n  ThemeProvider,\n  ThemeContext,\n  createGlobalStyle,\n} = styledComponents as unknown as styledComponents.ThemedStyledComponentsModule<RicalelogTheme>;\n","const base = 16;\n\nconst colors = {\n  background: \"black\",\n  onBackground: \"white\",\n\n  codeblock: \"#111111\",\n  onCodeblock: \"white\",\n\n  blockquoteBorder: \"#666666\",\n  blockquote: \"#111111\",\n  onBlockquote: \"white\",\n\n  code: \"#333333\",\n  onCode: \"#DDDDDD\",\n\n  tag: \"#222222\",\n  onTag: \"skyblue\",\n\n  tableBorder: \"white\",\n};\n\nconst normal = {\n  dimens: {\n    bigMargin: base * 2,\n    margin: base * 1,\n    gutter: base * 0.5,\n    spacing: base * 0.25,\n    thin: base * 0.125,\n  },\n  colors,\n};\n\nexport default normal;\nexport type RicalelogTheme = typeof normal;\n","import { createGlobalStyle } from \"./themedStyledComponents\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, #root {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n\n    font-family: -apple-system,\n      BlinkMacSystemFont,\n      \"Segoe UI\",\n      \"Noto Sans\",\n      Helvetica,\n      Arial,\n      sans-serif,\n      \"Apple Color Emoji\",\n      \"Segoe UI Emoji\";\n\n    overflow-x: hidden;\n\n    background-color: ${(p) => p.theme.colors.background};\n    color: ${(p) => p.theme.colors.onBackground};\n  }\n\n  h1, h2, h3, h4, h5, h6, p {\n    margin: 0;\n  }\n\n  a {\n    color: skyblue;\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n\n  input, button, select {\n    margin: 0;\n    padding: 0;\n    font-size: 16px;\n    appearance: none;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nexport default GlobalStyle;\n","import {\n  styled,\n  css,\n  keyframes,\n  ThemeProvider,\n} from \"./themedStyledComponents\";\n\nexport default styled;\nexport { css, keyframes, ThemeProvider };\n\nexport { default as normalTheme } from \"./normal\";\nexport * from \"./normal\";\nexport { default as GlobalStyle } from \"./GlobalStyle\";\nexport { default as useTheme } from \"./useTheme\";\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}"],"names":["menuItems","path","title","Container","styled","p","theme","dimens","margin","Header","children","data","useStaticQuery","author","site","siteMetadata","React","ThemeProvider","normalTheme","GlobalStyle","Link","to","href","map","item","key","Subtitle","TitleRow","Note","subtitle","note","description","thumbnail","ogType","keywords","siteTitle","siteUrl","siteDesc","pathPrefix","pageTitle","seoTitle","desc","pageUrl","imageUrl","keywordsString","join","name","content","property","TagComp","spacing","gutter","colors","tag","onTag","value","tags","showCount","props","items","fieldValue","totalCount","undefined","Tag","Tags","TagList","Head","Seo","allMdx","group","sort","a","b","tagsMoreThanOnce","tagsOnlyOnce","reduce","acc","push","Layout","ListPageHeader","default","css","keyframes","ThemeContext","createGlobalStyle","styledComponents","bigMargin","base","thin","background","onBackground","codeblock","onCodeblock","blockquoteBorder","blockquote","onBlockquote","code","onCode","tableBorder","_taggedTemplateLiteralLoose","strings","raw","slice"],"sourceRoot":""}