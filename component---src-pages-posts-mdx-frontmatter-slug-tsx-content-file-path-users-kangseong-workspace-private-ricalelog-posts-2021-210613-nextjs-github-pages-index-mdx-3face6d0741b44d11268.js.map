{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2021-210613-nextjs-github-pages-index-mdx-3face6d0741b44d11268.js","mappings":"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","sources":["webpack://ricalelog/./posts/2021/210613-nextjs-github-pages/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    code: \"code\",\n    div: \"div\",\n    h3: \"h3\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"간단한 프로토타이핑 공유를 위해, Next.js로 구현한 웹앱을 GitHub Pages에 배포하기로 했다.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://taeny.dev/javascript/nextjs-with-deployment-platform/#3-netlify-vs-vercel\"\n  }, \"nextJS 뭘로 배포할까? (Netlify, Vercel, Github page)\"), \" 문서를 보면 GitHub Pages는 물론이고 Netlify, Vercel 을 사용해 배포하는 방법과, 플랫폼간의 장단점까지 비교해 놓았다. 세 플랫폼에 모두 관심이 있다면 해당 글을 읽기를 권한다.\"), \"\\n\", React.createElement(_components.p, null, \"이 글에서는 해당 글의 내용을 토대로 GitHub Pages에 배포하는 방법만 간략히 정리한다.\"), \"\\n\", React.createElement(_components.h2, null, \"1. 배포 방법\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://taeny.dev/javascript/nextjs-with-deployment-platform/#5--github-page-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\"\n  }, \"위 문서\"), \"에서는 아래의 명령어를 \", React.createElement(_components.code, null, \"package.json\"), \"에 등록해놓고 사용하라고 안내하고 있다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token string-property property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string-property property\\\">\\\"deploy\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"rm -rf node_modules/.cache &amp;&amp; next build &amp;&amp; next export &amp;&amp; touch out/.nojekyll &amp;&amp; git add out/ &amp;&amp; git commit -m \\\\\\\"Deploy Next.js to gh-pages\\\\\\\" &amp;&amp; git subtree push --prefix out origin gh-pages\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"명령어를 하나하나 살펴보면 아래와 같다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"shell\\\"><pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\"><span class=\\\"token function\\\">rm</span> <span class=\\\"token parameter variable\\\">-rf</span> node_modules/.cache\\nnext build\\nnext <span class=\\\"token builtin class-name\\\">export</span>\\n<span class=\\\"token function\\\">touch</span> out/.nojekyll\\n<span class=\\\"token function\\\">git</span> <span class=\\\"token function\\\">add</span> out/\\n<span class=\\\"token function\\\">git</span> commit <span class=\\\"token parameter variable\\\">-m</span> <span class=\\\"token string\\\">\\\"Deploy Next.js to gh-pages\\\"</span>\\n<span class=\\\"token function\\\">git</span> subtree push <span class=\\\"token parameter variable\\\">--prefix</span> out origin gh-pages</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"(각 명령어에 관한 설명은 \", React.createElement(_components.a, {\n    href: \"https://taeny.dev/javascript/nextjs-with-deployment-platform/#5--github-page-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\"\n  }, \"원 문서\"), \"에 잘 되어있으므로 여기서는 생략하겠다.)\"), \"\\n\", React.createElement(_components.p, null, \"대부분의 경우 위 명령어를 그대로 써도 문제가 없겠지만, 개인적으로는 이슈가 몇 개 있었다.\"), \"\\n\", React.createElement(_components.h2, null, \"2. 이슈\"), \"\\n\", React.createElement(_components.h3, null, \"2.1. 빌드 결과물을 git 스테이지에 추가\"), \"\\n\", React.createElement(_components.p, null, \"위에서는 \", React.createElement(_components.code, null, \"git add out/\"), \" 명령어를 통해 빌드한 결과물을 git의 스테이지에 추가한다. 하지만 일반적인 Next.js 프로젝트에서 \", React.createElement(_components.code, null, \"out/\"), \" 디렉토리는 \", React.createElement(_components.code, null, \".gitignore\"), \"에 등록되어있기 때문에, 해당 명령어로는 스테이지에 추가되지 않는다.\"), \"\\n\", React.createElement(_components.p, null, \"해결 방법은 해당 디렉토리를 \", React.createElement(_components.code, null, \".gitignore\"), \"에서 제외시키거나 \", React.createElement(_components.code, null, \"-f\"), \" 옵션을 주어서 \", React.createElement(_components.code, null, \".gitignore\"), \"와 관계 없이 강제로 추가시키는 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"여기서는 \", React.createElement(_components.code, null, \"-f\"), \" 옵션을 사용한다. 왜냐면 빌드할 때만 \", React.createElement(_components.code, null, \"out/\"), \" 디렉토리를 스테이지에 포함시키고, 빌드 후에는 삭제할 생각이기 때문이다.\"), \"\\n\", React.createElement(_components.h3, null, \"2.2. 커밋 및 푸시\"), \"\\n\", React.createElement(_components.p, null, \"위 문서에서는 아래 명령어를 사용해 빌드 결과를 커밋하고 푸시한다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"shell\\\"><pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\"><span class=\\\"token function\\\">git</span> commit <span class=\\\"token parameter variable\\\">-m</span> <span class=\\\"token string\\\">\\\"Deploy Next.js to gh-pages\\\"</span>\\n<span class=\\\"token function\\\">git</span> subtree push <span class=\\\"token parameter variable\\\">--prefix</span> out origin gh-pages</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"이 경우 \", React.createElement(_components.code, null, \"out/\"), \" 디렉토리의 내용물을 \", React.createElement(_components.code, null, \"main\"), \"(혹은 \", React.createElement(_components.code, null, \"master\"), \") 브랜치에 계속 유지해야 한다. \", React.createElement(_components.code, null, \"out/\"), \" 디렉토리 내용을 git 에서 계속 유지할 것이라면 문제 없다. 하지만 내 경우 \", React.createElement(_components.code, null, \"out/\"), \" 디렉토리의 내용을 \", React.createElement(_components.code, null, \"main\"), \" 브랜치에 유지하고 싶지 않았다. (유지하지 않는 편이 히스토리 관리에 더 좋다고 생각했다.) 내가 원하는 프로세스는 아래와 같다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"git 스테이지에 임시로 \", React.createElement(_components.code, null, \"out/\"), \" 디렉토리를 추가하고 커밋한다.\"), \"\\n\", React.createElement(_components.li, null, \"해당 커밋을 가지고 \", React.createElement(_components.code, null, \"gh-pages\"), \" 브랜치에 배포를 진행한다. (배포하면 \", React.createElement(_components.code, null, \"gh-pages\"), \" 브랜치에 커밋이 새로 생성될 것이다.)\"), \"\\n\", React.createElement(_components.li, null, \"배포가 끝난 후 1번에서 추가했던 커밋을 삭제한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"그럼 원하는 방향이 적용되게끔 명령어를 변경해보자.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"shell\\\"><pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\"><span class=\\\"token comment\\\"># temp-for-deploy-gh-pages 브랜치를 생성한다.</span>\\n<span class=\\\"token function\\\">git</span> checkout <span class=\\\"token parameter variable\\\">-b</span> temp-for-deploy-gh-pages\\n\\n<span class=\\\"token comment\\\"># 생성한 브랜치에 `out/` 디렉토리가 포함된 내용을 커밋한다.</span>\\n<span class=\\\"token function\\\">git</span> commit <span class=\\\"token parameter variable\\\">-m</span> <span class=\\\"token string\\\">\\\"Deploy Next.js to gh-pages\\\"</span>\\n\\n<span class=\\\"token comment\\\"># 해당 커밋을 사용해 `out/` 디렉토리만으로 로컬의 gh-pages 브랜치에 새로운 커밋을 만든다.</span>\\n<span class=\\\"token function\\\">git</span> subtree <span class=\\\"token function\\\">split</span> <span class=\\\"token parameter variable\\\">--prefix</span> out <span class=\\\"token parameter variable\\\">-b</span> gh-pages\\n\\n<span class=\\\"token comment\\\"># 로컬의 gh-pages를 강제로 gh-pages 에 푸시한다.</span>\\n<span class=\\\"token function\\\">git</span> push <span class=\\\"token parameter variable\\\">-f</span> origin gh-pages:gh-pages\\n\\n<span class=\\\"token comment\\\"># 로컬의 gh-pages 브랜치를 삭제한다.</span>\\n<span class=\\\"token function\\\">git</span> branch <span class=\\\"token parameter variable\\\">-D</span> gh-pages\\n\\n<span class=\\\"token comment\\\"># temp-for-deploy-gh-pages 브랜치를 삭제한다.</span>\\n<span class=\\\"token function\\\">git</span> checkout main\\n<span class=\\\"token function\\\">git</span> branch <span class=\\\"token parameter variable\\\">-D</span> temp-for-deploy-gh-pages</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"gh-pages\"), \"를 강제로 푸시하는 이유는 이미 원격에 \", React.createElement(_components.code, null, \"gh-pages\"), \" 브랜치가 있을 경우, 새로운 커밋이 원격에 있는 기존의 커밋과 이어지지 않는 커밋이기 때문이다. (\", React.createElement(_components.code, null, \"gh-pages\"), \"에 추가되는 커밋의 부모 커밋이 \", React.createElement(_components.code, null, \"main\"), \" 브랜치 쪽에 유지되면, 이어지는 커밋으로 판단된다.)\"), \"\\n\", React.createElement(_components.h2, null, \"3. 이슈 해결 결과\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"shell\\\"><pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\"><span class=\\\"token function\\\">rm</span> <span class=\\\"token parameter variable\\\">-rf</span> node_modules/.cache\\nnext build\\nnext <span class=\\\"token builtin class-name\\\">export</span>\\n<span class=\\\"token function\\\">touch</span> out/.nojekyll\\n<span class=\\\"token function\\\">git</span> <span class=\\\"token function\\\">add</span> <span class=\\\"token parameter variable\\\">-f</span> out/\\n<span class=\\\"token function\\\">git</span> checkout <span class=\\\"token parameter variable\\\">-b</span> temp-for-deploy-gh-pages\\n<span class=\\\"token function\\\">git</span> commit <span class=\\\"token parameter variable\\\">-m</span> <span class=\\\"token string\\\">\\\"Deploy Next.js to gh-pages\\\"</span>\\n<span class=\\\"token function\\\">git</span> subtree <span class=\\\"token function\\\">split</span> <span class=\\\"token parameter variable\\\">--prefix</span> out <span class=\\\"token parameter variable\\\">-b</span> gh-pages\\n<span class=\\\"token function\\\">git</span> push <span class=\\\"token parameter variable\\\">-f</span> origin gh-pages:gh-pages\\n<span class=\\\"token function\\\">git</span> branch <span class=\\\"token parameter variable\\\">-D</span> gh-pages\\n<span class=\\\"token function\\\">git</span> checkout main\\n<span class=\\\"token function\\\">git</span> branch <span class=\\\"token parameter variable\\\">-D</span> temp-for-deploy-gh-pages</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"위 명령어들을 연달아 쓰면 Next.js 앱을 GitHub Pages에 배포할 수 있다. 매번 치기 귀찮을 것이므로 \", React.createElement(_components.code, null, \"package.json\"), \"에 등록해두고 사용하자.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token string-property property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string-property property\\\">\\\"deploy-gh-pages\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"rm -rf node_modules/.cache &amp;&amp; next build &amp;&amp; next export &amp;&amp; touch out/.nojekyll &amp;&amp; git add -f out/ &amp;&amp; git checkout -b temp-for-deploy-gh-pages &amp;&amp; git commit -m \\\\\\\"Deploy Next.js to gh-pages\\\\\\\" &amp;&amp; git subtree split --prefix out -b gh-pages &amp;&amp; git push -f origin gh-pages:gh-pages &amp;&amp; git branch -D gh-pages &amp;&amp; git checkout main &amp;&amp; git branch -D temp-for-deploy-gh-pages\\\"</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"4. 주의\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"위 내용은 어디까지나 \\\"프로토타이핑 공유를 위한 GitHub Pages 배포\\\"를 목적으로 하고 있다. 다른 목적으로 사용할 경우 적절하지 않을 수 있다.\"), \"\\n\", React.createElement(_components.li, null, \"환경변수와 관련된 내용은 이 문서에서 정리하지 않았다. 해당 내용은 \", React.createElement(_components.a, {\n    href: \"https://taeny.dev/javascript/nextjs-with-deployment-platform/#5--github-page-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0\"\n  }, \"원 문서\"), \"에 잘 설명되어 있다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"References\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://taeny.dev/javascript/nextjs-with-deployment-platform/#3-netlify-vs-vercel\"\n  }, \"nextJS 뭘로 배포할까? (Netlify, Vercel, Github page)\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://gist.github.com/tduarte/eac064b4778711b116bb827f8c9bef7b\"\n  }, \"tduarte/publish-ghpages.md\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2021/210613-nextjs-github-pages/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nimport SameSeriesPosts from \"../../components/SameSeriesPosts\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {frontmatter, sameSeriesPosts} = data.mdx;\n  const {title, slug, date, tags, series, heroImage, heroImageAlt} = frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, title), React.createElement(WrittenDate, null, date), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag))))), React.createElement(SameSeriesPosts, {\n    name: series,\n    data: sameSeriesPosts,\n    current: slug\n  }), !!image && React.createElement(ThumbnailImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children), React.createElement(Comments, null));\n};\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n  }\\n\"])));\nconst ThumbnailImage = styled(GatsbyImage)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 16px;\\n\"])));\nconst WrittenDate = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst Tags = styled.ul(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px\\n      \", \"px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.spacing, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"2677585968\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage, previewContent}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: previewContent !== null && previewContent !== void 0 ? previewContent : excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","h2","code","div","h3","ol","li","ul","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","_templateObject","_templateObject2","_templateObject3","_templateObject4","wrapper","MDXLayout","PostDetailPage","_ref","data","children","frontmatter","sameSeriesPosts","mdx","title","slug","date","tags","series","heroImage","heroImageAlt","image","getImage","Layout","Header","WrittenDate","Tags","map","tag","key","Link","to","SameSeriesPosts","name","current","ThumbnailImage","alt","MdxContent","Comments","styled","_taggedTemplateLiteralLoose","GatsbyImage","theme","dimens","gutter","spacing","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","previewContent","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}