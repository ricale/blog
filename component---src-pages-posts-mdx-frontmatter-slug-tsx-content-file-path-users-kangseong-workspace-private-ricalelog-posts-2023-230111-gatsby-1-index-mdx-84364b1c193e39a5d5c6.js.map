{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2023-230111-gatsby-1-index-mdx-84364b1c193e39a5d5c6.js","mappings":"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","sources":["webpack://ricalelog/./posts/2023/230111-gatsby-1/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx","webpack://ricalelog/./src/components/Comments.tsx","webpack://ricalelog/./src/components/MdxContent.tsx","webpack://ricalelog/./src/components/SameSeriesPosts.tsx","webpack://ricalelog/./src/components/Tag.tsx","webpack://ricalelog/./src/components/TagList.tsx","webpack://ricalelog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    ol: \"ol\",\n    li: \"li\",\n    ul: \"ul\",\n    code: \"code\",\n    h2: \"h2\",\n    div: \"div\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"0. 발단\"), \"\\n\", React.createElement(_components.p, null, \"쓰던 블로그 서비스가 안드로이드 모바일에서 광고를 삽입하는 것을 발견했다. (광고는 다시 없어졌다. 아마 운영자의 테스트였던 것 같다.) 개인적으로 개인 개발 블로그에 광고가 들어가는 걸 원치 않으므로 서비스를 바꿔야 겠다는 생각이 들었다. 그리고 그러던 와중에 GitHub Pages 에 정적 페이지 생성 프레임워크로 블로그를 운영하는 것도 괜찮겠다 싶었다.\"), \"\\n\", React.createElement(_components.p, null, \"Jekyll 과 Gatsby 두 서비스 중 고민하다가 Gatsby 를 선택했다. 자 그러면 천천히 하나씩 적용해보자.\"), \"\\n\", React.createElement(_components.h1, null, \"1. 프로젝트 기본 구성\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/tutorial/\"\n  }, \"공식 튜토리얼 문서\"), \"가 잘 정리되어 있다. 튜토리얼에서는 아래 일곱가지 내용을 설명한다.\"), \"\\n\", React.createElement(_components.ol, {\n    start: \"0\"\n  }, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/tutorial/part-0/\"\n  }, \"개발 환경 구성하기\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/tutorial/part-1/\"\n  }, \"로컬에서 프로젝트 생성 및 실행하고, Gatsby 클라우드에 배포하기\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/tutorial/part-2/\"\n  }, \"React 로 페이지 구현하기\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/tutorial/part-3/\"\n  }, \"플러그인 적용하기\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"gatsby-plugin-image 플러그인으로 정적 이미지를 사이트에 추가하기\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/tutorial/part-4/\"\n  }, \"GraphQL 사용하기\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"사이트의 메타 데이터 다루기\"), \"\\n\", React.createElement(_components.li, null, \"gatsby-source-filesystem 플러그인을 적용해 GraphQL 로 MDX 파일 목록 가져오기\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/tutorial/part-5/\"\n  }, \"MDX 사용하기\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"MDX 로 블로그 컨텐츠 작성하기\"), \"\\n\", React.createElement(_components.li, null, \"gatsby-plugin-mdx 플러그인을 적용해 GraphQL 로 MDX 파일 내용 가져오기\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/tutorial/part-6/\"\n  }, \"동적으로 페이지 생성하기\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"MDX 의 frontmatter 와 \", React.createElement(_components.code, null, \"{mdx.frontmatter__slug}.tsx\"), \" 형식의 파일명을 사용해 페이지 동적으로 생성하기\"), \"\\n\", React.createElement(_components.li, null, \"생성된 페이지에 알맞는 MDX 데이터를 GraphQL 로 가져와 사용하기\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/tutorial/part-7/\"\n  }, \"데이터에 따라 동적으로 이미지 추가하기\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"gatsby-transformer-sharp 플러그인을 적용해 MDX 의 frontmatter 에 따라 알맞는 이미지를 가져와 사용하기\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"본문이 훌륭하기 때문에 굳이 여기에 다시 정리하지는 않겠다. 위 과정을 모두 거치면 기본적인 글 작성이 가능한 블로그 사이트가 완성된다.\"), \"\\n\", React.createElement(_components.h1, null, \"2. 태그 구현\"), \"\\n\", React.createElement(_components.p, null, \"태그 구현 또한 \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/adding-tags-and-categories-to-blog-posts/\"\n  }, \"공식 문서\"), \"가 잘 정리되어 있다. 하지만 약간 옛날 버전인 듯 위 튜토리얼 문서와 과 맞지 않는 부분이 있어서 해당 부분을 정정할 겸 정리해보겠다.\"), \"\\n\", React.createElement(_components.h2, null, \"2.1. MDX 에 태그 추가\"), \"\\n\", React.createElement(_components.p, null, \"MDX 파일의 frontmatter 영역에 tags 를 추가하자\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"mdx\\\"><pre class=\\\"language-mdx\\\"><code class=\\\"language-mdx\\\">---\\ntitle: &quot;Create React App 으로 GitHub Pages 적용하기&quot;\\ndate: &quot;2021-05-03&quot;\\nslug: &quot;210503-create-react-app-github-pages&quot;\\ntags: [&quot;React&quot;, &quot;create react app&quot;, &quot;github pages&quot;] # 이렇게 추가하자\\n---</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://eneaxharja.com/add-tags-to-mdx-blog\"\n  }, \"https://eneaxharja.com/add-tags-to-mdx-blog\")), \"\\n\", React.createElement(_components.h2, null, \"2.2. 태그 페이지 템플릿 추가\"), \"\\n\", React.createElement(_components.p, null, \"태그 페이지에 쓰일 템플릿을 만들어보자.\"), \"\\n\", React.createElement(_components.p, null, \"여기서 \", React.createElement(_components.code, null, \"{mdx.frontmatter__slug}.tsx}\"), \" 형식의 파일을 만들지 않고 템플릿을 만드는 이유는 페이지가 MDX 파일의 정적 데이터(frontmatter 의 slug 필드)에 의해 만들어지는 것이 아니라, 동적인 데이터 (frontmatter 의 tags 정보를 수집) 에 의해 만들어져야 하기 때문이다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">// src/templates/TagDetailPageTemplate.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> graphql<span class=\\\"token punctuation\\\">,</span> Link<span class=\\\"token punctuation\\\">,</span> PageProps <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"gatsby\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Layout <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../components/Layout\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">TagDetailPageTemplateData</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  allMdx<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    totalCount<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">;</span>\\n    edges<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      node<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        frontmatter<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n          slug<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n          title<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">TagDetailPageTemplateContext</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  tag<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">TagDetailPageTemplate</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  pageContext<span class=\\\"token punctuation\\\">,</span>\\n  data<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">:</span> PageProps<span class=\\\"token operator\\\">&lt;</span>TagDetailPageTemplateData<span class=\\\"token punctuation\\\">,</span> TagDetailPageTemplateContext<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> tag <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> pageContext<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> totalCount<span class=\\\"token punctuation\\\">,</span> edges <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> data<span class=\\\"token punctuation\\\">.</span>allMdx<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Layout</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">태그 \\\"</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>tag<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">\\\"</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">글 </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>totalCount<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">개</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>p</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token punctuation\\\">{</span>edges<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> node<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> frontmatter <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span> <span class=\\\"token attr-name\\\">key</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>frontmatter<span class=\\\"token punctuation\\\">.</span>slug<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n            </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">/posts/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>frontmatter<span class=\\\"token punctuation\\\">.</span>slug<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span>frontmatter<span class=\\\"token punctuation\\\">.</span>title<span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n          </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Layout</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> pageQuery <span class=\\\"token operator\\\">=</span> graphql<span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\n  query ($tag: String) {\\n    allMdx(\\n      limit: 2000\\n      sort: { frontmatter: { date: DESC } }\\n      filter: { frontmatter: { tags: { in: [$tag] } } }\\n    ) {\\n      totalCount\\n      edges {\\n        node {\\n          frontmatter {\\n            slug\\n            title\\n          }\\n        }\\n      }\\n    }\\n  }\\n</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> TagDetailPageTemplate<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"2.3. \", React.createElement(_components.code, null, \"gatsby-node.ts\"), \" 작성\"), \"\\n\", React.createElement(_components.p, null, \"위에서 만든 템플릿으로 페이지를 만들기 위해서는 \", React.createElement(_components.code, null, \"gatsby-node.ts\"), \" 를 작성해야 한다. 이미 해당 파일을 만들었다면 \", React.createElement(_components.code, null, \"createPage()\"), \" 함수 안에 아래 내용을 적당히 끼워넣으면 된다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token comment\\\">// gatsby-node.ts</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> GatsbyNode <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"gatsby\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> path <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"path\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">TagGroupsQueryData</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  tagsGroup<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    group<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      fieldValue<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> createPages<span class=\\\"token operator\\\">:</span> GatsbyNode<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"createPages\\\"</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  actions<span class=\\\"token punctuation\\\">,</span>\\n  graphql<span class=\\\"token punctuation\\\">,</span>\\n  reporter<span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> result <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">graphql</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span>TagGroupsQueryData<span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\n    {\\n      tagsGroup: allMdx(limit: 2000) {\\n        group(field: { frontmatter: { tags: SELECT } }) {\\n          fieldValue\\n        }\\n      }\\n    }\\n  </span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>result<span class=\\\"token punctuation\\\">.</span>errors <span class=\\\"token operator\\\">||</span> <span class=\\\"token operator\\\">!</span>result<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    reporter<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">panicOnBuild</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">Error while running GraphQL query.</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> tagsTemplatePath <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token string\\\">\\\"src/templates/TagDetailPageTemplate.tsx\\\"</span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  result<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">.</span>tagsGroup<span class=\\\"token punctuation\\\">.</span>group<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>tag<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createPage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n      path<span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">/tags/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>tag<span class=\\\"token punctuation\\\">.</span>fieldValue<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n      component<span class=\\\"token operator\\\">:</span> tagsTemplatePath<span class=\\\"token punctuation\\\">,</span>\\n      context<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> tag<span class=\\\"token operator\\\">:</span> tag<span class=\\\"token punctuation\\\">.</span>fieldValue <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"2.4. 태그 목록 페이지 추가\"), \"\\n\", React.createElement(_components.p, null, \"태그 목록 페이지를 추가하자.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">// src/pages/tags/index.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> graphql<span class=\\\"token punctuation\\\">,</span> Link<span class=\\\"token punctuation\\\">,</span> PageProps <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"gatsby\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Layout <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../../components/Layout\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> Seo <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../../components/Seo\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">TagsPageData</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  allMdx<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    group<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      totalCount<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">;</span>\\n      fieldValue<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">TagsPage</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> data <span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">:</span> PageProps<span class=\\\"token operator\\\">&lt;</span>TagsPageData<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> tags <span class=\\\"token operator\\\">=</span> data<span class=\\\"token punctuation\\\">.</span>allMdx<span class=\\\"token punctuation\\\">.</span>group<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sort</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">,</span> b<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> b<span class=\\\"token punctuation\\\">.</span>totalCount <span class=\\\"token operator\\\">-</span> a<span class=\\\"token punctuation\\\">.</span>totalCount<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Layout</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>h1</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">tags</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>h1</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>ul</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n        </span><span class=\\\"token punctuation\\\">{</span>tags<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">map</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>tag<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n          <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>li</span> <span class=\\\"token attr-name\\\">key</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>tag<span class=\\\"token punctuation\\\">.</span>fieldValue<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n            </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">to</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">/tags/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>tag<span class=\\\"token punctuation\\\">.</span>fieldValue<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>tag<span class=\\\"token punctuation\\\">.</span>fieldValue<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Link</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">\\\" \\\"</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n            </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>small</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>tag<span class=\\\"token punctuation\\\">.</span>totalCount<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>small</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n          </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>li</span><span class=\\\"token punctuation\\\">></span></span>\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>ul</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">Layout</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> query <span class=\\\"token operator\\\">=</span> graphql<span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">\\n  query {\\n    allMdx(limit: 2000) {\\n      group(field: { frontmatter: { tags: SELECT } }) {\\n        fieldValue\\n        totalCount\\n      }\\n    }\\n  }\\n</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">Head</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Seo</span></span> <span class=\\\"token attr-name\\\">title</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>태그 목록<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> TagsPage<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"graphql\"), \" 쿼리에서 바로 totalCount 로 정렬하고 싶었지만 (GraphQL 을 잘 몰라서) 방법을 찾지 못했다. 대신 \", React.createElement(_components.code, null, \"TagsPage\"), \" 컴포넌트 첫번째 줄에서 \", React.createElement(_components.code, null, \".sort()\"), \" 를 사용해 정렬하고 있다.\"), \"\\n\", React.createElement(_components.h1, null, \"3. 다음\"), \"\\n\", React.createElement(_components.p, null, \"다음 글에서는 글 내용 안에 이미지를 삽입하는 방법을 정리한다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2023/230111-gatsby-1/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\nimport * as React from \"react\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nimport SameSeriesPosts from \"../../components/SameSeriesPosts\";\nimport TagList from \"../../components/TagList\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {frontmatter, sameSeriesPosts} = data.mdx;\n  const {title, slug, date, tags, series, heroImage, heroImageAlt} = frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, title), React.createElement(WrittenDate, null, date), React.createElement(TagList, {\n    tags: tags\n  })), React.createElement(SameSeriesPosts, {\n    name: series,\n    data: sameSeriesPosts,\n    current: slug\n  }), !!image && React.createElement(ThumbnailImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(PostContent, null, children), React.createElement(Comments, null));\n};\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n  }\\n\"])));\nconst ThumbnailImage = styled(GatsbyImage)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 16px;\\n\"])));\nconst WrittenDate = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst Tags = styled.ul(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px\\n      \", \"px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.spacing, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst PostContent = styled(MdxContent)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 60px;\\n\"])));\nconst query = \"2677585968\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage, previewContent}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: previewContent !== null && previewContent !== void 0 ? previewContent : excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { useEffect, useRef } from \"react\";\n\nfunction Comments() {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const scriptTag = document.createElement(\"script\");\n    const attrs = {\n      src: \"https://utteranc.es/client.js\",\n      repo: \"ricale/blog\",\n      \"issue-term\": \"pathname\",\n      label: \"utterances\",\n      theme: \"github-dark\",\n      crossOrigin: \"anonymous\",\n      async: \"true\",\n    };\n    Object.entries(attrs).forEach(([key, value]) => {\n      scriptTag.setAttribute(key, value);\n    });\n    ref.current?.appendChild(scriptTag);\n  }, []);\n\n  return <div id=\"comments\" ref={ref} />;\n}\n\nexport default Comments;\n","import styled from \"../themes\";\n\nconst MdxContent = styled.div`\n  font-size: 16px;\n  line-height: 1.5;\n\n  p {\n    margin-top: 0;\n    margin-bottom: 16px;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 24px;\n    margin-bottom: 16px;\n    line-height: 1.25;\n    font-weight: 600;\n  }\n\n  h1 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid #21262d;\n    font-size: 2em;\n  }\n\n  h2 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid #21262d;\n    font-size: 1.5em;\n  }\n\n  h3 {\n    font-size: 1.25em;\n  }\n\n  h4 {\n    font-size: 1em;\n  }\n\n  h5 {\n    font-size: 0.875em;\n  }\n\n  ul,\n  ol,\n  .gatsby-resp-image-wrapper {\n    margin-bottom: 16px;\n  }\n\n  table {\n    width: max-content;\n    max-width: 100%;\n    margin-bottom: 16px;\n    border-collapse: collapse;\n    tr {\n      border-top: 1px solid #21262d;\n    }\n    td,\n    th {\n      padding: 6px 13px;\n      border: 1px solid #30363d;\n    }\n  }\n\n  hr {\n    height: 0.25em;\n    margin: 24px 0;\n    border: 0;\n\n    background-color: #30363d;\n  }\n\n  li > ul,\n  li > ol {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  blockquote {\n    position: relative;\n\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 16px;\n    padding: 16px 32px;\n    border-left: 1px solid ${(p) => p.theme.colors.blockquoteBorder};\n    border-left-width: 10px;\n\n    background-color: ${(p) => p.theme.colors.blockquote};\n\n    > :first-child {\n      margin-top: 0;\n    }\n    > :last-child {\n      margin-bottom: 0;\n    }\n    > ul,\n    > ol {\n      padding-left: 20px;\n    }\n  }\n\n  blockquote:before {\n    content: '\"';\n\n    position: absolute;\n    top: -10px;\n    left: 5px;\n\n    font-size: 3em;\n    color: ${(p) => p.theme.colors.blockquoteBorder};\n  }\n  blockquote:after {\n    content: '\"';\n\n    position: absolute;\n    bottom: -30px;\n    right: 5px;\n\n    font-size: 3em;\n    color: ${(p) => p.theme.colors.blockquoteBorder};\n  }\n\n  code {\n    padding: 0.2em 0.4em;\n    border-radius: 2px;\n\n    font-size: 0.85em;\n\n    background-color: ${(p) => p.theme.colors.code};\n    color: ${(p) => p.theme.colors.onCode};\n    white-space: break-spaces;\n  }\n\n  pre {\n    margin-bottom: 16px;\n\n    overflow-x: auto;\n  }\n\n  pre > code {\n    padding: unset;\n    border-radius: unset;\n    background-color: unset;\n    color: unset;\n  }\n`;\n\nexport default MdxContent;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport styled, { css } from \"../themes\";\n\ntype SameSeriesPostsProps = {\n  name?: string;\n  data?:\n    | null\n    | {\n        frontmatter: {\n          title: string;\n          slug: string;\n        };\n      }[];\n  current?: string;\n};\nfunction SameSeriesPosts({ name, data, current }: SameSeriesPostsProps) {\n  const [collapsed, setCollapsed] = React.useState(true);\n  if (!data) {\n    return null;\n  }\n  return (\n    <Container>\n      <Header collapsed={collapsed} onClick={() => setCollapsed((st) => !st)}>\n        <h2>\n          시리즈 <Link to={`/series/${name}/`}>{`\"${name}\"`}</Link>\n        </h2>\n        <span>▲</span>\n      </Header>\n      {!collapsed && (\n        <List>\n          {data.map(({ frontmatter: { slug, title } }) => (\n            <ListItem active={slug === current} key={slug}>\n              <Link to={`/posts/${slug}`}>{title}</Link>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin-bottom: 16px;\n  align-items: center;\n\n  background-color: #111111;\n`;\n\ntype HeaderProps = {\n  collapsed: boolean;\n};\nconst Header = styled.div<HeaderProps>`\n  display: flex;\n  justify-content: space-between;\n  padding: 16px;\n  cursor: pointer;\n\n  > h2 {\n    margin: 0;\n    font-size: 1rem;\n  }\n\n  > span {\n    user-select: none;\n    transform: rotate(${(p) => (p.collapsed ? 0 : 180)}deg);\n  }\n`;\n\nconst List = styled.ol`\n  margin: 0 16px;\n  padding-bottom: 16px;\n`;\n\ntype ListItemProps = {\n  active: boolean;\n};\nconst ListItem = styled.li<ListItemProps>`\n  ${(p) =>\n    p.active &&\n    css`\n      & > a {\n        font-weight: bold;\n        font-style: italic;\n        text-decoration: underline;\n      }\n    `}\n`;\n\nexport default SameSeriesPosts;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"../themes\";\n\ntype TagProps = {\n  value: string;\n};\nfunction Tag({ value }: TagProps) {\n  return <TagComp to={`/tags/${value}`}>{value}</TagComp>;\n}\n\nconst TagComp = styled(Link)`\n  display: inline-block;\n  padding: ${(p) => p.theme.dimens.spacing}px ${(p) => p.theme.dimens.gutter}px;\n  border-radius: 2px;\n\n  background-color: ${(p) => p.theme.colors.tag};\n  color: ${(p) => p.theme.colors.onTag};\n  text-decoration: none;\n`;\n\nexport default Tag;\n","import * as React from \"react\";\n\nimport styled from \"../themes\";\nimport Tag from \"./Tag\";\n\nfunction isStringArray(arr: unknown[]): arr is string[] {\n  return typeof arr[0] === \"string\";\n}\n\ntype TagListProps = {\n  tags: string[] | { fieldValue: string; totalCount: number }[];\n};\nfunction TagList({ tags, ...props }: TagListProps) {\n  const items = isStringArray(tags)\n    ? tags.map((tag) => ({ fieldValue: tag, totalCount: undefined }))\n    : tags;\n  return (\n    <Container {...props}>\n      {items.map((tag) => (\n        <li key={tag.fieldValue}>\n          <Tag value={tag.fieldValue} />\n        </li>\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: ${(p) => p.theme.dimens.gutter}px;\n\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport default TagList;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","ol","li","ul","code","h2","div","_provideComponents","components","React","href","start","dangerouslySetInnerHTML","__html","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","wrapper","MDXLayout","PostDetailPage","_ref","data","children","frontmatter","sameSeriesPosts","mdx","title","slug","date","tags","series","heroImage","heroImageAlt","image","getImage","Layout","Header","WrittenDate","TagList","SameSeriesPosts","name","current","ThumbnailImage","alt","PostContent","Comments","styled","_taggedTemplateLiteralLoose","GatsbyImage","theme","dimens","gutter","spacing","colors","tag","onTag","MdxContent","Head","_ref2","_image$images","_image$images$fallbac","previewContent","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","ref","useRef","useEffect","scriptTag","document","createElement","entries","repo","label","crossOrigin","async","forEach","key","value","setAttribute","_ref$current","appendChild","id","blockquoteBorder","blockquote","onCode","Container","collapsed","List","ListItem","active","css","setCollapsed","onClick","st","Link","to","map","TagComp","items","fieldValue","totalCount","undefined","Tag","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}