{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2023-230112-gatsby-2-index-mdx-671c85ec99fc5e73aa80.js","mappings":"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","sources":["webpack://ricalelog/./posts/2023/230112-gatsby-2/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx","webpack://ricalelog/./src/components/Comments.tsx","webpack://ricalelog/./src/components/MdxContent.tsx","webpack://ricalelog/./src/components/SameSeriesPosts.tsx","webpack://ricalelog/./src/components/Tag.tsx","webpack://ricalelog/./src/components/TagList.tsx","webpack://ricalelog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    a: \"a\",\n    div: \"div\",\n    code: \"code\",\n    h2: \"h2\",\n    table: \"table\",\n    thead: \"thead\",\n    tr: \"tr\",\n    th: \"th\",\n    tbody: \"tbody\",\n    td: \"td\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"이전 글에서는 Gatsby 기본 기능을 구현을 위한 튜토리얼을 소개했고 태그 기능을 구현했다. 오늘은 MDX 글 안에 인라인 이미지와 테이블을 삽입해보자.\"), \"\\n\", React.createElement(_components.h1, {\n    id: \"1-이미지-삽입\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#1-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%82%BD%EC%9E%85\",\n    \"aria-label\": \"1 이미지 삽입 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1. 이미지 삽입\"), \"\\n\", React.createElement(_components.p, null, \"정적 이미지는 \", React.createElement(_components.code, null, \"gatsby-plugin-image\"), \" 플러그인과 \", React.createElement(_components.code, null, \"StaticImage\"), \" 컴포넌트로 적용한다. 페이지 컴포넌트에 들어가는 동적 이미지는 \", React.createElement(_components.code, null, \"gatsby-transformer-sharp\"), \" 플러그인과 \", React.createElement(_components.code, null, \"GatsbyImage\"), \" 컴포넌트로 적용한다. 그렇다면 MDX 본문 안에 들어가는 이미지는 어떻게 적용할까?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/docs/how-to/images-and-media/working-with-images-in-markdown/\"\n  }, \"공식 문서\"), \"에도 잘 나와있지만 그럼에도 불구하고 적용에 살짝 애를 먹었기 때문에 기록해두도록 하겠다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"11-gatsby-remark-images-플러그인-적용\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#11-gatsby-remark-images-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EC%A0%81%EC%9A%A9\",\n    \"aria-label\": \"11 gatsby remark images 플러그인 적용 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1.1. \", React.createElement(_components.code, null, \"gatsby-remark-images\"), \" 플러그인 적용\"), \"\\n\", React.createElement(_components.p, null, \"일단 플러그인을 설치하자.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"sh\\\"><pre class=\\\"language-sh\\\"><code class=\\\"language-sh\\\">$ <span class=\\\"token function\\\">npm</span> i gatsby-remark-images</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"그리고 \", React.createElement(_components.code, null, \"gatsby-config.ts\"), \" 를 수정하자.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token comment\\\">// gatsby-config.ts</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token keyword\\\">type</span> <span class=\\\"token punctuation\\\">{</span> GatsbyConfig <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"gatsby\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> config<span class=\\\"token operator\\\">:</span> GatsbyConfig <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n  plugins<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n    <span class=\\\"token comment\\\">// \\\"gatsby-plugin-mdx\\\", // &lt;- 이렇게 문자열 형식으로 gatsby-plugin-mdx 를 쓰고 있었다면, 이 줄은 삭제하자.</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      resolve<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby-plugin-mdx\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      options<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        gatsbyRemarkPlugins<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n          <span class=\\\"token punctuation\\\">{</span>\\n            resolve<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby-remark-images\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n            options<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n              maxWidth<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">800</span><span class=\\\"token punctuation\\\">,</span>\\n              backgroundColor<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"none\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// ....</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> config<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"12-mdx-에-인라인-이미지-사용\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#12-mdx-%EC%97%90-%EC%9D%B8%EB%9D%BC%EC%9D%B8-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%82%AC%EC%9A%A9\",\n    \"aria-label\": \"12 mdx 에 인라인 이미지 사용 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1.2. MDX 에 인라인 이미지 사용\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">![Alt message](./screenshot.png)</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h1, {\n    id: \"2-인라인-테이블-문법-적용\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-%EC%9D%B8%EB%9D%BC%EC%9D%B8-%ED%85%8C%EC%9D%B4%EB%B8%94-%EB%AC%B8%EB%B2%95-%EC%A0%81%EC%9A%A9\",\n    \"aria-label\": \"2 인라인 테이블 문법 적용 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2. 인라인 테이블 문법 적용\"), \"\\n\", React.createElement(_components.p, null, \"Markdown 은 원래 아래와 같은 문법으로 테이블을 삽입할 수 있다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">| 호스트명     | IP 주소         |\\n| ------------ | --------------- |\\n| mydomain.com | 111.111.111.222 |\\n| mydomain.com | 111.111.222.111 |\\n| mydomain.com | 111.222.111.111 |\\n| mydomain.com | 222.111.111.111 |</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"...있는 줄 알았다. 그런데 알고 보니 이 문법은 원래 마크다운 기본 문법이 아니라 GitHub 에서 만든 \", React.createElement(_components.a, {\n    href: \"https://github.github.com/gfm/\"\n  }, \"GitHub Flavored Markdown\"), \"(GFM) 스펙에서 지원하는 문법이었다. 당연히 MDX 에서도 기본적으로 적용되지 않는다. 하지만 다행히도 Gatsby 에서 GFM 을 적용할 수 있는 방법을 제공한다.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"21-remark-gfm-플러그인-적용\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#21-remark-gfm-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EC%A0%81%EC%9A%A9\",\n    \"aria-label\": \"21 remark gfm 플러그인 적용 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1. \", React.createElement(_components.code, null, \"remark-gfm\"), \" 플러그인 적용\"), \"\\n\", React.createElement(_components.p, null, \"일단 플러그인을 설치하자.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"sh\\\"><pre class=\\\"language-sh\\\"><code class=\\\"language-sh\\\">$ <span class=\\\"token function\\\">npm</span> i remark-gfm@^1</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"여기서 버전 1을 설치하는 이유는 Gatsby 가 ESM 을 아직 지원하지 않는데, remark-gfm 버전 2부터는 ESM 이기 때문이다. \", React.createElement(_components.a, {\n    href: \"https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx/#mdxoptions\"\n  }, \"공식 문서\"), \"에도 잘 설명되어 있다. (mdxOptions 섹션의 Please Note 부분을 보자.)\"), \"\\n\", React.createElement(_components.p, null, \"그리고 \", React.createElement(_components.code, null, \"gatsby-config.ts\"), \" 에 플러그인을 적용하자.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token keyword\\\">type</span> <span class=\\\"token punctuation\\\">{</span> GatsbyConfig <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"gatsby\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> config<span class=\\\"token operator\\\">:</span> GatsbyConfig <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n  plugins<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n      resolve<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"gatsby-plugin-mdx\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      options<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        mdxOptions<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n          remarkPlugins<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"remark-gfm\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token comment\\\">// ...</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> config<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, {\n    id: \"22-mdx-에-테이블-사용\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#22-mdx-%EC%97%90-%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%82%AC%EC%9A%A9\",\n    \"aria-label\": \"22 mdx 에 테이블 사용 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.2. MDX 에 테이블 사용\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">| 호스트명     | IP 주소         |\\n| ------------ | --------------- |\\n| mydomain.com | 111.111.111.222 |\\n| mydomain.com | 111.111.222.111 |\\n| mydomain.com | 111.222.111.111 |\\n| mydomain.com | 222.111.111.111 |</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.table, null, React.createElement(_components.thead, null, React.createElement(_components.tr, null, React.createElement(_components.th, null, \"호스트명\"), React.createElement(_components.th, null, \"IP 주소\"))), React.createElement(_components.tbody, null, React.createElement(_components.tr, null, React.createElement(_components.td, null, \"mydomain.com\"), React.createElement(_components.td, null, \"111.111.111.222\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"mydomain.com\"), React.createElement(_components.td, null, \"111.111.222.111\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"mydomain.com\"), React.createElement(_components.td, null, \"111.222.111.111\")), React.createElement(_components.tr, null, React.createElement(_components.td, null, \"mydomain.com\"), React.createElement(_components.td, null, \"222.111.111.111\")))));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2023/230112-gatsby-2/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\nimport * as React from \"react\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nimport SameSeriesPosts from \"../../components/SameSeriesPosts\";\nimport TagList from \"../../components/TagList\";\nfunction PostDetailPage(_ref) {\n  let {data, children} = _ref;\n  const {frontmatter, sameSeriesPosts} = data.mdx;\n  const {title, slug, date, tags, series, heroImage, heroImageAlt} = frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, title), React.createElement(WrittenDate, null, date), React.createElement(TagList, {\n    tags: tags\n  })), React.createElement(SameSeriesPosts, {\n    name: series,\n    data: sameSeriesPosts,\n    current: slug\n  }), !!image && React.createElement(ThumbnailImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(PostContent, null, children), React.createElement(Comments, null));\n}\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n  }\\n\"])));\nconst ThumbnailImage = styled(GatsbyImage)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 16px;\\n\"])));\nconst WrittenDate = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst Tags = styled.ul(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px\\n      \", \"px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.spacing, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst PostContent = styled(MdxContent)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 60px;\\n\"])));\nconst query = \"2677585968\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage, previewContent}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: previewContent !== null && previewContent !== void 0 ? previewContent : excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { useEffect, useRef } from \"react\";\n\nfunction Comments() {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const scriptTag = document.createElement(\"script\");\n    const attrs = {\n      src: \"https://utteranc.es/client.js\",\n      repo: \"ricale/blog\",\n      \"issue-term\": \"pathname\",\n      label: \"utterances\",\n      theme: \"github-dark\",\n      crossOrigin: \"anonymous\",\n      async: \"true\",\n    };\n    Object.entries(attrs).forEach(([key, value]) => {\n      scriptTag.setAttribute(key, value);\n    });\n    ref.current?.appendChild(scriptTag);\n  }, []);\n\n  return <div id=\"comments\" ref={ref} />;\n}\n\nexport default Comments;\n","import styled from \"../themes\";\n\nconst MdxContent = styled.div`\n  font-size: 16px;\n  line-height: 1.5;\n\n  p {\n    margin-top: 0;\n    margin-bottom: 16px;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 24px;\n    margin-bottom: 16px;\n    line-height: 1.25;\n    font-weight: 600;\n\n    > a.anchor path {\n      fill: white;\n    }\n  }\n\n  h1 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid #21262d;\n    font-size: 2.125em;\n  }\n\n  h2 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid #21262d;\n    font-size: 1.625em;\n  }\n\n  h3 {\n    font-size: 1.5em;\n  }\n\n  h4 {\n    font-size: 1.25em;\n  }\n\n  h5 {\n    font-size: 1em;\n  }\n\n  h6 {\n    font-size: 0.9375em;\n  }\n\n  ul,\n  ol,\n  .gatsby-resp-image-wrapper {\n    margin-bottom: 16px;\n  }\n\n  table {\n    width: max-content;\n    max-width: 100%;\n    margin-bottom: 16px;\n    border-collapse: collapse;\n    tr {\n      border-top: 1px solid #21262d;\n    }\n    td,\n    th {\n      padding: 6px 13px;\n      border: 1px solid #30363d;\n    }\n  }\n\n  hr {\n    height: 0.25em;\n    margin: 24px 0;\n    border: 0;\n\n    background-color: #30363d;\n  }\n\n  li > ul,\n  li > ol {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  blockquote {\n    position: relative;\n\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 16px;\n    padding: 16px 32px;\n    border-left: 1px solid ${(p) => p.theme.colors.blockquoteBorder};\n    border-left-width: 10px;\n\n    background-color: ${(p) => p.theme.colors.blockquote};\n\n    > :first-child {\n      margin-top: 0;\n    }\n    > :last-child {\n      margin-bottom: 0;\n    }\n    > ul,\n    > ol {\n      padding-left: 20px;\n    }\n  }\n\n  blockquote:before {\n    content: '\"';\n\n    position: absolute;\n    top: -10px;\n    left: 5px;\n\n    font-size: 3em;\n    color: ${(p) => p.theme.colors.blockquoteBorder};\n  }\n  blockquote:after {\n    content: '\"';\n\n    position: absolute;\n    bottom: -30px;\n    right: 5px;\n\n    font-size: 3em;\n    color: ${(p) => p.theme.colors.blockquoteBorder};\n  }\n\n  code {\n    padding: 0.2em 0.4em;\n    border-radius: 2px;\n\n    font-size: 0.85em;\n\n    background-color: ${(p) => p.theme.colors.code};\n    color: ${(p) => p.theme.colors.onCode};\n    white-space: break-spaces;\n  }\n\n  pre[class*=\"language-\"] {\n    margin-bottom: 16px;\n\n    /* overflow-x: auto; */\n  }\n\n  pre > code {\n    padding: unset;\n    border-radius: unset;\n    background-color: unset;\n    color: unset;\n  }\n`;\n\nexport default MdxContent;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport styled, { css } from \"../themes\";\nimport { PostFrontmatter } from \"../types\";\n\ntype SameSeriesPostsProps = {\n  name?: string;\n  data?:\n    | null\n    | {\n        frontmatter: Pick<PostFrontmatter, \"title\" | \"slug\">;\n      }[];\n  current?: string;\n};\nfunction SameSeriesPosts({ name, data, current }: SameSeriesPostsProps) {\n  const [collapsed, setCollapsed] = React.useState(true);\n  if (!data) {\n    return null;\n  }\n  return (\n    <Container>\n      <Header collapsed={collapsed} onClick={() => setCollapsed((st) => !st)}>\n        <h2>\n          시리즈 <Link to={`/series/${name}/`}>{`\"${name}\"`}</Link>\n        </h2>\n        <span>▲</span>\n      </Header>\n      {!collapsed && (\n        <List>\n          {data.map(({ frontmatter: { slug, title } }) => (\n            <ListItem active={slug === current} key={slug}>\n              <Link to={`/posts/${slug}`}>{title}</Link>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin-bottom: 16px;\n  align-items: center;\n\n  background-color: #111111;\n`;\n\ntype HeaderProps = {\n  collapsed: boolean;\n};\nconst Header = styled.div<HeaderProps>`\n  display: flex;\n  justify-content: space-between;\n  padding: 16px;\n  cursor: pointer;\n\n  > h2 {\n    margin: 0;\n    font-size: 1rem;\n  }\n\n  > span {\n    user-select: none;\n    transform: rotate(${(p) => (p.collapsed ? 0 : 180)}deg);\n  }\n`;\n\nconst List = styled.ol`\n  margin: 0 16px;\n  padding-bottom: 16px;\n`;\n\ntype ListItemProps = {\n  active: boolean;\n};\nconst ListItem = styled.li<ListItemProps>`\n  ${(p) =>\n    p.active &&\n    css`\n      & > a {\n        font-weight: bold;\n        font-style: italic;\n        text-decoration: underline;\n      }\n    `}\n`;\n\nexport default SameSeriesPosts;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"../themes\";\n\ntype TagProps = {\n  value: string;\n};\nfunction Tag({ value }: TagProps) {\n  return <TagComp to={`/tags/${value}`}>{value}</TagComp>;\n}\n\nconst TagComp = styled(Link)`\n  display: inline-block;\n  padding: ${(p) => p.theme.dimens.spacing}px ${(p) => p.theme.dimens.gutter}px;\n  border-radius: 2px;\n\n  background-color: ${(p) => p.theme.colors.tag};\n  color: ${(p) => p.theme.colors.onTag};\n  text-decoration: none;\n`;\n\nexport default Tag;\n","import * as React from \"react\";\n\nimport styled from \"../themes\";\nimport Tag from \"./Tag\";\n\nfunction isStringArray(arr: unknown[]): arr is string[] {\n  return typeof arr[0] === \"string\";\n}\n\ntype TagListProps = {\n  tags: string[] | { fieldValue: string; totalCount: number }[];\n  showCount?: boolean;\n};\nfunction TagList({ tags, showCount, ...props }: TagListProps) {\n  const items = isStringArray(tags)\n    ? tags.map((tag) => ({ fieldValue: tag, totalCount: undefined }))\n    : tags;\n  return (\n    <Container {...props}>\n      {items.map((tag) => (\n        <li key={tag.fieldValue}>\n          <Tag value={tag.fieldValue} />\n          {showCount && !!tag.totalCount && <sup>{`${tag.totalCount}`}</sup>}\n        </li>\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: ${(p) => p.theme.dimens.gutter}px;\n\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport default TagList;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","a","div","code","h2","table","thead","tr","th","tbody","td","_provideComponents","components","React","id","style","position","href","className","dangerouslySetInnerHTML","__html","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","wrapper","MDXLayout","PostDetailPage","_ref","data","children","frontmatter","sameSeriesPosts","mdx","title","slug","date","tags","series","heroImage","heroImageAlt","image","getImage","Layout","Header","WrittenDate","TagList","SameSeriesPosts","name","current","ThumbnailImage","alt","PostContent","Comments","styled","_taggedTemplateLiteralLoose","GatsbyImage","theme","dimens","gutter","spacing","colors","tag","onTag","MdxContent","Head","_ref2","_image$images","_image$images$fallbac","previewContent","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","ref","useRef","useEffect","scriptTag","document","createElement","entries","repo","label","crossOrigin","async","forEach","key","value","setAttribute","_ref$current","appendChild","blockquoteBorder","blockquote","onCode","Container","collapsed","List","ListItem","active","css","setCollapsed","onClick","st","Link","to","map","TagComp","showCount","items","fieldValue","totalCount","undefined","Tag","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}