{"version":3,"file":"component---src-pages-tags-index-tsx-caea6b57765b0f91d224.js","mappings":"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","sources":["webpack://ricalelog/./src/components/Layout/Header.tsx","webpack://ricalelog/./src/components/Layout/Footer.tsx","webpack://ricalelog/./src/components/Layout/index.tsx","webpack://ricalelog/./src/components/ListPageHeader.tsx","webpack://ricalelog/./src/components/Seo.tsx","webpack://ricalelog/./src/components/Tag.tsx","webpack://ricalelog/./src/components/TagList.tsx","webpack://ricalelog/./src/pages/tags/index.tsx","webpack://ricalelog/./src/themes/themedStyledComponents.ts","webpack://ricalelog/./src/themes/normal.ts","webpack://ricalelog/./src/themes/GlobalStyle.ts","webpack://ricalelog/./src/themes/index.ts","webpack://ricalelog/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport styled, { css } from \"../../themes\";\n\nconst isDevelopment = process.env.NODE_ENV === \"development\";\n\nconst menuItems = [\n  { path: \"/posts\", title: \"모든글\" },\n  { path: \"/series\", title: \"시리즈\" },\n  { path: \"/tags\", title: \"태그\" },\n  { href: \"/rss.xml\", title: \"RSS\" },\n  ...(isDevelopment ? [{ path: \"/drafts\", title: \"임시글\" }] : []),\n];\n\ntype HeaderProps = {\n  emphasize?: boolean;\n  title: string;\n  author: string;\n  siteUrl: string;\n};\nfunction Header({ emphasize, title, author, siteUrl }: HeaderProps) {\n  return (\n    <Container emphasize={emphasize}>\n      <header>\n        <Link to=\"/\">{title}</Link>\n      </header>\n      <address>\n        <a href=\"https://ricale.kr\">{`by ${author}`}</a>\n      </address>\n      <nav>\n        <ul>\n          {menuItems.map((item, i) => (\n            <li key={i}>\n              {item.path ? (\n                <Link to={item.path}>{item.title}</Link>\n              ) : (\n                <a href={`${siteUrl}${item.href}`}>{item.title}</a>\n              )}\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </Container>\n  );\n}\n\ntype ContainerProps = {\n  emphasize?: boolean;\n};\nconst Container = styled.div<ContainerProps>`\n  display: flex;\n  flex-direction: row;\n\n  margin: 0px 16px 8px;\n  padding-top: 8px;\n\n  & > header {\n    margin-right: 8px;\n    font-weight: 600;\n    font-size: 1.25rem;\n    > a {\n      color: white;\n    }\n  }\n\n  & > address {\n    font-size: 0.875rem;\n    font-style: normal;\n    > a {\n      color: white;\n    }\n  }\n\n  & > nav {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n\n    flex: 1;\n    > ul {\n      display: flex;\n      flex-direction: row;\n      gap: 8px;\n\n      margin: 0;\n      margin-left: 16px;\n      padding: 0;\n      list-style: none;\n\n      > li > a {\n        display: inline-block;\n        color: #dddddd;\n        text-decoration: underline;\n        font-size: 0.875rem;\n      }\n    }\n  }\n\n  ${(p) =>\n    p.emphasize &&\n    css`\n      padding-top: 56px;\n      padding-bottom: 48px;\n      & > header {\n        font-family: monospace;\n        font-size: 5rem;\n      }\n      & > address {\n        font-family: monospace;\n        font-size: 1.5rem;\n      }\n      & > nav {\n        display: none;\n      }\n\n      @media (max-width: 799px) {\n        flex-direction: column;\n\n        & > header {\n          font-family: monospace;\n          font-size: 4.5rem;\n        }\n        & > address {\n          font-family: monospace;\n          font-size: 1.25rem;\n        }\n      }\n    `}\n`;\n\nexport default Header;\n","import * as React from \"react\";\nimport styled from \"../../themes\";\n\nfunction Footer() {\n  return (\n    <Container>\n      <p>\n        Copyright 2021{\" \"}\n        <strong>\n          <a href=\"https://ricale.kr/\">ricale</a>.\n        </strong>\n      </p>\n      <p>\n        <a href=\"https://creativecommons.org/licenses/by-nc-sa/2.0/kr/\">\n          CC BY-NC-SA 2.0 KR\n        </a>\n        .\n      </p>\n      <p>\n        Powered by{\" \"}\n        <strong>\n          <a href=\"https://www.gatsbyjs.com/\">Gatsby</a>\n        </strong>{\" \"}\n        and{\" \"}\n        <strong>\n          <a href=\"https://pages.github.com/\">GitHub Pages</a>\n        </strong>\n        .\n      </p>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 4px;\n\n  margin-top: 60px;\n  margin-bottom: 16px;\n\n  font-size: 0.8125rem;\n\n  color: #aaaaaa;\n  p {\n    white-space: nowrap;\n  }\n  a {\n    color: #aaaaaa;\n  }\n  strong,\n  strong > a {\n    font-weight: normal;\n    color: #ffffff;\n  }\n`;\n\nexport default Footer;\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nimport styled, {\n  css,\n  GlobalStyle,\n  normalTheme,\n  ThemeProvider,\n} from \"../../themes\";\nimport { SiteMetadata } from \"../../types\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\ntype LayoutQueryData = {\n  site: {\n    siteMetadata: SiteMetadata;\n  };\n};\ntype LayoutProps = {\n  emphasize?: boolean;\n  minContentHeight?: number;\n  children?: React.ReactNode;\n};\nfunction Layout({ emphasize, minContentHeight, children }: LayoutProps) {\n  const data = useStaticQuery<LayoutQueryData>(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          author\n          siteUrl\n        }\n      }\n    }\n  `);\n  const { title, author, siteUrl } = data.site.siteMetadata;\n  return (\n    <ThemeProvider theme={normalTheme}>\n      <GlobalStyle />\n      <Container>\n        <Header\n          emphasize={emphasize}\n          title={title}\n          author={author}\n          siteUrl={siteUrl}\n        />\n        <Content minHeight={minContentHeight}>{children}</Content>\n        <Footer />\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n\n  > main {\n    padding-left: ${(p) => p.theme.dimens.margin}px;\n    padding-right: ${(p) => p.theme.dimens.margin}px;\n    padding-bottom: ${(p) => p.theme.dimens.margin}px;\n\n    @media (max-width: 799px) {\n      padding-left: ${(p) => p.theme.dimens.margin + 4}px;\n      padding-right: ${(p) => p.theme.dimens.margin + 4}px;\n    }\n  }\n`;\n\ntype ContentProps = {\n  minHeight?: number;\n};\nconst Content = styled.main<ContentProps>`\n  ${(p) =>\n    p.minHeight !== undefined &&\n    css`\n      min-height: ${p.minHeight}px;\n    `}\n`;\n\nexport default Layout;\n","import * as React from \"react\";\nimport styled from \"../themes\";\n\ntype ListPageHeaderProps = {\n  title: string;\n  subtitle?: string;\n  note?: string | number;\n};\nfunction ListPageHeader({ title, subtitle, note }: ListPageHeaderProps) {\n  return (\n    <Container>\n      {!!subtitle && <Subtitle>{subtitle}</Subtitle>}\n      <TitleRow>\n        <h1>{title}</h1>\n        {!!note && <Note>{`(${note})`}</Note>}\n      </TitleRow>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 40px 0 45px;\n  padding-left: 40px;\n\n  @media (max-width: 414px) {\n    padding-left: 20px;\n  }\n`;\n\nconst Subtitle = styled.p``;\n\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n\n  & > h1 {\n    word-break: keep-all;\n  }\n\n  @media (max-width: 414px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst Note = styled.p`\n  margin-bottom: 8px;\n  font-size: 0.9375rem;\n`;\n\nexport default ListPageHeader;\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { SiteMetadata } from \"../types\";\n\ntype SeoQueryData = {\n  site: {\n    siteMetadata: SiteMetadata;\n  };\n};\ntype SeoProps = {\n  title?: string;\n  description?: string;\n  path?: string;\n  thumbnail?: string;\n  keywords?: string[];\n  ogType?: string;\n};\nfunction Seo({\n  title,\n  description,\n  path,\n  thumbnail,\n  ogType,\n  keywords,\n}: SeoProps) {\n  const data = useStaticQuery<SeoQueryData>(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          author\n          siteUrl\n          description\n        }\n      }\n    }\n  `);\n\n  const {\n    siteMetadata: { title: siteTitle, author, siteUrl, description: siteDesc },\n  } = data.site;\n\n  const pageTitle = title\n    ? `${title} | ${siteTitle}`\n    : `${siteTitle} by ${author}`;\n  const seoTitle = title ?? siteTitle;\n  const desc = description || siteDesc;\n  const pageUrl = `${siteUrl}${path ? `/${path}` : \"\"}`;\n  const imageUrl = thumbnail ? `${siteUrl}${thumbnail}` : null;\n  const keywordsString = keywords ? keywords.join(\", \") : null;\n\n  return (\n    <>\n      <title>{pageTitle}</title>\n      <meta name=\"description\" content={desc} />\n      <meta name=\"author\" content={author} />\n      {keywordsString && <meta name=\"keywords\" content={keywordsString} />}\n\n      {!!ogType && <meta property=\"og:type\" content={ogType} />}\n      <meta property=\"og:title\" content={seoTitle} />\n      <meta property=\"og:description\" content={desc} />\n      <meta property=\"og:url\" content={pageUrl} />\n      {!!imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n\n      <meta property=\"twitter:card\" content=\"summary_large_image\" />\n      <meta property=\"twitter:title\" content={seoTitle} />\n      <meta property=\"twitter:description\" content={desc} />\n      <meta property=\"twitter:url\" content={pageUrl} />\n      {!!imageUrl && <meta property=\"twitter:image\" content={imageUrl} />}\n\n      <meta\n        name=\"google-site-verification\"\n        content=\"Z24DuzLFxq0tVrtFhTxfPETtFXf9rOEG73-HpKk2Pgs\"\n      />\n    </>\n  );\n}\n\nexport default Seo;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"../themes\";\n\ntype TagProps = {\n  value: string;\n};\nfunction Tag({ value }: TagProps) {\n  return <TagComp to={`/tags/${value}`}>{value}</TagComp>;\n}\n\nconst TagComp = styled(Link)`\n  display: inline-block;\n  padding: ${(p) => p.theme.dimens.spacing}px ${(p) => p.theme.dimens.gutter}px;\n  border-radius: 2px;\n\n  background-color: ${(p) => p.theme.colors.tag};\n  color: ${(p) => p.theme.colors.onTag};\n  text-decoration: none;\n`;\n\nexport default Tag;\n","import * as React from \"react\";\n\nimport styled from \"../themes\";\nimport Tag from \"./Tag\";\n\nfunction isStringArray(arr: unknown[]): arr is string[] {\n  return typeof arr[0] === \"string\";\n}\n\ntype TagListProps = {\n  tags: string[] | { fieldValue: string; totalCount: number }[];\n  showCount?: boolean;\n};\nfunction TagList({ tags, showCount, ...props }: TagListProps) {\n  const items = isStringArray(tags)\n    ? tags.map((tag) => ({ fieldValue: tag, totalCount: undefined }))\n    : tags;\n  return (\n    <Container {...props}>\n      {items.map((tag) => (\n        <li key={tag.fieldValue}>\n          <Tag value={tag.fieldValue} />\n          {showCount && !!tag.totalCount && <sup>{`${tag.totalCount}`}</sup>}\n        </li>\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: ${(p) => p.theme.dimens.gutter}px;\n\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport default TagList;\n","import * as React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport ListPageHeader from \"../../components/ListPageHeader\";\nimport styled from \"../../themes\";\nimport TagList from \"../../components/TagList\";\nimport { TagSource } from \"../../types\";\n\ntype TagsPageData = {\n  allMdx: {\n    group: TagSource[];\n  };\n};\nfunction TagsPage({ data }: PageProps<TagsPageData>) {\n  const tags = data.allMdx.group.sort((a, b) => b.totalCount - a.totalCount);\n  const [tagsMoreThanOnce, tagsOnlyOnce] = tags.reduce(\n    (acc, tag) => {\n      acc[tag.totalCount > 1 ? 0 : 1].push(tag);\n      return acc;\n    },\n    [[], []] as [TagSource[], TagSource[]]\n  );\n  return (\n    <Layout>\n      <ListPageHeader title=\"태그\" />\n      <Tags tags={tagsMoreThanOnce} showCount />\n      <Tags tags={tagsOnlyOnce} />\n    </Layout>\n  );\n}\n\nconst Tags = styled(TagList)`\n  margin-bottom: 24px;\n`;\n\nexport const query = graphql`\n  query {\n    allMdx(limit: 2000, filter: { frontmatter: { date: { ne: \"\" } } }) {\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title=\"태그 목록\" />;\n\nexport default TagsPage;\n","import * as styledComponents from \"styled-components\";\n\nimport { RicalelogTheme } from \"./normal\";\n\nexport const {\n  default: styled,\n  css,\n  keyframes,\n  ThemeProvider,\n  ThemeContext,\n  createGlobalStyle,\n} = styledComponents as unknown as styledComponents.ThemedStyledComponentsModule<RicalelogTheme>;\n","const base = 16;\n\nconst colors = {\n  background: \"black\",\n  onBackground: \"white\",\n\n  blockquoteBorder: \"#666666\",\n  blockquote: \"#1a1a1a\",\n  onBlockquote: \"white\",\n\n  code: \"#333333\",\n  onCode: \"#DDDDDD\",\n\n  tag: \"#222222\",\n  onTag: \"skyblue\",\n\n  tableBorder: \"white\",\n};\n\nconst normal = {\n  dimens: {\n    bigMargin: base * 2,\n    margin: base * 1,\n    gutter: base * 0.5,\n    spacing: base * 0.25,\n    thin: base * 0.125,\n  },\n  colors,\n};\n\nexport default normal;\nexport type RicalelogTheme = typeof normal;\n","import { createGlobalStyle } from \"./themedStyledComponents\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, #___gatsby {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    \n    font-family: -apple-system,\n      BlinkMacSystemFont,\n      \"Segoe UI\",\n      \"Noto Sans\",\n      Helvetica,\n      Arial,\n      sans-serif,\n      \"Apple Color Emoji\",\n      \"Segoe UI Emoji\";\n\n    background-color: ${(p) => p.theme.colors.background};\n    color: ${(p) => p.theme.colors.onBackground};\n  }\n\n  h1, h2, h3, h4, h5, h6, p {\n    margin: 0;\n  }\n\n  a {\n    color: skyblue;\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n\n  input, button, select {\n    margin: 0;\n    padding: 0;\n    font-size: 16px;\n    appearance: none;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nexport default GlobalStyle;\n","import {\n  styled,\n  css,\n  keyframes,\n  ThemeProvider,\n} from \"./themedStyledComponents\";\n\nexport default styled;\nexport { css, keyframes, ThemeProvider };\n\nexport { default as normalTheme } from \"./normal\";\nexport * from \"./normal\";\nexport { default as GlobalStyle } from \"./GlobalStyle\";\nexport { default as useTheme } from \"./useTheme\";\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}"],"names":["menuItems","path","title","href","Container","styled","p","emphasize","css","author","siteUrl","React","Link","to","map","item","i","key","theme","dimens","margin","Content","undefined","minHeight","minContentHeight","children","data","useStaticQuery","site","siteMetadata","ThemeProvider","normalTheme","GlobalStyle","Header","Footer","Subtitle","TitleRow","Note","subtitle","note","description","thumbnail","ogType","keywords","siteTitle","siteDesc","pageTitle","seoTitle","desc","pageUrl","imageUrl","keywordsString","join","name","content","property","TagComp","spacing","gutter","colors","tag","onTag","value","tags","showCount","props","items","fieldValue","totalCount","Tag","Tags","TagList","Head","Seo","allMdx","group","sort","a","b","tagsMoreThanOnce","tagsOnlyOnce","reduce","acc","push","Layout","ListPageHeader","default","keyframes","ThemeContext","createGlobalStyle","styledComponents","bigMargin","base","thin","background","onBackground","blockquoteBorder","blockquote","onBlockquote","code","onCode","tableBorder","_taggedTemplateLiteralLoose","strings","raw","slice"],"sourceRoot":""}