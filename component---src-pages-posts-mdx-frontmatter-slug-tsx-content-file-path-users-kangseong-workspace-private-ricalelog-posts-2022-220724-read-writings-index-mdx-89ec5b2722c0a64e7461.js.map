{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2022-220724-read-writings-index-mdx-89ec5b2722c0a64e7461.js","mappings":"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","sources":["webpack://ricalelog/./posts/2022/220724-read-writings/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"JavaScript\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/48865710/spread-operator-vs-array-concat\"\n  }, \"spread operator vs array.concat()\")), \"\\n\", React.createElement(_components.p, null, \"spread 연산자 (\", React.createElement(_components.code, null, \"[...arr]\"), \")로 배열을 합치는 것과 \", React.createElement(_components.code, null, \".concat()\"), \" 메서드를 사용해 배열을 합치는 것 중 어느 것의 성능이 더 나은가? 에 관한 글. 결론만 말하자면 \", React.createElement(_components.code, null, \".concat()\"), \" 이 성능적으로 더 유리하다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://h3manth.com/ES2022/\"\n  }, \"ES2022 Features!\")), \"\\n\", React.createElement(_components.p, null, \"ES2022 에 새로 도입되는 문법/함수들을 소개하는 글. 개인적으로 Top-Level await 와 클래스 쪽에 추가된 문법들이 눈에 들어온다.\"), \"\\n\", React.createElement(_components.h2, null, \"React\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://www.youtube.com/watch?v=fR8tsJ2r7Eg\"\n  }, \"토스ㅣSLASH 22 - Effective Component 지속 가능한 성장과 컴포넌트\"), \" (영상)\"), \"\\n\", React.createElement(_components.p, null, \"지속 가능한 컴포넌트 개발을 위한 방법론? 소개 세션. 여기서 말하는 \\\"지속 가능한\\\"은 유지보수와 재사용성 측면을 이야기한다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Headless UI 로 구현하자.\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"UI 와 로직, 이벤트 처리 등 각각의 역할을 각각의 모듈로 분리해 개발하는 것을 말한다.\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"컴포넌트는 하나의 역할만 하거나, 하나의 역할만 하는 컴포넌트들의 조합이어야 한다.\"), \"\\n\", React.createElement(_components.li, null, \"도메인을 분리해야 한다.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"모두 공감가는 내용이며 대부분 (완벽하지는 않지만) 실천하고 있는 내용이기도 하다. 설령 알고 있던 내용일지라도 세션이 내용 정리를 잘 해주고 있기 때문에, 들어볼만 하다.\"), \"\\n\", React.createElement(_components.h2, null, \"React Native\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://www.youtube.com/watch?v=b_6CjuvVg8o\"\n  }, \"토스ㅣSLASH 22 - 미친 생산성을 위한 React Native\"), \" (영상)\"), \"\\n\", React.createElement(_components.p, null, \"토스에서 토스 글로벌 앱 구현을 위해 네이티브에서 RN 으로 전환했던 경험을 소개하는 세션.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"도입 전 Flutter 와도 비교해보았다고 하는데, React Native 의 낮은 진입 장벽과 코드 푸시 기능 때문에 RN 을 선택했다고 한다.\"), \"\\n\", React.createElement(_components.li, null, \"코드 푸시 기능을 굉장히 강조한다. 각 스토어의 심사 후 배포라는 느린 프로세스에 스트레스를 많이 받았던 것 같다.\"), \"\\n\", React.createElement(_components.li, null, \"네이티브 개발자들도 RN 에서 같이 개발을 했다고 한다. 네이티브 이슈 대응에서 매우 유리했을 것 같다. (네이티브 개발자들의 JavaScript/React 학습 소요가 발생하긴 했다.)\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"iOS 개발자는 Swift 로 개발하는 것 보다 RN 으로 개발하는 게 생산성이 훨씬 좋았다고 말한다. 특히 핫 리로딩 (Swift 도 제공하긴 하지만 RN 의 기능이 더 조핬다고 한다) 기능을 언급했다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Algorithm\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://fierycoding.tistory.com/45\"\n  }, \"플로이드의 토끼와 거북이 알고리즘(Floyd's Tortoise & Hare Algorithm) / 증명 / leetcode 287번 / 파이썬\")), \"\\n\", React.createElement(_components.p, null, \"\\\"링크드 리스트가 cycle 을 갖고 있는지 알아내라고? 좋다. Two Pointer 를 사용하면 쉽게 알 수 있으니까. 엥? 그런데 cycle 이 시작하는 지점을 찾아내라고? 그건 어떻게 하는 건데?\\\"\"), \"\\n\", React.createElement(_components.p, null, \"끙끙대다가 결국 답을 찾아봤는데 \", React.createElement(_components.strong, null, React.createElement(_components.em, null, \"플로이드의 순환 탐색 알고리즘\")), \" 을 쓰라고 한다. 해당 알고리즘을 쓰니 너무 쉽게 풀 수 있었다. 그런데 도대체 이 알고리즘의 원리가 뭔데? 아무리 생각을 해봐도, 설명한 글을 찾아봐도 이해되지가 않았다.\"), \"\\n\", React.createElement(_components.p, null, \"결국 찾아낸 이 글이, 해당 알고리즘을 가장 쉽게 설명한 글이다. 수학 공식을 삽화와 같이 몇 번이고 반복해서 본 뒤에야 겨우겨우 이해할 수 있었다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"http://redisgate.kr/redis/configuration/internal_skiplist.php\"\n  }, \"Redis SKIP List of ZSETS (SORTED SETS)\")), \"\\n\", React.createElement(_components.p, null, \"Redis 의 sorted set 의 구현 알고리즘에 대해 정리한 글. 그냥 삽입될 때마다 정렬하는 거 아냐? 라고 우습게 생각했던 나 자신을 반성하게 되었다. 인메모리 DB 임에도 속도를 위해서는 이 정도 알고리즘을 써야 한다는 것이 놀랍다.\"), \"\\n\", React.createElement(_components.h2, null, \"Etc\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://evan-moon.github.io/2022/05/07/toss-retrospective/\"\n  }, \"토스에서의 시간을 돌아보며\")), \"\\n\", React.createElement(_components.p, null, \"토스에서 일했던 엔지니어의 회고. 큰 주제는 아래와 같다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"토스가 어떻게 빨리 일할 수 있는가, 토스의 의사 결정 구조와 방식\"), \"\\n\", React.createElement(_components.li, null, \"급성장한 프론트엔드 엔지니어 그룹을 이끌기 위한 여러가지 시도와 일화\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"읽어 볼만한 글이다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2022/220724-read-writings/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {title, date, tags, heroImage, heroImageAlt} = data.mdx.frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, title), React.createElement(WrittenDate, null, date), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag))))), !!image && React.createElement(GatsbyImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children), React.createElement(Comments, null));\n};\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n  }\\n\"])));\nconst WrittenDate = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst Tags = styled.ul(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px\\n      \", \"px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.spacing, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"3533977744\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","a","p","code","ul","li","strong","em","_provideComponents","components","React","href","_templateObject","_templateObject2","_templateObject3","wrapper","MDXLayout","PostDetailPage","_ref","data","children","title","date","tags","heroImage","heroImageAlt","mdx","frontmatter","image","getImage","Layout","Header","WrittenDate","Tags","map","tag","key","Link","to","GatsbyImage","alt","MdxContent","Comments","styled","_taggedTemplateLiteralLoose","theme","dimens","gutter","spacing","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","slug","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}