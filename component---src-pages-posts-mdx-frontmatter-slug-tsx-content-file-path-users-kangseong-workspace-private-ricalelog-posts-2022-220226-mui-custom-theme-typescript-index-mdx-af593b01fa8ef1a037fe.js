"use strict";(self.webpackChunkricalelog=self.webpackChunkricalelog||[]).push([[1348],{1205:function(n,a,e){e.r(a),e.d(a,{Head:function(){return T},default:function(){return A}});var s=e(1151),t=e(7294);function o(n){const a=Object.assign({div:"div",p:"p",a:"a",h3:"h3",ul:"ul",li:"li",h2:"h2",button:"button",code:"code"},(0,s.ah)(),n.components);return t.createElement(t.Fragment,null,t.createElement(a.div,{className:"md"},t.createElement(a.p,null,"타입스크립트 환경에서 ",t.createElement(a.a,{href:"https://mui.com/"},"MUI")," 의 테마에 필드를 추가하려면 타입스크립트 또한 추가적인 타입 선언이 필요하다. 어떻게 하면 되는지 유형별로 간단히 살펴보자."),t.createElement(a.h3,{id:"references",style:{position:"relative"}},t.createElement(a.a,{href:"#references","aria-label":"references permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"References"),t.createElement(a.ul,null,"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"https://mui.com/getting-started/installation/"},"MUI Docs"),"\n",t.createElement(a.ul,null,"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"https://mui.com/customization/theming/#custom-variables"},"Theming - Custom variables")),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"https://mui.com/customization/palette/#adding-new-colors"},"Palette - Adding new colors")),"\n"),"\n"),"\n",t.createElement(a.li,null,"StackOverflow ",t.createElement(a.a,{href:"https://stackoverflow.com/questions/66080451/add-property-to-background-prop-in-createmuitheme-in-material-ui-using-typescrip"},"Add property to background prop in createMuiTheme in Material-UI using Typescript")),"\n",t.createElement(a.li,null,"GitHub ",t.createElement(a.a,{href:"https://github.com/mui/material-ui"},"mui/material-ui")," - ",t.createElement(a.a,{href:"https://github.com/mui/material-ui/blob/master/packages/mui-material/src/styles/createPalette.d.ts"},"createPalette.d.ts")),"\n"),t.createElement(a.h2,{id:"1-테마에-커스텀-필드-추가",style:{position:"relative"}},t.createElement(a.a,{href:"#1-%ED%85%8C%EB%A7%88%EC%97%90-%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%95%84%EB%93%9C-%EC%B6%94%EA%B0%80","aria-label":"1 테마에 커스텀 필드 추가 permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"1. 테마에 커스텀 필드 추가"),t.createElement(a.p,null,"테마에 기존에 존재하지 않는 새로운 필드를 추가할 수 있다."),t.createElement(a.div,{className:"codeblock-container"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  status<span class="token operator">:</span> <span class="token punctuation">{</span>\n    danger<span class="token operator">:</span> orange<span class="token punctuation">[</span><span class="token number">500</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),t.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),t.createElement(a.p,null,"이것을 위한 타입스크립트 타입 선언은 경우에는 아래처럼 해주면 된다."),t.createElement(a.div,{className:"codeblock-container"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">"@mui/material/styles"</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">Theme</span> <span class="token punctuation">{</span>\n    status<span class="token operator">:</span> <span class="token punctuation">{</span>\n      danger<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">interface</span> <span class="token class-name">ThemeOptions</span> <span class="token punctuation">{</span>\n    status<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      danger<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),t.createElement(a.h2,{id:"2-테마-palette-에-커스텀-필드-추가",style:{position:"relative"}},t.createElement(a.a,{href:"#2-%ED%85%8C%EB%A7%88-palette-%EC%97%90-%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%95%84%EB%93%9C-%EC%B6%94%EA%B0%80","aria-label":"2 테마 palette 에 커스텀 필드 추가 permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2. 테마 Palette 에 커스텀 필드 추가"),t.createElement(a.p,null,"테마의 palatte 에 색상을 추가하면 ",t.createElement(a.code,null,"color"),", ",t.createElement(a.code,null,"sx")," prop 등에서 이름만으로 색상을 지정할 수 있게 된다. 아래 코드처럼 ",t.createElement(a.code,null,"palette.neutral"),"을 추가한다면,"),t.createElement(a.div,{className:"codeblock-container"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token keyword">const</span> theme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  palette<span class="token operator">:</span> <span class="token punctuation">{</span>\n    neutral<span class="token operator">:</span> <span class="token punctuation">{</span>\n      main<span class="token operator">:</span> <span class="token string">"#64748B"</span><span class="token punctuation">,</span>\n      contrastText<span class="token operator">:</span> <span class="token string">"#fff"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),t.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),t.createElement(a.p,null,"타입스크립트는 아래처럼 해주면 된다."),t.createElement(a.div,{className:"codeblock-container"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">"@mui/material/styles"</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">Palette</span> <span class="token punctuation">{</span>\n    neutral<span class="token operator">:</span> Palette<span class="token punctuation">[</span><span class="token string">"primary"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">interface</span> <span class="token class-name">PaletteOptions</span> <span class="token punctuation">{</span>\n    neutral<span class="token operator">:</span> PaletteOptions<span class="token punctuation">[</span><span class="token string">"primary"</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),t.createElement(a.p,null,"이걸로 끝이면 좋겠지만, 특정 컴포넌트의 ",t.createElement(a.code,null,"color")," 속성에서도 위에서 추가한 색상을 쓰고 싶다면, 해당 컴포넌트에 관한 타입 추가 선언을 해주어야 한다."),t.createElement(a.div,{className:"codeblock-container"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token comment">// Button 의 color prop 에서 neutral 을 쓰고 싶을 경우</span>\n<span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">"@mui/material/Button"</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">ButtonPropsColorOverrides</span> <span class="token punctuation">{</span>\n    neutral<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),t.createElement(a.h2,{id:"3-테마-palette-의-특정-색상에-필드-추가",style:{position:"relative"}},t.createElement(a.a,{href:"#3-%ED%85%8C%EB%A7%88-palette-%EC%9D%98-%ED%8A%B9%EC%A0%95-%EC%83%89%EC%83%81%EC%97%90-%ED%95%84%EB%93%9C-%EC%B6%94%EA%B0%80","aria-label":"3 테마 palette 의 특정 색상에 필드 추가 permalink",className:"anchor before"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3. 테마 Palette 의 특정 색상에 필드 추가"),t.createElement(a.p,null,"Palette 의 특정 색상에 필드를 추가하고 싶을 수 있다. 아래는 ",t.createElement(a.code,null,"palette.primary.darker"),", ",t.createElement(a.code,null,"palette.background.contrastText")," 를 추가했다."),t.createElement(a.div,{className:"codeblock-container"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token keyword">const</span> normalTheme <span class="token operator">=</span> <span class="token function">createTheme</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  palette<span class="token operator">:</span> <span class="token punctuation">{</span>\n    primary<span class="token operator">:</span> <span class="token punctuation">{</span>\n      main<span class="token operator">:</span> <span class="token string">"#0971f1"</span><span class="token punctuation">,</span>\n      darker<span class="token operator">:</span> <span class="token string">"#053e85"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    background<span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">"#E4E7EB"</span><span class="token punctuation">,</span>\n      contrastText<span class="token operator">:</span> <span class="token string">"#000000"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),t.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),t.createElement(a.p,null,"속성을 추가하려는 색상이 ",t.createElement(a.code,null,"primary"),", ",t.createElement(a.code,null,"secondary"),", ",t.createElement(a.code,null,"error"),", ",t.createElement(a.code,null,"warning"),", ",t.createElement(a.code,null,"info"),", ",t.createElement(a.code,null,"success")," 중 하나라면, 이 색상들은 타입을 공유하기 때문에 아래처럼 타입을 지정하면 된다."),t.createElement(a.div,{className:"codeblock-container"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">"@mui/material/styles"</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">PaletteColor</span> <span class="token punctuation">{</span>\n    darker<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">interface</span> <span class="token class-name">SimplePaletteColorOptions</span> <span class="token punctuation">{</span>\n    darker<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),t.createElement(a.p,null,"하지만 ",t.createElement(a.code,null,"background")," 의 경우 다른 타입을 사용하므로 아래처럼 해주어야 한다."),t.createElement(a.div,{className:"codeblock-container"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token keyword">declare</span> <span class="token keyword">module</span> <span class="token string">"@mui/material/styles/createPalette"</span> <span class="token punctuation">{</span>\n  <span class="token keyword">interface</span> <span class="token class-name">TypeBackground</span> <span class="token punctuation">{</span>\n    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    paper<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    contrastText<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),t.createElement(a.p,null,"어떤 색상이 어떤 타입을 사용하는지 알고 싶다면 ",t.createElement(a.a,{href:"https://github.com/mui/material-ui/blob/master/packages/mui-material/src/styles/createPalette.d.ts"},"createPalette.d.ts")," 코드를 보면 된다. 아래처럼 나와있으니 참고해서 타입 지정을 해주면 된다."),t.createElement(a.div,{className:"codeblock-container"},t.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">PaletteOptions</span> <span class="token punctuation">{</span>\n  primary<span class="token operator">?</span><span class="token operator">:</span> PaletteColorOptions<span class="token punctuation">;</span>\n  secondary<span class="token operator">?</span><span class="token operator">:</span> PaletteColorOptions<span class="token punctuation">;</span>\n  error<span class="token operator">?</span><span class="token operator">:</span> PaletteColorOptions<span class="token punctuation">;</span>\n  warning<span class="token operator">?</span><span class="token operator">:</span> PaletteColorOptions<span class="token punctuation">;</span>\n  info<span class="token operator">?</span><span class="token operator">:</span> PaletteColorOptions<span class="token punctuation">;</span>\n  success<span class="token operator">?</span><span class="token operator">:</span> PaletteColorOptions<span class="token punctuation">;</span>\n  mode<span class="token operator">?</span><span class="token operator">:</span> PaletteMode<span class="token punctuation">;</span>\n  tonalOffset<span class="token operator">?</span><span class="token operator">:</span> PaletteTonalOffset<span class="token punctuation">;</span>\n  contrastThreshold<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n  common<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>CommonColors<span class="token operator">></span><span class="token punctuation">;</span>\n  grey<span class="token operator">?</span><span class="token operator">:</span> ColorPartial<span class="token punctuation">;</span>\n  text<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>TypeText<span class="token operator">></span><span class="token punctuation">;</span>\n  divider<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n  action<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>TypeAction<span class="token operator">></span><span class="token punctuation">;</span>\n  background<span class="token operator">?</span><span class="token operator">:</span> Partial<span class="token operator">&lt;</span>TypeBackground<span class="token operator">></span><span class="token punctuation">;</span>\n  getContrastText<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>background<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),t.createElement(a.button,{className:"codeblock-copy-button"},"COPY"))),"\n",t.createElement(a.div,{className:"toc"},t.createElement(a.p,null,"목차"),t.createElement(a.ul,null,"\n",t.createElement(a.li,null,"\n",t.createElement(a.ul,null,"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#references"},"References")),"\n"),"\n"),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#1-%ED%85%8C%EB%A7%88%EC%97%90-%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%95%84%EB%93%9C-%EC%B6%94%EA%B0%80"},"1. 테마에 커스텀 필드 추가")),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#2-%ED%85%8C%EB%A7%88-palette-%EC%97%90-%EC%BB%A4%EC%8A%A4%ED%85%80-%ED%95%84%EB%93%9C-%EC%B6%94%EA%B0%80"},"2. 테마 Palette 에 커스텀 필드 추가")),"\n",t.createElement(a.li,null,t.createElement(a.a,{href:"#3-%ED%85%8C%EB%A7%88-palette-%EC%9D%98-%ED%8A%B9%EC%A0%95-%EC%83%89%EC%83%81%EC%97%90-%ED%95%84%EB%93%9C-%EC%B6%94%EA%B0%80"},"3. 테마 Palette 의 특정 색상에 필드 추가")),"\n")))}var p,l,c,r=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,s.ah)(),n.components);return a?t.createElement(a,n,t.createElement(o,n)):o(n)},u=e(1880),i=e(1883),k=e(3723),m=e(6758),d=e(3904),g=e(891),E=e(6120),h=e(5777),b=e(7178),v=e(2889),y=e(5924),f=e(7466);function C(n){let{data:a,children:e}=n;const s=t.useRef(),{frontmatter:o,sameSeriesPosts:p}=a.mdx,{title:l,slug:c,date:r,tags:u,series:k,heroImage:d,heroImageAlt:g}=o;return t.useEffect((()=>{var n;const a=null===(n=s.current)||void 0===n?void 0:n.querySelectorAll(".md h1, .md h2, .md h3, .md h4, .md h5, .md h6"),e=new IntersectionObserver((()=>(0,y.Z)(s,a)),{rootMargin:"0px 0px -90% 0px",threshold:[0,1]});return null==a||a.forEach((n=>e.observe(n))),()=>e.disconnect()}),[]),t.createElement(m.Z,null,t.createElement(w,null,t.createElement("h1",null,t.createElement(i.Link,{to:"/posts/"+c},l)),t.createElement(B,null,r),t.createElement(v.Z,{tags:u})),t.createElement(b.Z,{name:k,data:p,current:c}),t.createElement(f.Z,{data:d,alt:g}),t.createElement(P,{ref:s},e),t.createElement(h.Z,null))}const w=g.ZP.div(p||(p=(0,u.Z)(["\n  margin: 60px 0 72px;\n  padding: 0 24px;\n\n  & > h1 {\n    font-size: 2.5rem;\n    word-break: keep-all;\n    margin: 0;\n\n    > a {\n      color: ",";\n    }\n  }\n"])),(n=>n.theme.colors.onBackground)),B=g.ZP.div(l||(l=(0,u.Z)(["\n  margin: 16px 0;\n"]))),P=(0,g.ZP)(E.Z)(c||(c=(0,u.Z)(["\n  margin-bottom: 60px;\n"]))),T=n=>{var a,e;let{data:s}=n;const{frontmatter:{title:o,slug:p,tags:l,heroImage:c,previewContent:r},excerpt:u}=s.mdx,i=c?(0,k.c)(c):null;return t.createElement(d.Z,{title:o,description:null!=r?r:u,path:"posts/"+p,thumbnail:null==i||null===(a=i.images)||void 0===a||null===(e=a.fallback)||void 0===e?void 0:e.src,keywords:l,ogType:"article"})};function A(n){return t.createElement(C,n,t.createElement(r,n))}}}]);
//# sourceMappingURL=component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2022-220226-mui-custom-theme-typescript-index-mdx-af593b01fa8ef1a037fe.js.map