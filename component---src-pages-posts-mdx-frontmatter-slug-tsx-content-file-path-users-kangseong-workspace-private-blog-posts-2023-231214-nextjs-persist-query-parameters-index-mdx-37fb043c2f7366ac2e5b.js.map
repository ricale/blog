{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-blog-posts-2023-231214-nextjs-persist-query-parameters-index-mdx-37fb043c2f7366ac2e5b.js","mappings":"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","sources":["webpack://ricalelog/./posts/2023/231214-nextjs-persist-query-parameters/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    code: \"code\",\n    button: \"button\",\n    ol: \"ol\",\n    li: \"li\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.div, {\n    className: \"md\"\n  }, React.createElement(_components.h2, {\n    id: \"요구사항\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD\",\n    \"aria-label\": \"요구사항 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"요구사항\"), React.createElement(_components.p, null, \"Next.js 웹앱에서 특정 쿼리 파라미터의 값을 페이지 이동 시에도 유지하고 싶다는 요청을 받았다.\"), React.createElement(_components.p, null, \"예를 들어 아래처럼 Next.js 웹앱에 접근한다면\"), React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">http://localhost:3000/main?experiment=someSpec</code></pre></div>\"\n    }\n  }), React.createElement(_components.p, null, \"앱 내 다른 페이지로 이동해도 \", React.createElement(_components.code, null, \"experiment\"), \" 쿼리 파라미터의 값은 유지하고 싶다는 것이다.\"), React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">http://localhost:3000/anotherPage?experiment=someSpec</code></pre></div>\"\n    }\n  }), React.createElement(_components.h2, {\n    id: \"간단한-방법\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%B0%A9%EB%B2%95\",\n    \"aria-label\": \"간단한 방법 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"간단한 방법\"), React.createElement(_components.p, null, \"간단하게 생각할 수 있는 방법으로는 next/router 의 \", React.createElement(_components.a, {\n    href: \"https://nextjs.org/docs/pages/api-reference/functions/use-router\"\n  }, React.createElement(_components.code, null, \"useRouter()\")), \" 와 next/link 의 \", React.createElement(_components.a, {\n    href: \"https://nextjs.org/docs/pages/api-reference/components/link\"\n  }, React.createElement(_components.code, null, \"<Link />\")), \" 를 한 번 래핑해서 사용하는 것이 있다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">// `useRouter()` 래핑 예시</span>\\n\\n<span class=\\\"token keyword\\\">const</span> persistKeys <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"experiment\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">useMyRouter</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> router <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRouter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function-variable function\\\">push</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> query<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>props <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> queryWithPersistKeys <span class=\\\"token operator\\\">=</span> persistKeys<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reduce</span><span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token punctuation\\\">(</span>acc<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token operator\\\">...</span>acc<span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">:</span> router<span class=\\\"token punctuation\\\">.</span>query<span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span>query <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n      router<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> query<span class=\\\"token operator\\\">:</span> queryWithPersistKeys<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>props <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">// `&lt;Link />` 래핑 예시</span>\\n\\n<span class=\\\"token keyword\\\">const</span> persistKeys <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"experiment\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">MyLink</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> href<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">...</span>props <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> router <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRouter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>pathname<span class=\\\"token punctuation\\\">,</span> queryString<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> href<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">split</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"?\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> searchParams <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">URLSearchParams</span><span class=\\\"token punctuation\\\">(</span>query<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  persistKeys<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    searchParams<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">set</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">,</span> router<span class=\\\"token punctuation\\\">.</span>query<span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> hrefWithQuery <span class=\\\"token operator\\\">=</span>\\n    searchParams<span class=\\\"token punctuation\\\">.</span>size <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>pathname<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">?</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>searchParams<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span> <span class=\\\"token operator\\\">:</span> pathname<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Link</span></span> <span class=\\\"token attr-name\\\">href</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>hrefWithQuery<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>props<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, React.createElement(_components.code, null, \"useRouter()\"), \" 대신 \", React.createElement(_components.code, null, \"useMyRouter()\"), \" 를, \", React.createElement(_components.code, null, \"<Link />\"), \" 대신에 \", React.createElement(_components.code, null, \"<MyLink />\"), \" 를 사용한다면 페이지 이동 시에도 원하는 쿼리 파라미터의 값을 유지시킬 수 있을 것이다.\"), React.createElement(_components.h2, {\n    id: \"간단한-방법의-이슈\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%B0%A9%EB%B2%95%EC%9D%98-%EC%9D%B4%EC%8A%88\",\n    \"aria-label\": \"간단한 방법의 이슈 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"\\\"간단한 방법\\\"의 이슈\"), React.createElement(_components.p, null, \"하지만 이 방식에는 몇 가지 이슈가 있다.\"), React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"이미 \", React.createElement(_components.code, null, \"useRouter()\"), \" 와 \", React.createElement(_components.code, null, \"<Link />\"), \" 를 래핑하지 않은 채로 많은 곳에서 사용하고 있다면, 일일이 찾아 바꾸기에는 너무 번거롭다.\"), \"\\n\", React.createElement(_components.li, null, \"외부 라이브러리 중 \", React.createElement(_components.code, null, \"useRouter()\"), \", \", React.createElement(_components.code, null, \"<Link />\"), \" 를 내부적으로 사용하고 있는 라이브러리가 있다면, 그들에 대해서도 라이브러리 수정 없이 대응할 수 있어야 한다.\"), \"\\n\", React.createElement(_components.li, null, \"혹시라도 팀원 중 한명이 래핑한 \", React.createElement(_components.code, null, \"useMyRouter()\"), \", \", React.createElement(_components.code, null, \"<MyLink />\"), \" 가 아니라 실수로 \", React.createElement(_components.code, null, \"useRouter()\"), \", \", React.createElement(_components.code, null, \"<Link />\"), \" 를 사용한다면, 래핑한 훅/컴포넌트의 로직은 무용지물이 된다.\"), \"\\n\"), React.createElement(_components.h2, {\n    id: \"더-좋은-방법\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%8D%94-%EC%A2%8B%EC%9D%80-%EB%B0%A9%EB%B2%95\",\n    \"aria-label\": \"더 좋은 방법 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"더 좋은 방법\"), React.createElement(_components.p, null, \"그렇다면 이 약점들을 극복하기 위한 방법은 무엇이 있을까? 바로 \", React.createElement(_components.a, {\n    href: \"https://nextjs.org/docs/pages/api-reference/functions/use-router#routerevents\"\n  }, \"next/router 의 이벤트 리스너\"), \"를 사용하는 것이다. next/router 에는 아래와 같은 이벤트 리스너들이 있다.\"), React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"routeChangeStart(url, { shallow })\"), \" - Fires when a route starts to change\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"routeChangeComplete(url, { shallow })\"), \" - Fires when a route changed completely\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"routeChangeError(err, url, { shallow })\"), \" - Fires when there's an error when changing routes, or a route load is cancelled\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"err.cancelled\"), \" - Indicates if the navigation was cancelled\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"beforeHistoryChange(url, { shallow })\"), \" - Fires before changing the browser's history\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"hashChangeStart(url, { shallow })\"), \" - Fires when the hash will change but not the page\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"hashChangeComplete(url, { shallow })\"), \" - Fires when the hash has changed but not the page\"), \"\\n\"), \"\\n\"), React.createElement(_components.p, null, \"이 중 \", React.createElement(_components.code, null, \"routeChangeStart\"), \" 가 우리가 하고자 하는 일에 적합한 리스너이다.\"), React.createElement(_components.p, null, \"문서에는 자세히 적혀있지 않지만 \", React.createElement(_components.code, null, \"routeChangeStart\"), \" 내에서 페이지 이동 함수 (예를 들면 \", React.createElement(_components.code, null, \"router.push()\"), \") 를 실행하면 기존 페이지 이동은 \", React.createElement(_components.em, null, \"취소\"), \"되고 새로 실행된 페이지 이동 함수의 페이지 이동만 적용된다.\"), React.createElement(_components.p, null, \"즉 페이지 이동 직전에 현재 유지하고 싶은 쿼리 파라미터가 있는지 확인하고, 있다면 기존 이동 대신 해당 쿼리 파라미터를 포함한 새로운 이동을 실행하면 되는 것이다. (없다면 기존의 페이지 이동이 실행되도록 그냥 넘어간다.)\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">// routeChangeStart 리스너 사용 예시</span>\\n\\n<span class=\\\"token keyword\\\">const</span> persistKeys <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"experiment\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">usePersistQueryParameters</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> router <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">useRouter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">useEffect</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">routeChangeStart</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>url<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">const</span> persistQuery <span class=\\\"token operator\\\">=</span> persistKeys<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reduce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>acc<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> value <span class=\\\"token operator\\\">=</span> router<span class=\\\"token punctuation\\\">.</span>query<span class=\\\"token punctuation\\\">[</span>name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>value <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token operator\\\">!</span>url<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">match</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">[?&amp;]</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>name<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">=</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          acc<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span>name<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">return</span> acc<span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n      <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>persistQuery<span class=\\\"token punctuation\\\">.</span>length <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>pathname<span class=\\\"token punctuation\\\">,</span> query<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> url<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">split</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"?\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token keyword\\\">const</span> searchParams <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">URLSearchParams</span><span class=\\\"token punctuation\\\">(</span>query<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">for</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token keyword\\\">of</span> persistQuery<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          searchParams<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">set</span><span class=\\\"token punctuation\\\">(</span>key<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        router<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">push</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n          pathname<span class=\\\"token punctuation\\\">,</span>\\n          query<span class=\\\"token operator\\\">:</span> searchParams<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toString</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    router<span class=\\\"token punctuation\\\">.</span>events<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">on</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"routeChangeStart\\\"</span><span class=\\\"token punctuation\\\">,</span> routeChangeStart<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n      router<span class=\\\"token punctuation\\\">.</span>events<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">off</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"routeChangeStart\\\"</span><span class=\\\"token punctuation\\\">,</span> routeChangeStart<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>router<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"이렇게 하면 \", React.createElement(_components.code, null, \"useMyRouter()\"), \", \", React.createElement(_components.code, null, \"<MyLink />\"), \" 처럼 기존 함수/컴포넌트들을 래핑하지 않고도, 페이지 이동 시에도 원하는 쿼리 파라미터의 값을 유지시킬 수 있다.\"), React.createElement(_components.h2, {\n    id: \"더-좋은-방법의-이슈\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#%EB%8D%94-%EC%A2%8B%EC%9D%80-%EB%B0%A9%EB%B2%95%EC%9D%98-%EC%9D%B4%EC%8A%88\",\n    \"aria-label\": \"더 좋은 방법의 이슈 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"\\\"더 좋은 방법\\\"의 이슈\"), React.createElement(_components.p, null, \"적용해서 사용해봤을 때 특별한 이슈는 없었다.\"), React.createElement(_components.p, null, \"다만 \", React.createElement(_components.code, null, \"routeChangeStart\"), \" 에서 페이지 이동을 취소하고 새로운 페이지 이동을 실행하는 것이 성능 상의 이슈를 불러올 수도 있지 않을까 하는 걱정은 있다.\"), React.createElement(_components.p, null, \"하지만 \\\"페이지 이동 시에도 원하는 쿼리 파라미터의 값 유지\\\" 기능은 실험적인 기능 사용 등 제한된 목적에 대해서만 사용할 계획이므로, 설령 성능 상에 이슈가 있다고 해도 큰 문제는 되지 않을 것이다.\"), React.createElement(_components.p, null, \"당연히 (실험적인 기능 등을 사용할 일이 없는) 일반 사용자에게는 아무런 영향이 없다.\")), \"\\n\", React.createElement(_components.div, {\n    className: \"toc\"\n  }, React.createElement(_components.p, null, \"목차\"), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#%EC%9A%94%EA%B5%AC%EC%82%AC%ED%95%AD\"\n  }, \"요구사항\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%B0%A9%EB%B2%95\"\n  }, \"간단한 방법\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#%EA%B0%84%EB%8B%A8%ED%95%9C-%EB%B0%A9%EB%B2%95%EC%9D%98-%EC%9D%B4%EC%8A%88\"\n  }, \"\\\"간단한 방법\\\"의 이슈\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#%EB%8D%94-%EC%A2%8B%EC%9D%80-%EB%B0%A9%EB%B2%95\"\n  }, \"더 좋은 방법\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#%EB%8D%94-%EC%A2%8B%EC%9D%80-%EB%B0%A9%EB%B2%95%EC%9D%98-%EC%9D%B4%EC%8A%88\"\n  }, \"\\\"더 좋은 방법\\\"의 이슈\")), \"\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/blog/posts/2023/231214-nextjs-persist-query-parameters/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport NearbySeriesPostLinks from \"../../components/NearbySeriesPostLinks\";\nimport Comments from \"../../components/Comments\";\nimport SameSeriesPosts from \"../../components/SameSeriesPosts\";\nimport highlightCurrentHeading from \"../../utils/highlightCurrentHeading\";\nimport ScrollToEndButton from \"../../components/ScrollToEndButton\";\nfunction PostDetailPage(_ref) {\n  let {data, children} = _ref;\n  const ref = React.useRef();\n  const {frontmatter, sameSeriesPosts} = data.mdx;\n  const {title, slug, date, series} = frontmatter;\n  React.useEffect(() => {\n    var _ref$current;\n    const headingElements = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.querySelectorAll(\".md h1, .md h2, .md h3, .md h4, .md h5, .md h6\");\n    const observer = new IntersectionObserver(() => highlightCurrentHeading(ref, headingElements), {\n      rootMargin: \"0px 0px -90% 0px\",\n      threshold: [0, 1.0]\n    });\n    headingElements === null || headingElements === void 0 ? void 0 : headingElements.forEach(element => observer.observe(element));\n    return () => observer.disconnect();\n  }, []);\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, React.createElement(Link, {\n    to: \"/posts/\" + slug\n  }, title)), React.createElement(WrittenDate, null, date)), React.createElement(SameSeriesPosts, {\n    name: series,\n    data: sameSeriesPosts,\n    current: slug\n  }), React.createElement(PostContent, {\n    ref: ref\n  }, children), React.createElement(NearbySeriesPostLinks, {\n    data: sameSeriesPosts,\n    current: slug\n  }), React.createElement(ScrollToEndButton, null), React.createElement(Comments, null));\n}\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 72px 0 84px;\\n  padding: 0 32px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n\\n    > a {\\n      color: \", \";\\n    }\\n  }\\n\"])), p => p.theme.colors.onBackground);\nconst WrittenDate = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-left: 2px;\\n\"])));\nconst PostContent = styled(MdxContent)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 120px;\\n\"])));\nconst query = \"2677585968\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage, previewContent}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: previewContent !== null && previewContent !== void 0 ? previewContent : excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","div","h2","a","p","code","button","ol","li","blockquote","ul","em","_provideComponents","components","React","className","id","style","position","href","dangerouslySetInnerHTML","__html","_templateObject","_templateObject2","_templateObject3","wrapper","MDXLayout","PostDetailPage","_ref","data","children","ref","frontmatter","sameSeriesPosts","mdx","title","slug","date","series","_ref$current","headingElements","current","querySelectorAll","observer","IntersectionObserver","highlightCurrentHeading","rootMargin","threshold","forEach","element","observe","disconnect","Layout","Header","Link","to","WrittenDate","SameSeriesPosts","name","PostContent","NearbySeriesPostLinks","ScrollToEndButton","Comments","styled","_taggedTemplateLiteralLoose","theme","colors","onBackground","MdxContent","Head","_ref2","_image$images","_image$images$fallbac","tags","heroImage","previewContent","excerpt","image","getImage","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}