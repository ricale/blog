{"version":3,"file":"component---src-pages-series-index-tsx-cb5733088e385847e57d.js","mappings":"qJAoBA,MAAMA,EAAYC,EAAAA,GAAAA,IAAU,iIAStBC,EAAWD,EAAAA,GAAAA,EAAQ,sBAEnBE,EAAWF,EAAAA,GAAAA,IAAU,gOAerBG,EAAOH,EAAAA,GAAAA,EAAQ,wEAKrB,IA3CA,SAAwB,GAAiD,IAAjD,MAAEI,EAAK,SAAEC,EAAQ,KAAEC,GAA2B,EACpE,OACEC,EAAAA,cAACR,EAAS,OACLM,GAAYE,EAAAA,cAACN,EAAQ,KAAEI,GAC1BE,EAAAA,cAACL,EAAQ,KACPK,EAAAA,cAAAA,KAAAA,KAAKH,KACFE,GAAQC,EAAAA,cAACJ,EAAI,SAAMG,EAAI,MAIlC,C,2LCqBA,MAAMP,EAAYC,EAAAA,QAAAA,IAAAA,WAAU,qEAAVA,CAAU,8FAUtBQ,EAAmBR,EAAAA,QAAAA,IAAAA,WAAU,4EAAVA,CAAU,wEAQ7BS,GAAiBT,EAAAA,EAAAA,SAAOU,EAAAA,GAAY,qFAAnBV,CAAmB,8CAMpCW,EAAOX,EAAAA,QAAAA,IAAAA,WAAU,gEAAVA,CAAU,sVA+BvB,I,IAAA,EAhFA,SAAwB,GAKC,IALD,WACtBY,EAAU,WACVC,EAAU,KACVC,KACGC,GACiB,EACpB,MAAM,KAAEC,EAAI,UAAEC,EAAS,aAAEC,GAAiBJ,EAAKK,YAEzCC,EAAQH,GAAYI,EAAAA,EAAAA,GAASJ,GAAa,KAEhD,OACEV,EAAAA,cAACR,EAAS,eAACuB,QAAS,KAAMC,EAAAA,EAAAA,UAAS,WAAWX,IAAmBG,GAC/DR,EAAAA,cAACC,EAAgB,OACZY,GAASb,EAAAA,cAACE,EAAc,CAACW,MAAOA,EAAOI,IAAKN,QAAAA,EAAgB,MAEjEX,EAAAA,cAACI,EAAI,KACHJ,EAAAA,cAAAA,KAAAA,KACGK,EAAU,IAAEL,EAAAA,cAAAA,QAAAA,KAAAA,GAAWM,IAE1BN,EAAAA,cAAAA,QAAAA,KAAAA,KAAaS,IAIrB,ECMA,MAAMjB,EAAYC,EAAAA,GAAAA,IAAU,oGAMtByB,GAAOzB,EAAAA,EAAAA,IAAO0B,EAAP1B,CAAsB,2LAYnC,MA1CA,SAAoB,GAAoC,IAAlC2B,KAAMC,GAAyB,EACnD,MAAMD,EAAOC,EACVC,KAAIC,IAAAA,IAAC,MAAEC,KAAUC,GAAI,QAAM,IACvBA,EACHlB,KAAMiB,EAAME,MAAK,CAACC,EAAGC,IACnBA,EAAErB,KAAKK,YAAYiB,aAAaC,cAC9BH,EAAEpB,KAAKK,YAAYiB,gBAErB,GAAGtB,KACN,IACAmB,MAAK,CAACC,EAAGC,IACRA,EAAErB,KAAKK,YAAYiB,aAAaC,cAC9BH,EAAEpB,KAAKK,YAAYiB,gBAGzB,OACE7B,EAAAA,cAACR,EAAS,KACP4B,EAAKE,KAAKG,GACTzB,EAAAA,cAACkB,EAAI,eAACa,IAAKN,EAAGpB,YAAgBoB,MAItC,ECRO,MA0BMO,EAAO,IAAMhC,EAAAA,cAACiC,EAAAA,EAAG,CAACpC,MAAM,WAErC,MArCA,SAAoB,GAAqC,IAArC,KAAEuB,GAAiC,EACrD,OACEpB,EAAAA,cAACkC,EAAAA,EAAM,KACLlC,EAAAA,cAACmC,EAAAA,EAAc,CAACtC,MAAM,QACtBG,EAAAA,cAACoC,EAAU,CAAChB,KAAMA,EAAKiB,OAAOC,QAGpC,C","sources":["webpack://ricalelog/./src/components/ListPageHeader.tsx","webpack://ricalelog/./src/components/SeriesList/SeriesListItem.tsx","webpack://ricalelog/./src/components/SeriesList/index.tsx","webpack://ricalelog/./src/pages/series/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport styled from \"../themes\";\n\ntype ListPageHeaderProps = {\n  title: string;\n  subtitle?: string;\n  note?: string | number;\n};\nfunction ListPageHeader({ title, subtitle, note }: ListPageHeaderProps) {\n  return (\n    <Container>\n      {!!subtitle && <Subtitle>{subtitle}</Subtitle>}\n      <TitleRow>\n        <h1>{title}</h1>\n        {!!note && <Note>{`(${note})`}</Note>}\n      </TitleRow>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin: 40px 0;\n  padding-left: 40px;\n\n  @media (max-width: 414px) {\n    padding-left: 20px;\n  }\n`;\n\nconst Subtitle = styled.p``;\n\nconst TitleRow = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n\n  & > h1 {\n    word-break: keep-all;\n  }\n\n  @media (max-width: 414px) {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n`;\n\nconst Note = styled.p`\n  margin-bottom: 8px;\n  font-size: 0.9375rem;\n`;\n\nexport default ListPageHeader;\n","import * as React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\nimport { navigate } from \"gatsby\";\n\nimport { PostFrontmatter } from \"../../types\";\n\ntype SeriesListItemProps = {\n  fieldValue: string;\n  totalCount: number;\n  node: {\n    frontmatter: Omit<PostFrontmatter, \"slug\" | \"tags\">;\n  };\n};\nfunction SeriesListItem({\n  fieldValue,\n  totalCount,\n  node,\n  ...props\n}: SeriesListItemProps) {\n  const { date, heroImage, heroImageAlt } = node.frontmatter;\n\n  const image = heroImage ? getImage(heroImage) : null;\n\n  return (\n    <Container onClick={() => navigate(`/series/${fieldValue}`)} {...props}>\n      <ThumbnailWrapper>\n        {!!image && <ThumbnailImage image={image} alt={heroImageAlt ?? \"\"} />}\n      </ThumbnailWrapper>\n      <Info>\n        <h3>\n          {fieldValue} <small>{`${totalCount}`}</small>\n        </h3>\n        <small>{`~ ${date}`}</small>\n      </Info>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  position: relative;\n  cursor: pointer;\n  &::after {\n    content: \"\";\n    display: block;\n    padding-bottom: 100%;\n  }\n`;\n\nconst ThumbnailWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  background-color: #222222;\n`;\n\nconst ThumbnailImage = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n`;\n\nconst Info = styled.div`\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  right: 8px;\n  bottom: 8px;\n\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n\n  background-color: rgba(0, 0, 0, 0.6);\n\n  & > h3 {\n    flex: 1;\n    margin: 0 0 4px;\n    word-break: keep-all;\n  }\n  & > small {\n    text-align: right;\n  }\n  & > h3 > small {\n    padding: 2px 4px;\n\n    background-color: rgba(183, 179, 204, 0.6);\n    color: #ffff00;\n    font-size: 0.85rem;\n    font-weight: normal;\n  }\n`;\n\nexport default SeriesListItem;\n","import * as React from \"react\";\n\nimport styled from \"../../themes\";\nimport { PostFrontmatter } from \"../../types\";\nimport SeriesListItem from \"./SeriesListItem\";\n\ntype SeriesListProps = {\n  data: {\n    fieldValue: string;\n    totalCount: number;\n    edges: {\n      node: {\n        frontmatter: Omit<PostFrontmatter, \"slug\" | \"tags\"> & {\n          originalDate: string;\n        };\n      };\n    }[];\n  }[];\n};\nfunction SeriesList({ data: source }: SeriesListProps) {\n  const data = source\n    .map(({ edges, ...sr }) => ({\n      ...sr,\n      node: edges.sort((a, b) =>\n        b.node.frontmatter.originalDate.localeCompare(\n          a.node.frontmatter.originalDate\n        )\n      )[0].node,\n    }))\n    .sort((a, b) =>\n      b.node.frontmatter.originalDate.localeCompare(\n        a.node.frontmatter.originalDate\n      )\n    );\n  return (\n    <Container>\n      {data.map((sr) => (\n        <Item key={sr.fieldValue} {...sr} />\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\nconst Item = styled(SeriesListItem)`\n  width: calc(25% - 12px);\n\n  @media (max-width: 768px) {\n    width: calc(33% - 10px);\n  }\n\n  @media (max-width: 500px) {\n    width: calc(50% - 8px);\n  }\n`;\n\nexport default SeriesList;\n","import * as React from \"react\";\nimport { graphql, PageProps } from \"gatsby\";\n\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport ListPageHeader from \"../../components/ListPageHeader\";\nimport { PostFrontmatter } from \"../../types\";\nimport SeriesList from \"../../components/SeriesList\";\n\ntype SeriesPageData = {\n  allMdx: {\n    group: {\n      fieldValue: string;\n      totalCount: number;\n      edges: {\n        node: {\n          frontmatter: Omit<PostFrontmatter, \"slug\" | \"tags\"> & {\n            originalDate: string;\n          };\n        };\n      }[];\n    }[];\n  };\n};\nfunction SeriesPage({ data }: PageProps<SeriesPageData>) {\n  return (\n    <Layout>\n      <ListPageHeader title=\"시리즈\" />\n      <SeriesList data={data.allMdx.group} />\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query {\n    allMdx(limit: 2000) {\n      group(field: { frontmatter: { series: SELECT } }) {\n        fieldValue\n        totalCount\n        edges {\n          node {\n            frontmatter {\n              title\n              originalDate: date\n              date(formatString: \"YYYY. M. D.\")\n              heroImageAlt\n              heroImage {\n                childImageSharp {\n                  gatsbyImageData\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title=\"시리즈 목록\" />;\n\nexport default SeriesPage;\n"],"names":["Container","styled","Subtitle","TitleRow","Note","title","subtitle","note","React","ThumbnailWrapper","ThumbnailImage","GatsbyImage","Info","fieldValue","totalCount","node","props","date","heroImage","heroImageAlt","frontmatter","image","getImage","onClick","navigate","alt","Item","SeriesListItem","data","source","map","_ref2","edges","sr","sort","a","b","originalDate","localeCompare","key","Head","Seo","Layout","ListPageHeader","SeriesList","allMdx","group"],"sourceRoot":""}