{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2021-210304-auto-update-env-variable-files-index-mdx-04f02dd2e3a3333ee6f6.js","mappings":"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","sources":["webpack://ricalelog/./posts/2021/210304-auto-update-env-variable-files/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    a: \"a\",\n    h3: \"h3\",\n    div: \"div\",\n    code: \"code\",\n    strong: \"strong\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"사고가 발생했다.\"), \"\\n\", React.createElement(_components.p, null, \"어제 배포한 앱에서 발생한 사고였다. 구글 로그인 기능이 동작하지 않았다. 확인해보니 구글 로그인 라이브러리 초기화 시 사용하는 토큰 값이 잘못되어 있었다. 해당 값은 환경 변수에 넣어서 관리하고 있었는데, 빌드한 사람(본인)의 환경 변수 최신화가 제대로 이뤄지지 않았던 것이다. 개발/테스트 환경에서는 해당 값이 문제가 없었기 때문에, 프로덕션 레벨까지 배포되고 나서야 문제를 인지할 수 있었다.\"), \"\\n\", React.createElement(_components.p, null, \"부랴부랴 환경 변수를 최신화해서 앱을 재배포했다. 불행 중 다행으로 아직 사용자가 많지 않은 제품이었기에, 큰 사고로 이어지지는 않았다. 하지만 사고는 사고다. 5인 미만의 작은 팀이라 별다른 도구 없이도 잘 관리할 거라 생각했던 안일함이 사고를 불러왔다. 그리고 이대로라면 앞으로 같은 일이 반복되지 말란 법도 없었다.\"), \"\\n\", React.createElement(_components.p, null, \"그래서 우리는 이 사고의 원인을 근본적으로 해결할 방법을 찾기로 했다.\"), \"\\n\", React.createElement(_components.h2, null, \"현황\"), \"\\n\", React.createElement(_components.p, null, \"우리 앱은 \", React.createElement(_components.a, {\n    href: \"https://github.com/facebook/react-native\"\n  }, \"React Native\"), \"로 구현되었다. 환경변수 사용에는 \", React.createElement(_components.a, {\n    href: \"https://github.com/luggit/react-native-config\"\n  }, \"react-native-config\"), \" 라이브러리를 사용한다.\"), \"\\n\", React.createElement(_components.p, null, \"앱은 안드로이드로만 배포된다. 추후에 iOS에도 앱을 출시할 생각이지만, 당장은 몇몇 사정 때문에 출시하지 않고 있다. (따라서 해결책을 찾을 때는 안드로이드 빌드만 고려할 생각이다. iOS에 대해서는 미래의 자신에게 맡기기로 했다.)\"), \"\\n\", React.createElement(_components.p, null, \"환경 변수(Environment Variables)에는 보통 각 환경마다 다르게 적용되는 상수 값들이 들어 있다. 프로젝트의 성격에 따라 다르겠지만 그 값들에는 DB 접속 정보, 서드 파티 접속 정보 같이 보안상 민감한 정보들도 포함하고 있다. 따라서 환경 변수를 관리하는 파일을 코드 저장소에서 제외하도록 권장되고 있다. (보다 자세한 정보는 \", React.createElement(_components.a, {\n    href: \"https://12factor.net/ko/\"\n  }, \"The Twelve-Factor App\"), \" 의 \", React.createElement(_components.a, {\n    href: \"https://12factor.net/ko/config\"\n  }, \"3번 항목\"), \"을 참고)\"), \"\\n\", React.createElement(_components.p, null, \"권장된 내용처럼 우리도 환경변수 파일들을 모두 코드 저장소에서 제외했다. 그리고 값이 변경될 경우 (인원이 많지 않다 보니) slack 등의 메신저를 통해 값을 주고 받아 각자 최신화를 해왔다.\"), \"\\n\", React.createElement(_components.p, null, \"팀원들 모두 이것이 문제라고 인지하고는 있었지만, 당장은 고치지 않아도 된다고 생각하고 있었다.\"), \"\\n\", React.createElement(_components.h2, null, \"어떻게 해결해야 할까?\"), \"\\n\", React.createElement(_components.p, null, \"첫번째 방법으로는 툴을 쓰는 것이다. \", React.createElement(_components.a, {\n    href: \"https://www.vaultproject.io/\"\n  }, \"Vault\"), \"가 가장 널리 쓰이는 툴인 듯 하다. \", React.createElement(_components.a, {\n    href: \"https://www.envkey.com/\"\n  }, \"EnvKey\"), \", \", React.createElement(_components.a, {\n    href: \"https://envault.dev/\"\n  }, \"Envault\"), \" 등의 대체제들도 눈에 띈다.\"), \"\\n\", React.createElement(_components.p, null, \"하지만 일단 툴은 사용하지 않는다. 급박하게 돌아가고 있는 현재 스프린트에 최대한 지장을 주지 않는 선에서 빠르게 적용해야 하기 때문이다. 더군다나 보안과 관련된 툴을 급하게 적용하고 싶지는 않다.\"), \"\\n\", React.createElement(_components.p, null, \"두번째 방법은 비공개 코드 저장소를 활용하는 것이다. 이미 익숙한 툴이고, 쉘스크립트를 통해 자동화하기도 쉽다.\"), \"\\n\", React.createElement(_components.h3, null, \"비공개 코드 저장소\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/\"\n  }, \"github\"), \"을 사용했다. 프로젝트의 루트 디렉토리에 환경변수 파일을 모두 저장했다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">.\\n+-- .env\\n+-- .env.dev\\n+-- .env.staging\\n+-- .env.production</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"쉘스크립트\"), \"\\n\", React.createElement(_components.p, null, \"빌드 전에 환경 변수 파일들을 다운로드 받는다. 정확히는 위에서 만든 코드 저장소에서 clone 혹은 pull 로 코드를 받아온다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># $1에는 dev/staging/production 등 환경 이름이 들어간다.</span>\\n<span class=\\\"token assign-left variable\\\">ENVFILE_PATH</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"./env/.env.<span class=\\\"token variable\\\">$1</span>\\\"</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">[</span> <span class=\\\"token parameter variable\\\">-f</span> <span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\">$ENVFILE_PATH</span>\\\"</span> <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token keyword\\\">then</span>\\n  <span class=\\\"token comment\\\"># 파일이 존재하면 코드 저장소로부터 파일을 업데이트한다.</span>\\n  <span class=\\\"token builtin class-name\\\">cd</span> <span class=\\\"token function\\\">env</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token function\\\">git</span> checkout master <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token function\\\">git</span> pull origin master <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token builtin class-name\\\">cd</span> <span class=\\\"token punctuation\\\">..</span>/\\n<span class=\\\"token keyword\\\">else</span>\\n  <span class=\\\"token comment\\\"># 파일이 존재하지 않으면 코드 저장소로부터 파일을 다운로드 받는다.</span>\\n  <span class=\\\"token function\\\">git</span> clone https://github.com/OWNER/PROJECT.git ./env\\n<span class=\\\"token keyword\\\">fi</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"(당연하지만 \", React.createElement(_components.code, null, \"ENVFILE_PATH\"), \"로 사용된 경로 및 파일은 \", React.createElement(_components.code, null, \".gitignore\"), \"에 포함되어 있어야 한다.)\"), \"\\n\", React.createElement(_components.p, null, \"그다음에는 안드로이드 빌드 명령어를 실행한다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token comment\\\"># $2에는 assembleReleasedev 등 안드로이드 빌드 시 쓰이는 빌드 타입이 들어간다.</span>\\n<span class=\\\"token builtin class-name\\\">cd</span> ./android <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token assign-left variable\\\">ENVFILE</span><span class=\\\"token operator\\\">=</span>env/.env.<span class=\\\"token variable\\\">$1</span> ./gradlew <span class=\\\"token variable\\\">$2</span> <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token builtin class-name\\\">cd</span> <span class=\\\"token punctuation\\\">..</span>/</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"보너스로 빌드가 완료되면 자동으로 폴더를 열어주자.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token assign-left variable\\\">BUILD_DIR</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"<span class=\\\"token variable\\\"><span class=\\\"token variable\\\">$(</span><span class=\\\"token builtin class-name\\\">echo</span> $<span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">2</span>:8<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">|</span> <span class=\\\"token function\\\">tr</span> <span class=\\\"token string\\\">'[A-Z]'</span> <span class=\\\"token string\\\">'[a-z]'</span><span class=\\\"token variable\\\">)</span></span>\\\"</span>\\n<span class=\\\"token function\\\">open</span> ./android/app/build/outputs/apk/<span class=\\\"token variable\\\">$BUILD_DIR</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"마지막으로 작성이 완료된 쉘스크립트를 \", React.createElement(_components.code, null, \"package.json\"), \" 에 등록하면 된다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// package.json</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n  <span class=\\\"token string-property property\\\">\\\"scripts\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n    <span class=\\\"token string-property property\\\">\\\"build-android-dev\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"bash scripts/build-android.sh dev assembleReleasedev\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token string-property property\\\">\\\"build-android-staging\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"bash scripts/build-android.sh staging assembleReleasedev\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"이제 빌드 시 위에 등록해둔 명령어를 사용하기만 하면, 환경 변수 파일은 빌드 전에 항상 자동으로 최신화 될 것이다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$ yarn build-android-dev</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"개선할 점\"), \"\\n\", React.createElement(_components.p, null, \"보안 상으로 문제가 있을까봐 앱 코드 저장소에서 제외시킨 환경변수 파일들을 \", React.createElement(_components.strong, null, \"같은 계정이 관리하는 다른 코드 저장소\"), \"로 옮겼다. 결국 해당 계정이 뚫리면 환경변수 파일도 같이 뚫리는 거잖아? 라는 생각을 하지 않을 수 없다. 같은 코드 저장소에 있는 것보다야 당연히 낫겠지만, 하나마나한 짓을 한게 아닌가 하는 생각이 들기도 한다.\"), \"\\n\", React.createElement(_components.p, null, \"다음에는 관련 툴(특히 \", React.createElement(_components.a, {\n    href: \"https://www.vaultproject.io/\"\n  }, \"Vault\"), \")에 대해 자세히 알아봐야 할 것 같다.\"), \"\\n\", React.createElement(_components.h2, null, \"참고 자료\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.reddit.com/r/ruby/comments/7fau96/question_how_does_your_team_manage_environment/\"\n  }, \"reddit.com - Question: How does your team manage environment variables?\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://dev.to/espoir/how-do-you-keep-your-environment-variable-synchronized-among-your-development-team-175a\"\n  }, \"dev.to - How do you keep your environment variable synchronized among your development team.\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.reddit.com/r/devops/comments/c7u29k/managing_env_variables_for_a_small_dev_team/\"\n  }, \"reddit.com - Managing env variables for a small dev team\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.vaultproject.io/\"\n  }, \"Vault\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.envkey.com/\"\n  }, \"EnvKey\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://envault.dev/\"\n  }, \"Envault\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2021/210304-auto-update-env-variable-files/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nimport SameSeriesPosts from \"../../components/SameSeriesPosts\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {frontmatter, sameSeriesPosts} = data.mdx;\n  const {title, slug, date, tags, series, heroImage, heroImageAlt} = frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, title), React.createElement(WrittenDate, null, date), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag))))), React.createElement(SameSeriesPosts, {\n    name: series,\n    data: sameSeriesPosts,\n    current: slug\n  }), !!image && React.createElement(ThumbnailImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children), React.createElement(Comments, null));\n};\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n  }\\n\"])));\nconst ThumbnailImage = styled(GatsbyImage)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 16px;\\n\"])));\nconst WrittenDate = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst Tags = styled.ul(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px\\n      \", \"px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.spacing, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"2677585968\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage, previewContent}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: previewContent !== null && previewContent !== void 0 ? previewContent : excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","a","h3","div","code","strong","ul","li","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","_templateObject","_templateObject2","_templateObject3","_templateObject4","wrapper","MDXLayout","PostDetailPage","_ref","data","children","frontmatter","sameSeriesPosts","mdx","title","slug","date","tags","series","heroImage","heroImageAlt","image","getImage","Layout","Header","WrittenDate","Tags","map","tag","key","Link","to","SameSeriesPosts","name","current","ThumbnailImage","alt","MdxContent","Comments","styled","_taggedTemplateLiteralLoose","GatsbyImage","theme","dimens","gutter","spacing","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","previewContent","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}