{"version":3,"file":"component---src-pages-posts-index-tsx-95f275d3ac64374d70e3.js","mappings":"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","sources":["webpack://ricalelog/./src/components/Layout.tsx","webpack://ricalelog/./src/components/Seo.tsx","webpack://ricalelog/./src/pages/posts/index.tsx","webpack://ricalelog/./src/themes/themedStyledComponents.ts","webpack://ricalelog/./src/themes/normal.ts","webpack://ricalelog/./src/themes/GlobalStyle.ts","webpack://ricalelog/./src/themes/index.ts","webpack://ricalelog/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["import { graphql, Link, useStaticQuery } from \"gatsby\";\nimport * as React from \"react\";\nimport styled, { GlobalStyle, normalTheme, ThemeProvider } from \"../themes\";\n\ntype LayoutProps = {\n  children?: React.ReactNode;\n};\nconst Layout = ({ children }: LayoutProps) => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n  return (\n    <ThemeProvider theme={normalTheme}>\n      <GlobalStyle />\n      <Container>\n        <header>{data.site.siteMetadata.title}</header>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/posts\">posts</Link>\n            </li>\n            <li>\n              <Link to=\"/tags\">tags</Link>\n            </li>\n          </ul>\n        </nav>\n        <main>{children}</main>\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nconst Container = styled.div`\n  max-width: 800px;\n  padding: ${(p) => p.theme.dimens.margin}px;\n`;\nconst BlogHeader = styled.header``;\n\nexport default Layout;\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ntype SeoQueryData = {\n  site: {\n    siteMetadata: {\n      title: string;\n      siteUrl: string;\n    };\n    pathPrefix: string;\n  };\n};\ntype SeoProps = {\n  title?: string;\n  og?: {\n    path: string;\n    type: string;\n    title: string;\n    description: string;\n    image?: string;\n  };\n};\nconst Seo = ({ title, og }: SeoProps) => {\n  const data = useStaticQuery<SeoQueryData>(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          siteUrl\n        }\n        pathPrefix\n      }\n    }\n  `);\n\n  const {\n    siteMetadata: { title: siteTitle, siteUrl },\n    pathPrefix,\n  } = data.site;\n\n  return (\n    <>\n      <title>{title ? `${title} | ${siteTitle}` : siteTitle}</title>\n      {og && (\n        <>\n          <meta\n            property=\"og:url\"\n            content={`${siteUrl}${pathPrefix}/${og.path}`}\n          />\n          <meta property=\"og:type\" content={`${og.type}`} />\n          <meta property=\"og:title\" content={`${og.title}`} />\n          <meta property=\"og:description\" content={`${og.description}`} />\n          {!!og.image && (\n            <meta property=\"og:image\" content={`${siteUrl}${og.image}`} />\n          )}\n\n          <meta property=\"twitter:card\" content=\"summary_large_image\" />\n          <meta property=\"twitter:url\" content={`${siteUrl}/${og.path}`} />\n          <meta property=\"twitter:title\" content={`${og.title}`} />\n          <meta property=\"twitter:description\" content={`${og.description}`} />\n          {!!og.image && (\n            <meta property=\"twitter:image\" content={`${siteUrl}${og.image}`} />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Seo;\n","import * as React from \"react\";\nimport { graphql, Link, PageProps } from \"gatsby\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\n\ntype BlogPageData = {\n  allMdx: {\n    nodes: {\n      frontmatter: {\n        title: string;\n        date: string;\n        slug: string;\n      };\n      id: string;\n      excerpt: string;\n    }[];\n  };\n};\nconst BlogPage = ({ data }: PageProps<BlogPageData>) => {\n  return (\n    <Layout>\n      <p>{data.allMdx.nodes.length}개 글</p>\n      {data.allMdx.nodes.map((node, i) => (\n        <article key={i}>\n          <h2>\n            <Link to={`/posts/${node.frontmatter.slug}`}>\n              {node.frontmatter.title}\n            </Link>\n          </h2>\n          <div>{node.frontmatter.date}</div>\n          <p>{node.excerpt}</p>\n        </article>\n      ))}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query {\n    allMdx(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        frontmatter {\n          title\n          date(formatString: \"YYYY. M. D.\")\n          slug\n        }\n        id\n        excerpt\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo />;\n\nexport default BlogPage;\n","import * as styledComponents from \"styled-components\";\n\nimport { RicalelogTheme } from \"./normal\";\n\nexport const {\n  default: styled,\n  css,\n  keyframes,\n  ThemeProvider,\n  ThemeContext,\n  createGlobalStyle,\n} = styledComponents as unknown as styledComponents.ThemedStyledComponentsModule<RicalelogTheme>;\n","const base = 16;\n\nconst colors = {\n  background: \"black\",\n  onBackground: \"white\",\n\n  codeblock: \"#111111\",\n  onCodeblock: \"white\",\n\n  blockquoteBorder: \"#666666\",\n  blockquote: \"#111111\",\n  onBlockquote: \"white\",\n\n  code: \"#333333\",\n  onCode: \"#DDDDDD\",\n\n  tag: \"#111111\",\n  onTag: \"skyblue\",\n\n  tableBorder: \"white\",\n};\n\nconst normal = {\n  dimens: {\n    bigMargin: base * 2,\n    margin: base * 1,\n    gutter: base * 0.5,\n    spacing: base * 0.25,\n    thin: base * 0.125,\n  },\n  colors,\n};\n\nexport default normal;\nexport type RicalelogTheme = typeof normal;\n","import { createGlobalStyle } from \"./themedStyledComponents\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, #root {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    font-size: 18px;\n    line-height: 180%;\n\n    overflow-x: hidden;\n\n    background-color: ${(p) => p.theme.colors.background};\n    color: ${(p) => p.theme.colors.onBackground};\n  }\n\n  a {\n    color: skyblue;\n  }\n\n  input, button, select {\n    margin: 0;\n    padding: 0;\n    font-size: 16px;\n    appearance: none;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nexport default GlobalStyle;\n","import {\n  styled,\n  css,\n  keyframes,\n  ThemeProvider,\n} from \"./themedStyledComponents\";\n\nexport default styled;\nexport { css, keyframes, ThemeProvider };\n\nexport { default as normalTheme } from \"./normal\";\nexport * from \"./normal\";\nexport { default as GlobalStyle } from \"./GlobalStyle\";\nexport { default as useTheme } from \"./useTheme\";\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}"],"names":["Container","styled","p","theme","dimens","margin","_ref","children","data","useStaticQuery","React","ThemeProvider","normalTheme","GlobalStyle","site","siteMetadata","title","Link","to","og","siteTitle","siteUrl","pathPrefix","property","content","path","type","description","image","Head","Seo","Layout","allMdx","nodes","length","map","node","i","key","frontmatter","slug","date","excerpt","default","css","keyframes","ThemeContext","createGlobalStyle","styledComponents","bigMargin","base","gutter","spacing","thin","colors","background","onBackground","codeblock","onCodeblock","blockquoteBorder","blockquote","onBlockquote","code","onCode","tag","onTag","tableBorder","_taggedTemplateLiteralLoose","strings","raw","slice"],"sourceRoot":""}