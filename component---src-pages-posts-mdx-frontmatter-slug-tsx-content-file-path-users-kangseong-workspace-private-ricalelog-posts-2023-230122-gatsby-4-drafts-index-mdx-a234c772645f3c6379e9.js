"use strict";(self.webpackChunkricalelog=self.webpackChunkricalelog||[]).push([[4653],{6441:function(n,a,s){s.r(a),s.d(a,{Head:function(){return S},default:function(){return H}});var t=s(1151),e=s(7294);function p(n){const a=Object.assign({div:"div",p:"p",a:"a",h1:"h1",h2:"h2",code:"code",button:"button",ul:"ul",li:"li"},(0,t.ah)(),n.components);return e.createElement(e.Fragment,null,e.createElement(a.div,{className:"md"},e.createElement(a.p,null,"이전 글들에서는 Gatsby ",e.createElement(a.a,{href:"https://ricale.kr/blog/posts/230111-gatsby-1/"},"기본 기능을 구현을 위한 튜토리얼을 소개했고 태그 기능을 구현"),"했고, ",e.createElement(a.a,{href:"https://ricale.kr/blog/posts/230112-gatsby-2/"},"MDX 글 안에 인라인 이미지와 테이블을 삽입"),"했으며, ",e.createElement(a.a,{href:"https://ricale.kr/blog/posts/230119-gatsby-3-series/"},"시리즈 기능도 만들어"),"보았다."),e.createElement(a.p,null,"이번에는 임시글 기능을 구현해보자."),e.createElement(a.h1,{id:"1-개요",style:{position:"relative"}},e.createElement(a.a,{href:"#1-%EA%B0%9C%EC%9A%94","aria-label":"1 개요 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"1. 개요"),e.createElement(a.p,null,"임시글은 작성자에게는 보이고 다른 사람들에게는 보이지 않는 비공개 글을 의미한다. Gatsby 에서 기본 제공하는 기능은 아니므로, 약간의 작업이 필요하다."),e.createElement(a.h1,{id:"2-구현",style:{position:"relative"}},e.createElement(a.a,{href:"#2-%EA%B5%AC%ED%98%84","aria-label":"2 구현 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2. 구현"),e.createElement(a.p,null,"먼저 임시글들은 별도의 디렉토리에 모으고, 해당 디렉토리에 있는 글은 개발 환경에서만 보이고 프로덕션 환경에서는 보이지 않도록 할 것이다. 그리고 개발환경에서만 보이는 임시글 목록 페이지도 추가해서 이미 공개된 글들과 목록을 분리할 것이다."),e.createElement(a.h2,{id:"21-개발-환경에서만-보이는-임시글-디렉토리-환경-설정",style:{position:"relative"}},e.createElement(a.a,{href:"#21-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C%EB%A7%8C-%EB%B3%B4%EC%9D%B4%EB%8A%94-%EC%9E%84%EC%8B%9C%EA%B8%80-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95","aria-label":"21 개발 환경에서만 보이는 임시글 디렉토리 환경 설정 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.1. 개발 환경에서만 보이는 임시글 디렉토리 환경 설정"),e.createElement(a.p,null,e.createElement(a.code,null,"gatsby-config.ts")," 에 아래 설정을 추가하자"),e.createElement(a.div,{className:"codeblock-container"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token comment">// gatsby-config.ts</span>\n\n<span class="token comment">// 개발 환경인지 확인하는 플래그</span>\n<span class="token keyword">const</span> isDevelopment <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">"development"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> config<span class="token operator">:</span> GatsbyConfig <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// ...</span>\n    <span class="token comment">// 개발환경이면 "gatsby-source-filesystem" 플러그인으로</span>\n    <span class="token comment">// 임시글 폴더의 파일들도 읽을 수 있도록 적용</span>\n    <span class="token operator">...</span><span class="token punctuation">(</span>isDevelopment\n      <span class="token operator">?</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            resolve<span class="token operator">:</span> <span class="token string">"gatsby-source-filesystem"</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              name<span class="token operator">:</span> <span class="token string">"drafts"</span><span class="token punctuation">,</span>\n              path<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__dirname<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/drafts</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span>\n      <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> config<span class="token punctuation">;</span></code></pre></div>'}}),e.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),e.createElement(a.p,null,"이제 ",e.createElement(a.code,null,"drafts")," 디렉토리에 mdx 파일을 추가하면 Gatsby 가 해당 파일도 GraphQL 쿼리로 읽어올 수 있게 된다. 프로덕션 환경이면 해당 설정이 적용되지 않으므로 ",e.createElement(a.code,null,"npm run deploy")," 를 했을 때는 ",e.createElement(a.code,null,"drafts")," 디렉토리의 글들은 배포되지 않는다."),e.createElement(a.h2,{id:"22-임시글-목록-페이지-구현",style:{position:"relative"}},e.createElement(a.a,{href:"#22-%EC%9E%84%EC%8B%9C%EA%B8%80-%EB%AA%A9%EB%A1%9D-%ED%8E%98%EC%9D%B4%EC%A7%80-%EA%B5%AC%ED%98%84","aria-label":"22 임시글 목록 페이지 구현 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.2. 임시글 목록 페이지 구현"),e.createElement(a.p,null,"아쉽게도 GraphQL 쿼리로는 mdx 파일이 속한 디렉토리까지는 알 수 없다. GraphQL 쿼리로 임시글만 가져오려면 mdx 의 ",e.createElement(a.code,null,"frontmatter")," 영역에 이 글이 임시글이라는 정보를 남겨야 한다."),e.createElement(a.p,null,"임시글을 위한 별도의 플래그를 만드는 방법도 있지만, 여기서는 작성일 필드를 빈 칸으로 두는 방법을 선택했다."),e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">---\ntitle: "React Native 디버거 에러"\ndate: ""\nslug: "react-native-debugger-error"\ntags: ["iOS", "react native", "빌드 에러", "안드로이드", "에러"]\nseries: "React Native 빌드 에러"\n---</code></pre></div>'}}),e.createElement(a.p,null,"기존 글목록 페이지에서 임시글은 가져오지 쿼리를 수정하자."),e.createElement(a.div,{className:"codeblock-container"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="tsx"><pre class="language-tsx"><code class="language-tsx"><span class="token comment">// src/pages/posts/index.tsx</span>\n\n<span class="token comment">//...</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> query <span class="token operator">=</span> graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  query {\n    allMdx(\n      # 아래처럼 filter 를 추가하자\n      filter: { frontmatter: { date: { ne: "" } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      # ...\n    }\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span></code></pre></div>'}}),e.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),e.createElement(a.p,null,"그리고 임시글 목록 페이지를 만들자."),e.createElement(a.div,{className:"codeblock-container"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="tsx"><pre class="language-tsx"><code class="language-tsx"><span class="token comment">// src/pages/drafts/index.tsx</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token keyword">function</span> <span class="token function">DraftsPage</span><span class="token punctuation">(</span><span class="token punctuation">{</span> data <span class="token punctuation">}</span><span class="token operator">:</span> PageProps<span class="token operator">&lt;</span>DraftsPageData<span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> drafts <span class="token operator">=</span> data<span class="token punctuation">.</span>allMdx<span class="token punctuation">.</span>nodes<span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Layout</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ListPageHeader</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>임시글<span class="token punctuation">"</span></span> <span class="token attr-name">note</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>drafts<span class="token punctuation">.</span>length<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">PostList</span></span> <span class="token attr-name">data</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>drafts<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Layout</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> query <span class="token operator">=</span> graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  query {\n    allMdx(\n      filter: { frontmatter: { date: { eq: "" } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      # ...\n    }\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token comment">// ...</span></code></pre></div>'}}),e.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),e.createElement(a.h2,{id:"23-임시글-링크를-메뉴에-추가",style:{position:"relative"}},e.createElement(a.a,{href:"#23-%EC%9E%84%EC%8B%9C%EA%B8%80-%EB%A7%81%ED%81%AC%EB%A5%BC-%EB%A9%94%EB%89%B4%EC%97%90-%EC%B6%94%EA%B0%80","aria-label":"23 임시글 링크를 메뉴에 추가 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.3. 임시글 링크를 메뉴에 추가"),e.createElement(a.p,null,"마지막으로 메뉴 컴포넌트에 (개발환경일 경우) 임시글 링크도 보이도록 추가하자."),e.createElement(a.div,{className:"codeblock-container"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="tsx"><pre class="language-tsx"><code class="language-tsx"><span class="token comment">// src/components/Layout.tsx</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token keyword">const</span> isDevelopment <span class="token operator">=</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">"development"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> menuItems <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">"/posts"</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">"글"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">"/series"</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">"시리즈"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">"/tags"</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">"태그"</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token comment">// 개발 환경일 경우에만 임시글 목록에 보이도록 추가하자.</span>\n  <span class="token operator">...</span><span class="token punctuation">(</span>isDevelopment <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> path<span class="token operator">:</span> <span class="token string">"/drafts"</span><span class="token punctuation">,</span> title<span class="token operator">:</span> <span class="token string">"임시글"</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">Layout</span><span class="token punctuation">(</span><span class="token punctuation">{</span> children <span class="token punctuation">}</span><span class="token operator">:</span> LayoutProps<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">ThemeProvider</span></span> <span class="token attr-name">theme</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>normalTheme<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">GlobalStyle</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Container</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Header</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token punctuation">{</span><span class="token comment">/* ... */</span><span class="token punctuation">}</span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n              </span><span class="token punctuation">{</span>menuItems<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>path<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>path<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n              <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Header</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Container</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">ThemeProvider</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// ...</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> Layout<span class="token punctuation">;</span></code></pre></div>'}}),e.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),e.createElement(a.h2,{id:"24-상세-코드",style:{position:"relative"}},e.createElement(a.a,{href:"#24-%EC%83%81%EC%84%B8-%EC%BD%94%EB%93%9C","aria-label":"24 상세 코드 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.4. 상세 코드"),e.createElement(a.p,null,"위 코드 조각들은 생략된 부분이 있으므로, 코드 전문을 보고 싶다면 아래를 참고하자."),e.createElement(a.ul,null,"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"https://github.com/ricale/blog/blob/23dcb03ea1ceb305a3b73771d2a0962ffd871d5c/gatsby-config.ts"},"gatsby-config.ts")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"https://github.com/ricale/blog/blob/23dcb03ea1ceb305a3b73771d2a0962ffd871d5c/src/pages/posts/index.tsx"},"src/pages/posts/index.tsx")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"https://github.com/ricale/blog/blob/23dcb03ea1ceb305a3b73771d2a0962ffd871d5c/src/pages/drafts/index.tsx"},"src/pages/drafts/index.tsx")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"https://github.com/ricale/blog/blob/23dcb03ea1ceb305a3b73771d2a0962ffd871d5c/src/components/Layout.tsx"},"src/components/Layout.tsx")),"\n"),e.createElement(a.h1,{id:"3-다음",style:{position:"relative"}},e.createElement(a.a,{href:"#3-%EB%8B%A4%EC%9D%8C","aria-label":"3 다음 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3. 다음"),e.createElement(a.p,null,"이로서 시리즈 기능을 구현해보았다. 다음으로 구현 및 정리할 것들은 아래와 같다."),e.createElement(a.ul,null,"\n",e.createElement(a.li,null,"댓글 기능 구현"),"\n",e.createElement(a.li,null,"코드블록 문법 하이라이팅 기능 구현"),"\n",e.createElement(a.li,null,"글의 목차 기능 구현"),"\n",e.createElement(a.li,null,"GitHub Pages 배포"),"\n",e.createElement(a.li,null,"등등"),"\n"),e.createElement(a.p,null,"순서는 미정이다."),e.createElement(a.h1,{id:"4-참고",style:{position:"relative"}},e.createElement(a.a,{href:"#4-%EC%B0%B8%EA%B3%A0","aria-label":"4 참고 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"4. 참고"),e.createElement(a.ul,null,"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"https://clubmate.fi/render-draft-posts-locally"},"Render draft posts locally in Gatsby")),"\n")),"\n",e.createElement(a.div,{className:"toc"},e.createElement(a.p,null,"목차"),e.createElement(a.ul,null,"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#1-%EA%B0%9C%EC%9A%94"},"1. 개요")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#2-%EA%B5%AC%ED%98%84"},"2. 구현"),"\n",e.createElement(a.ul,null,"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#21-%EA%B0%9C%EB%B0%9C-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C%EB%A7%8C-%EB%B3%B4%EC%9D%B4%EB%8A%94-%EC%9E%84%EC%8B%9C%EA%B8%80-%EB%94%94%EB%A0%89%ED%86%A0%EB%A6%AC-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95"},"2.1. 개발 환경에서만 보이는 임시글 디렉토리 환경 설정")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#22-%EC%9E%84%EC%8B%9C%EA%B8%80-%EB%AA%A9%EB%A1%9D-%ED%8E%98%EC%9D%B4%EC%A7%80-%EA%B5%AC%ED%98%84"},"2.2. 임시글 목록 페이지 구현")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#23-%EC%9E%84%EC%8B%9C%EA%B8%80-%EB%A7%81%ED%81%AC%EB%A5%BC-%EB%A9%94%EB%89%B4%EC%97%90-%EC%B6%94%EA%B0%80"},"2.3. 임시글 링크를 메뉴에 추가")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#24-%EC%83%81%EC%84%B8-%EC%BD%94%EB%93%9C"},"2.4. 상세 코드")),"\n"),"\n"),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#3-%EB%8B%A4%EC%9D%8C"},"3. 다음")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#4-%EC%B0%B8%EA%B3%A0"},"4. 참고")),"\n")))}var c,l,o,r=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.ah)(),n.components);return a?e.createElement(a,n,e.createElement(p,n)):p(n)},u=s(1880),i=s(1883),k=s(3723),m=s(6758),d=s(3904),E=s(891),g=s(6120),h=s(5777),v=s(7178),f=s(2889),b=s(5924),C=s(7466);function B(n){let{data:a,children:s}=n;const t=e.useRef(),{frontmatter:p,sameSeriesPosts:c}=a.mdx,{title:l,slug:o,date:r,tags:u,series:k,heroImage:d,heroImageAlt:E}=p;return e.useEffect((()=>{var n;const a=null===(n=t.current)||void 0===n?void 0:n.querySelectorAll(".md h1, .md h2, .md h3, .md h4, .md h5, .md h6"),s=new IntersectionObserver((()=>(0,b.Z)(t,a)),{rootMargin:"0px 0px -90% 0px",threshold:[0,1]});return null==a||a.forEach((n=>s.observe(n))),()=>s.disconnect()}),[]),e.createElement(m.Z,null,e.createElement(y,null,e.createElement("h1",null,e.createElement(i.Link,{to:"/posts/"+o},l)),e.createElement(x,null,r),e.createElement(f.Z,{tags:u})),e.createElement(v.Z,{name:k,data:c,current:o}),e.createElement(C.Z,{data:d,alt:E}),e.createElement(A,{ref:t},s),e.createElement(h.Z,null))}const y=E.ZP.div(c||(c=(0,u.Z)(["\n  margin: 60px 0 72px;\n  padding: 0 24px;\n\n  & > h1 {\n    font-size: 2.5rem;\n    word-break: keep-all;\n    margin: 0;\n\n    > a {\n      color: ",";\n    }\n  }\n"])),(n=>n.theme.colors.onBackground)),x=E.ZP.div(l||(l=(0,u.Z)(["\n  margin: 16px 0;\n"]))),A=(0,E.ZP)(g.Z)(o||(o=(0,u.Z)(["\n  margin-bottom: 60px;\n"]))),S=n=>{var a,s;let{data:t}=n;const{frontmatter:{title:p,slug:c,tags:l,heroImage:o,previewContent:r},excerpt:u}=t.mdx,i=o?(0,k.c)(o):null;return e.createElement(d.Z,{title:p,description:null!=r?r:u,path:"posts/"+c,thumbnail:null==i||null===(a=i.images)||void 0===a||null===(s=a.fallback)||void 0===s?void 0:s.src,keywords:l,ogType:"article"})};function H(n){return e.createElement(B,n,e.createElement(r,n))}}}]);
//# sourceMappingURL=component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2023-230122-gatsby-4-drafts-index-mdx-a234c772645f3c6379e9.js.map