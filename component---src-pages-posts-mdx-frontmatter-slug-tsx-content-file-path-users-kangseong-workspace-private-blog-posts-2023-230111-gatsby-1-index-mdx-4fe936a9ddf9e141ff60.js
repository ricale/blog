"use strict";(self.webpackChunkricalelog=self.webpackChunkricalelog||[]).push([[9429],{7828:function(n,a,s){s.r(a),s.d(a,{Head:function(){return C},default:function(){return D}});var t=s(1151),e=s(7294);function p(n){const a=Object.assign({div:"div",h1:"h1",a:"a",p:"p",ol:"ol",li:"li",ul:"ul",code:"code",h2:"h2",button:"button"},(0,t.ah)(),n.components);return e.createElement(e.Fragment,null,e.createElement(a.div,{className:"md"},e.createElement(a.h1,{id:"0-발단",style:{position:"relative"}},e.createElement(a.a,{href:"#0-%EB%B0%9C%EB%8B%A8","aria-label":"0 발단 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"0. 발단"),e.createElement(a.p,null,"쓰던 블로그 서비스가 안드로이드 모바일에서 광고를 삽입하는 것을 발견했다. (광고는 다시 없어졌다. 아마 운영자의 테스트였던 것 같다.) 개인적으로 개인 개발 블로그에 광고가 들어가는 걸 원치 않으므로 서비스를 바꿔야 겠다는 생각이 들었다. 그리고 그러던 와중에 GitHub Pages 에 정적 페이지 생성 프레임워크로 블로그를 운영하는 것도 괜찮겠다 싶었다."),e.createElement(a.p,null,"Jekyll 과 Gatsby 두 서비스 중 고민하다가 Gatsby 를 선택했다. 자 그러면 천천히 하나씩 적용해보자."),e.createElement(a.h1,{id:"1-프로젝트-기본-구성",style:{position:"relative"}},e.createElement(a.a,{href:"#1-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B8%B0%EB%B3%B8-%EA%B5%AC%EC%84%B1","aria-label":"1 프로젝트 기본 구성 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"1. 프로젝트 기본 구성"),e.createElement(a.p,null,e.createElement(a.a,{href:"https://www.gatsbyjs.com/docs/tutorial/"},"공식 튜토리얼 문서"),"가 잘 정리되어 있다. 튜토리얼에서는 아래 일곱가지 내용을 설명한다."),e.createElement(a.ol,{start:"0"},"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"https://www.gatsbyjs.com/docs/tutorial/part-0/"},"개발 환경 구성하기")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"https://www.gatsbyjs.com/docs/tutorial/part-1/"},"로컬에서 프로젝트 생성 및 실행하고, Gatsby 클라우드에 배포하기")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"https://www.gatsbyjs.com/docs/tutorial/part-2/"},"React 로 페이지 구현하기")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"https://www.gatsbyjs.com/docs/tutorial/part-3/"},"플러그인 적용하기"),"\n",e.createElement(a.ul,null,"\n",e.createElement(a.li,null,"gatsby-plugin-image 플러그인으로 정적 이미지를 사이트에 추가하기"),"\n"),"\n"),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"https://www.gatsbyjs.com/docs/tutorial/part-4/"},"GraphQL 사용하기"),"\n",e.createElement(a.ul,null,"\n",e.createElement(a.li,null,"사이트의 메타 데이터 다루기"),"\n",e.createElement(a.li,null,"gatsby-source-filesystem 플러그인을 적용해 GraphQL 로 MDX 파일 목록 가져오기"),"\n"),"\n"),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"https://www.gatsbyjs.com/docs/tutorial/part-5/"},"MDX 사용하기"),"\n",e.createElement(a.ul,null,"\n",e.createElement(a.li,null,"MDX 로 블로그 컨텐츠 작성하기"),"\n",e.createElement(a.li,null,"gatsby-plugin-mdx 플러그인을 적용해 GraphQL 로 MDX 파일 내용 가져오기"),"\n"),"\n"),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"https://www.gatsbyjs.com/docs/tutorial/part-6/"},"동적으로 페이지 생성하기"),"\n",e.createElement(a.ul,null,"\n",e.createElement(a.li,null,"MDX 의 frontmatter 와 ",e.createElement(a.code,null,"{mdx.frontmatter__slug}.tsx")," 형식의 파일명을 사용해 페이지 동적으로 생성하기"),"\n",e.createElement(a.li,null,"생성된 페이지에 알맞는 MDX 데이터를 GraphQL 로 가져와 사용하기"),"\n"),"\n"),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"https://www.gatsbyjs.com/docs/tutorial/part-7/"},"데이터에 따라 동적으로 이미지 추가하기"),"\n",e.createElement(a.ul,null,"\n",e.createElement(a.li,null,"gatsby-transformer-sharp 플러그인을 적용해 MDX 의 frontmatter 에 따라 알맞는 이미지를 가져와 사용하기"),"\n"),"\n"),"\n"),e.createElement(a.p,null,"본문이 훌륭하기 때문에 굳이 여기에 다시 정리하지는 않겠다. 위 과정을 모두 거치면 기본적인 글 작성이 가능한 블로그 사이트가 완성된다."),e.createElement(a.h1,{id:"2-태그-구현",style:{position:"relative"}},e.createElement(a.a,{href:"#2-%ED%83%9C%EA%B7%B8-%EA%B5%AC%ED%98%84","aria-label":"2 태그 구현 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2. 태그 구현"),e.createElement(a.p,null,"태그 구현 또한 ",e.createElement(a.a,{href:"https://www.gatsbyjs.com/docs/adding-tags-and-categories-to-blog-posts/"},"공식 문서"),"가 잘 정리되어 있다. 하지만 약간 옛날 버전인 듯 위 튜토리얼 문서와 과 맞지 않는 부분이 있어서 해당 부분을 정정할 겸 정리해보겠다."),e.createElement(a.h2,{id:"21-mdx-에-태그-추가",style:{position:"relative"}},e.createElement(a.a,{href:"#21-mdx-%EC%97%90-%ED%83%9C%EA%B7%B8-%EC%B6%94%EA%B0%80","aria-label":"21 mdx 에 태그 추가 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.1. MDX 에 태그 추가"),e.createElement(a.p,null,"MDX 파일의 frontmatter 영역에 tags 를 추가하자"),e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">---\ntitle: "Create React App 으로 GitHub Pages 적용하기"\ndate: "2021-05-03"\nslug: "210503-create-react-app-github-pages"\ntags: ["React", "create react app", "github pages"] # 이렇게 추가하자\n---</code></pre></div>'}}),e.createElement(a.p,null,e.createElement(a.a,{href:"https://eneaxharja.com/add-tags-to-mdx-blog"},"https://eneaxharja.com/add-tags-to-mdx-blog")),e.createElement(a.h2,{id:"22-태그-페이지-템플릿-추가",style:{position:"relative"}},e.createElement(a.a,{href:"#22-%ED%83%9C%EA%B7%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%B6%94%EA%B0%80","aria-label":"22 태그 페이지 템플릿 추가 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.2. 태그 페이지 템플릿 추가"),e.createElement(a.p,null,"태그 페이지에 쓰일 템플릿을 만들어보자."),e.createElement(a.p,null,"여기서 ",e.createElement(a.code,null,"{mdx.frontmatter__slug}.tsx}")," 형식의 파일을 만들지 않고 템플릿을 만드는 이유는 페이지가 MDX 파일의 정적 데이터(frontmatter 의 slug 필드)에 의해 만들어지는 것이 아니라, 동적인 데이터 (frontmatter 의 tags 정보를 수집) 에 의해 만들어져야 하기 때문이다."),e.createElement(a.div,{className:"codeblock-container"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="tsx"><pre class="language-tsx"><code class="language-tsx"><span class="token comment">// src/templates/TagDetailPageTemplate.tsx</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> graphql<span class="token punctuation">,</span> Link<span class="token punctuation">,</span> PageProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"gatsby"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">"../components/Layout"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">type</span> <span class="token class-name">TagDetailPageTemplateData</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  allMdx<span class="token operator">:</span> <span class="token punctuation">{</span>\n    totalCount<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n    edges<span class="token operator">:</span> <span class="token punctuation">{</span>\n      node<span class="token operator">:</span> <span class="token punctuation">{</span>\n        frontmatter<span class="token operator">:</span> <span class="token punctuation">{</span>\n          slug<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n          title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">type</span> <span class="token class-name">TagDetailPageTemplateContext</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  tag<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">TagDetailPageTemplate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  pageContext<span class="token punctuation">,</span>\n  data<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token operator">:</span> PageProps<span class="token operator">&lt;</span>TagDetailPageTemplateData<span class="token punctuation">,</span> TagDetailPageTemplateContext<span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> tag <span class="token punctuation">}</span> <span class="token operator">=</span> pageContext<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> totalCount<span class="token punctuation">,</span> edges <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>allMdx<span class="token punctuation">;</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Layout</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">태그 "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">"</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">글 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>totalCount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">개</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token plain-text">\n\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token punctuation">{</span>edges<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> node<span class="token operator">:</span> <span class="token punctuation">{</span> frontmatter <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>frontmatter<span class="token punctuation">.</span>slug<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/posts/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>frontmatter<span class="token punctuation">.</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span>frontmatter<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Layout</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> pageQuery <span class="token operator">=</span> graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  query ($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          frontmatter {\n            slug\n            title\n          }\n        }\n      }\n    }\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> TagDetailPageTemplate<span class="token punctuation">;</span></code></pre></div>'}}),e.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),e.createElement(a.h2,{id:"23-gatsby-nodets-작성",style:{position:"relative"}},e.createElement(a.a,{href:"#23-gatsby-nodets-%EC%9E%91%EC%84%B1","aria-label":"23 gatsby nodets 작성 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.3. ",e.createElement(a.code,null,"gatsby-node.ts")," 작성"),e.createElement(a.p,null,"위에서 만든 템플릿으로 페이지를 만들기 위해서는 ",e.createElement(a.code,null,"gatsby-node.ts")," 를 작성해야 한다. 이미 해당 파일을 만들었다면 ",e.createElement(a.code,null,"createPage()")," 함수 안에 아래 내용을 적당히 끼워넣으면 된다."),e.createElement(a.div,{className:"codeblock-container"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token comment">// gatsby-node.ts</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> GatsbyNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"gatsby"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">"path"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">type</span> <span class="token class-name">TagGroupsQueryData</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  tagsGroup<span class="token operator">:</span> <span class="token punctuation">{</span>\n    group<span class="token operator">:</span> <span class="token punctuation">{</span>\n      fieldValue<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> createPages<span class="token operator">:</span> GatsbyNode<span class="token punctuation">[</span><span class="token string">"createPages"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n  actions<span class="token punctuation">,</span>\n  graphql<span class="token punctuation">,</span>\n  reporter<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token generic-function"><span class="token function">graphql</span><span class="token generic class-name"><span class="token operator">&lt;</span>TagGroupsQueryData<span class="token operator">></span></span></span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n    {\n      tagsGroup: allMdx(limit: 2000) {\n        group(field: { frontmatter: { tags: SELECT } }) {\n          fieldValue\n        }\n      }\n    }\n  </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>errors <span class="token operator">||</span> <span class="token operator">!</span>result<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    reporter<span class="token punctuation">.</span><span class="token function">panicOnBuild</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Error while running GraphQL query.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">const</span> tagsTemplatePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>\n    <span class="token string">"src/templates/TagDetailPageTemplate.tsx"</span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  result<span class="token punctuation">.</span>data<span class="token punctuation">.</span>tagsGroup<span class="token punctuation">.</span>group<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    actions<span class="token punctuation">.</span><span class="token function">createPage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      path<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/tags/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token punctuation">.</span>fieldValue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      component<span class="token operator">:</span> tagsTemplatePath<span class="token punctuation">,</span>\n      context<span class="token operator">:</span> <span class="token punctuation">{</span> tag<span class="token operator">:</span> tag<span class="token punctuation">.</span>fieldValue <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre></div>'}}),e.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),e.createElement(a.h2,{id:"24-태그-목록-페이지-추가",style:{position:"relative"}},e.createElement(a.a,{href:"#24-%ED%83%9C%EA%B7%B8-%EB%AA%A9%EB%A1%9D-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B6%94%EA%B0%80","aria-label":"24 태그 목록 페이지 추가 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.4. 태그 목록 페이지 추가"),e.createElement(a.p,null,"태그 목록 페이지를 추가하자."),e.createElement(a.div,{className:"codeblock-container"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="tsx"><pre class="language-tsx"><code class="language-tsx"><span class="token comment">// src/pages/tags/index.tsx</span>\n<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> React <span class="token keyword">from</span> <span class="token string">"react"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> graphql<span class="token punctuation">,</span> Link<span class="token punctuation">,</span> PageProps <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"gatsby"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Layout <span class="token keyword">from</span> <span class="token string">"../../components/Layout"</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> Seo <span class="token keyword">from</span> <span class="token string">"../../components/Seo"</span><span class="token punctuation">;</span>\n\n<span class="token keyword">type</span> <span class="token class-name">TagsPageData</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  allMdx<span class="token operator">:</span> <span class="token punctuation">{</span>\n    group<span class="token operator">:</span> <span class="token punctuation">{</span>\n      totalCount<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n      fieldValue<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">TagsPage</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> data <span class="token punctuation">}</span><span class="token operator">:</span> PageProps<span class="token operator">&lt;</span>TagsPageData<span class="token operator">></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> tags <span class="token operator">=</span> data<span class="token punctuation">.</span>allMdx<span class="token punctuation">.</span>group<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token operator">=></span> b<span class="token punctuation">.</span>totalCount <span class="token operator">-</span> a<span class="token punctuation">.</span>totalCount<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Layout</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">tags</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n        </span><span class="token punctuation">{</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>tag<span class="token punctuation">.</span>fieldValue<span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Link</span></span> <span class="token attr-name">to</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/tags/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token punctuation">.</span>fieldValue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token punctuation">.</span>fieldValue<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Link</span></span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token string">" "</span><span class="token punctuation">}</span><span class="token plain-text">\n            </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">></span></span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token punctuation">.</span>totalCount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">></span></span><span class="token plain-text">\n          </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Layout</span></span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> query <span class="token operator">=</span> graphql<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n  query {\n    allMdx(limit: 2000) {\n      group(field: { frontmatter: { tags: SELECT } }) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">Head</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Seo</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>태그 목록<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> TagsPage<span class="token punctuation">;</span></code></pre></div>'}}),e.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),e.createElement(a.p,null,e.createElement(a.code,null,"graphql")," 쿼리에서 바로 totalCount 로 정렬하고 싶었지만 (GraphQL 을 잘 몰라서) 방법을 찾지 못했다. 대신 ",e.createElement(a.code,null,"TagsPage")," 컴포넌트 첫번째 줄에서 ",e.createElement(a.code,null,".sort()")," 를 사용해 정렬하고 있다."),e.createElement(a.h1,{id:"3-다음",style:{position:"relative"}},e.createElement(a.a,{href:"#3-%EB%8B%A4%EC%9D%8C","aria-label":"3 다음 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3. 다음"),e.createElement(a.p,null,"다음 글에서는 글 내용 안에 이미지를 삽입하는 방법을 정리한다.")),"\n",e.createElement(a.div,{className:"toc"},e.createElement(a.p,null,"목차"),e.createElement(a.ul,null,"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#0-%EB%B0%9C%EB%8B%A8"},"0. 발단")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#1-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EA%B8%B0%EB%B3%B8-%EA%B5%AC%EC%84%B1"},"1. 프로젝트 기본 구성")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#2-%ED%83%9C%EA%B7%B8-%EA%B5%AC%ED%98%84"},"2. 태그 구현"),"\n",e.createElement(a.ul,null,"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#21-mdx-%EC%97%90-%ED%83%9C%EA%B7%B8-%EC%B6%94%EA%B0%80"},"2.1. MDX 에 태그 추가")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#22-%ED%83%9C%EA%B7%B8-%ED%8E%98%EC%9D%B4%EC%A7%80-%ED%85%9C%ED%94%8C%EB%A6%BF-%EC%B6%94%EA%B0%80"},"2.2. 태그 페이지 템플릿 추가")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#23-gatsby-nodets-%EC%9E%91%EC%84%B1"},"2.3. ",e.createElement(a.code,null,"gatsby-node.ts")," 작성")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#24-%ED%83%9C%EA%B7%B8-%EB%AA%A9%EB%A1%9D-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%B6%94%EA%B0%80"},"2.4. 태그 목록 페이지 추가")),"\n"),"\n"),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#3-%EB%8B%A4%EC%9D%8C"},"3. 다음")),"\n")))}var o,l,c,i=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.ah)(),n.components);return a?e.createElement(a,n,e.createElement(p,n)):p(n)},r=s(1880),u=s(1883),k=s(3723),d=s(9178),m=s(3904),g=s(891),h=s(3234),E=s(6117),f=s(5777),b=s(7178),v=s(5924);function x(n){let{data:a,children:s}=n;const t=e.useRef(),{frontmatter:p,sameSeriesPosts:o}=a.mdx,{title:l,slug:c,date:i,series:r}=p;return e.useEffect((()=>{var n;const a=null===(n=t.current)||void 0===n?void 0:n.querySelectorAll(".md h1, .md h2, .md h3, .md h4, .md h5, .md h6"),s=new IntersectionObserver((()=>(0,v.Z)(t,a)),{rootMargin:"0px 0px -90% 0px",threshold:[0,1]});return null==a||a.forEach((n=>s.observe(n))),()=>s.disconnect()}),[]),e.createElement(d.Z,null,e.createElement(y,null,e.createElement("h1",null,e.createElement(u.Link,{to:"/posts/"+c},l)),e.createElement(w,null,i)),e.createElement(b.Z,{name:r,data:o,current:c}),e.createElement(B,{ref:t},s),e.createElement(E.Z,{data:o,current:c}),e.createElement(f.Z,null))}const y=g.ZP.div(o||(o=(0,r.Z)(["\n  margin: 72px 0 84px;\n  padding: 0 32px;\n\n  & > h1 {\n    font-size: 2.5rem;\n    word-break: keep-all;\n    margin: 0;\n\n    > a {\n      color: ",";\n    }\n  }\n"])),(n=>n.theme.colors.onBackground)),w=g.ZP.div(l||(l=(0,r.Z)(["\n  margin-left: 2px;\n"]))),B=(0,g.ZP)(h.Z)(c||(c=(0,r.Z)(["\n  margin-bottom: 120px;\n"]))),C=n=>{var a,s;let{data:t}=n;const{frontmatter:{title:p,slug:o,tags:l,heroImage:c,previewContent:i},excerpt:r}=t.mdx,u=c?(0,k.c)(c):null;return e.createElement(m.Z,{title:p,description:null!=i?i:r,path:"posts/"+o,thumbnail:null==u||null===(a=u.images)||void 0===a||null===(s=a.fallback)||void 0===s?void 0:s.src,keywords:l,ogType:"article"})};function D(n){return e.createElement(x,n,e.createElement(i,n))}},5777:function(n,a,s){var t=s(7294);a.Z=function(){const n=(0,t.useRef)(null);return(0,t.useEffect)((()=>{var a;const s=document.createElement("script");Object.entries({src:"https://giscus.app/client.js","data-repo":"ricale/blog","data-repo-id":"R_kgDOIvqo5g","data-category":"Giscus","data-category-id":"DIC_kwDOIvqo5s4CT7fR","data-mapping":"pathname","data-strict":"0","data-reactions-enabled":"1","data-emit-metadata":"0","data-input-position":"top","data-theme":"dark","data-lang":"ko",crossorigin:"anonymous",async:"true"}).forEach((n=>{let[a,t]=n;s.setAttribute(a,t)})),null===(a=n.current)||void 0===a||a.appendChild(s)}),[]),t.createElement("div",{id:"comments",ref:n})}},3234:function(n,a,s){s.d(a,{Z:function(){return y}});var t,e=s(1880),p=s(891);var o,l=(0,p.iv)(t||(t=(0,e.Z)(["\n  blockquote {\n    position: relative;\n\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 16px;\n    padding: 16px 32px;\n    border-left: 1px solid ",";\n    border-left-width: 10px;\n\n    background-color: ",";\n\n    > :first-child {\n      margin-top: 0;\n    }\n    > :last-child {\n      margin-bottom: 0;\n    }\n    > ul,\n    > ol {\n      padding-left: 20px;\n    }\n  }\n\n  blockquote:before {\n    content: '\"';\n\n    position: absolute;\n    top: -10px;\n    left: 5px;\n\n    font-size: 3em;\n    color: ",";\n  }\n  blockquote:after {\n    content: '\"';\n\n    position: absolute;\n    bottom: -30px;\n    right: 5px;\n\n    font-size: 3em;\n    color: ",";\n  }\n"])),(n=>n.theme.colors.blockquoteBorder),(n=>n.theme.colors.blockquote),(n=>n.theme.colors.blockquoteBorder),(n=>n.theme.colors.blockquoteBorder));var c,i=(0,p.iv)(o||(o=(0,e.Z)(['\n  pre[class*="language-"] {\n    margin: 0 0 16px;\n  }\n\n  code[class*="language-"] {\n    font-size: 0.85rem;\n  }\n\n  .gatsby-highlight-code-line {\n    display: block;\n\n    margin-left: -1em;\n    margin-right: -1em;\n    padding-top: 1.8px;\n    padding-bottom: 1.8px;\n    padding-left: 0.75em;\n    padding-right: 1em;\n    border-left: 0.25em solid ',";\n\n    background-color: ",";\n  }\n\n  .line-numbers .line-numbers-rows {\n    bottom: 0;\n    padding-top: 17.5px;\n    padding-left: 12px;\n  }\n\n  pre > code {\n    padding: unset;\n    border-radius: unset;\n    background-color: unset;\n    color: unset;\n  }\n  .codeblock-container {\n    position: relative;\n    padding-top: 0.1px;\n    .codeblock-title {\n      position: absolute;\n      top: 0px;\n      left: 8px;\n      z-index: 1;\n\n      padding: 2px 8px;\n\n      font-size: 0.875rem;\n      font-family: consolas, monospace;\n      background-color: ",";\n    }\n    .codeblock-copy-button {\n      position: absolute;\n      top: 0;\n      right: 0;\n\n      padding: 4px 6px;\n      border: 0;\n\n      font-size: 0.75rem;\n      color: ",';\n      text-decoration: underline;\n\n      background-color: transparent;\n      cursor: pointer;\n    }\n    .codeblock-title + div pre[class*="language-"] {\n      margin-top: 8px;\n    }\n    .codeblock-title + div + .codeblock-copy-button {\n      top: 8px;\n    }\n  }\n\n  @media (max-width: 500px) {\n    .codeblock-container {\n      padding-top: 0;\n      .codeblock-title {\n        position: static;\n        background-color: ',";\n      }\n    }\n  }\n"])),(n=>n.theme.colors.codeblockHighlightBorder),(n=>n.theme.colors.codeblockHighlight),(n=>n.theme.colors.codeblockTitle),(n=>n.theme.colors.codeblockCopyButtonLabel),(n=>n.theme.colors.codeblockTitleInMobile));var r,u=(0,p.iv)(c||(c=(0,e.Z)(["\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 24px;\n    margin-bottom: 16px;\n    line-height: 1.25;\n    font-weight: 600;\n\n    > a.anchor path {\n      fill: white;\n    }\n  }\n\n  h1 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid ",";\n    font-size: 2.125em;\n  }\n\n  h2 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid ",";\n    font-size: 1.75em;\n  }\n\n  h3 {\n    font-size: 1.5em;\n  }\n\n  h4 {\n    font-size: 1.25em;\n  }\n\n  h5 {\n    font-size: 1em;\n  }\n\n  h6 {\n    font-size: 0.9375em;\n  }\n"])),(n=>n.theme.colors.headingBorder),(n=>n.theme.colors.headingBorder));var k,d=(0,p.iv)(r||(r=(0,e.Z)(["\n  img {\n    border: 1px solid ",";\n  }\n\n  img:not([class]) {\n    max-width: 600px;\n    margin-bottom: 16px;\n  }\n\n  .gatsby-resp-image-figure {\n    margin: 0 0 16px;\n    .gatsby-resp-image-wrapper {\n      margin-bottom: 0;\n    }\n    .gatsby-resp-image-figcaption {\n      margin-top: 4px;\n      text-align: center;\n      font-size: 0.875rem;\n      color: ",";\n    }\n  }\n  .gatsby-resp-image-wrapper {\n    margin-bottom: 16px;\n  }\n"])),(n=>n.theme.colors.imageBorder),(n=>n.theme.colors.imageCaptionText));var m,g=(0,p.iv)(k||(k=(0,e.Z)(["\n  ul,\n  ol {\n    margin-bottom: 16px;\n  }\n  li > ul,\n  li > ol {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n"])));var h,E,f=(0,p.iv)(m||(m=(0,e.Z)(["\n  table {\n    width: max-content;\n    max-width: 100%;\n    margin-bottom: 16px;\n    border-collapse: collapse;\n    td,\n    th {\n      padding: 6px 13px;\n      border: 1px solid ",";\n    }\n  }\n"])),(n=>n.theme.colors.tableBorder)),b=s(5785);var v,x=(0,p.iv)(h||(h=(0,e.Z)(["\n  > .md {\n    order: 1;\n  }\n\n  > .toc {\n    font-size: 0.875rem;\n    > ul {\n      margin: 0;\n      padding: 0;\n      list-style: none;\n\n      ul {\n        list-style: none;\n      }\n    }\n  }\n  @media (max-width: 1099px) {\n    > .toc {\n      display: none;\n    }\n  }\n  @media (min-width: 1100px) {\n    > .toc {\n      position: absolute;\n      top: 8px;\n      left: calc(50% + 400px);\n      height: 100%;\n      > p {\n        display: none;\n      }\n      > ul {\n        position: sticky;\n        top: 10px;\n        padding-left: 8px;\n        border-left: 1px solid ",";\n\n        white-space: nowrap;\n\n        a {\n          color: ",";\n        }\n        a > code {\n          color: ",";\n        }\n        code {\n          white-space: nowrap;\n        }\n        overflow: hidden;\n        ul {\n          padding-left: 15px;\n        }\n      }\n\n      .highlight {\n        color: ",";\n        text-decoration: underline;\n        code {\n          color: ",";\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n  > .toc {\n    ","\n\n    @media (min-width: ","px) {\n      > ul {\n        white-space: inherit;\n        code {\n          white-space: inherit;\n        }\n      }\n    }\n  }\n"])),(n=>n.theme.colors.inactiveText),(n=>n.theme.colors.inactiveText),(n=>n.theme.colors.inactiveText),(n=>n.theme.colors.onBackground),(n=>n.theme.colors.onBackground),(0,b.Z)(new Array(20)).map(((n,a)=>(0,p.iv)(E||(E=(0,e.Z)(["\n          @media (min-width: ","px) {\n            width: ","px;\n          }\n        "])),1100+20*(a+1),(1100+20*a-800)/2))),1100);var y=p.ZP.div(v||(v=(0,e.Z)(["\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  line-height: 1.5;\n\n  ","\n  ","\n  ","\n  ","\n  ","\n  ","\n  ","\n\n  p {\n    margin-top: 0;\n    margin-bottom: 16px;\n  }\n\n  hr {\n    height: 0.25em;\n    margin: 24px 0;\n    border: 0;\n\n    background-color: ",";\n  }\n\n  code {\n    padding: 0.2em 0.4em;\n    border-radius: 2px;\n\n    font-size: 0.85em;\n\n    background-color: ",";\n    color: ",";\n    white-space: break-spaces;\n  }\n\n  a > code {\n    color: skyblue;\n  }\n\n  & > .md > :first-child {\n    margin-top: 0;\n  }\n"])),u,g,d,x,i,l,f,(n=>n.theme.colors.hr),(n=>n.theme.colors.code),(n=>n.theme.colors.onCode))},6117:function(n,a,s){s.d(a,{Z:function(){return h}});var t,e,p,o=s(1880),l=s(7294),c=s(891),i=s(1883);const r=(0,c.ZP)(i.Link)(t||(t=(0,o.Z)(["\n  display: flex;\n  flex-direction: column;\n  align-items: ",";\n\n  max-width: 100%;\n  padding: 16px;\n\n  background-color: ",";\n\n  &:hover {\n    text-decoration: none;\n  }\n"])),(n=>n.next?"flex-end":"flex-start"),(n=>n.theme.colors.nearbyPostLink)),u=c.ZP.div(e||(e=(0,o.Z)(["\n  font-size: 0.75rem;\n  color: ",";\n"])),(n=>n.theme.colors.onNearbyPostLink)),k=c.ZP.div(p||(p=(0,o.Z)(["\n  max-width: 100%;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n"])));var d,m=function(n){let{title:a,slug:s,desc:t,...e}=n;return l.createElement(r,Object.assign({},e,{to:"/posts/"+s}),l.createElement(u,null,t),l.createElement(k,null,a))};const g=c.ZP.div(d||(d=(0,o.Z)(["\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: 16px;\n\n  margin: 120px 0;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    overflow: hidden;\n  }\n  & > :nth-child(1) {\n    align-items: flex-start;\n  }\n  & > :nth-child(2) {\n    align-items: flex-end;\n  }\n"])));var h=function(n){var a,s;let{data:t,current:e}=n;if(!t)return null;const p=t.findIndex((n=>n.frontmatter.slug===e)),o=null===(a=t[p-1])||void 0===a?void 0:a.frontmatter,c=null===(s=t[p+1])||void 0===s?void 0:s.frontmatter;return l.createElement(g,null,l.createElement("div",null,!!o&&l.createElement(m,Object.assign({},o,{desc:"❮ 시리즈 이전글"}))),l.createElement("div",null,!!c&&l.createElement(m,Object.assign({},c,{next:!0,desc:"시리즈 다음글 ❯"}))))}},7178:function(n,a,s){var t,e,p,o,l,c=s(1880),i=s(7294),r=s(1883),u=s(891);const k=u.ZP.div(t||(t=(0,c.Z)(["\n  margin-bottom: 16px;\n  align-items: center;\n\n  background-color: ",";\n"])),(n=>n.theme.colors.sameSereisPosts)),d=u.ZP.div(e||(e=(0,c.Z)(["\n  display: flex;\n  justify-content: space-between;\n  padding: 16px;\n  cursor: pointer;\n  user-select: none;\n\n  > h2 {\n    margin: 0;\n    font-size: 1rem;\n    > a {\n      color: ",";\n    }\n  }\n\n  > span {\n    transform: rotate(","deg);\n    transition: transform 0.2s;\n  }\n"])),(n=>n.theme.colors.onBackground),(n=>n.collapsed?0:180)),m=u.ZP.ol(p||(p=(0,c.Z)(["\n  margin: 0;\n  border-top: 1px solid ",";\n  padding-top: 16px;\n  padding-left: 48px;\n  padding-bottom: 16px;\n"])),(n=>n.theme.colors.background)),g=u.ZP.li(o||(o=(0,c.Z)(["\n  margin-bottom: 4px;\n  font-size: 0.9375rem;\n  color: ",";\n  & > a {\n    color: ",";\n  }\n  ","\n"])),(n=>n.theme.colors.inactiveText),(n=>n.theme.colors.inactiveText),(n=>n.active&&(0,u.iv)(l||(l=(0,c.Z)(["\n      color: ",";\n      & > a {\n        color: ",";\n        text-decoration: underline;\n      }\n    "])),(n=>n.theme.colors.onBackground),(n=>n.theme.colors.onBackground))));a.Z=function(n){let{name:a,data:s,current:t}=n;const[e,p]=i.useState(!0);return s?i.createElement(k,null,i.createElement(d,{collapsed:e,onClick:()=>p((n=>!n))},i.createElement("h2",null,i.createElement(r.Link,{to:"/series/"+a+"/"},'시리즈 "'+a+'"')),i.createElement("span",null,"▲")),!e&&i.createElement(m,null,s.map((n=>{let{frontmatter:{slug:a,title:s}}=n;return i.createElement(g,{active:a===t,key:a},i.createElement(r.Link,{to:"/posts/"+a},s))})))):null}},5924:function(n,a){const s="highlight";a.Z=function(n,a){var t,e,p;if(!a)return;const o=document.documentElement.scrollTop+10-(null!==(t=null===(e=n.current)||void 0===e?void 0:e.offsetTop)&&void 0!==t?t:0);let l;for(let s=0;s<a.length;s++)if(a[s].offsetTop>o){var c;l=null!==(c=a[s-1])&&void 0!==c?c:null;break}if(void 0===l&&(l=a[a.length-1]),null===(p=n.current)||void 0===p||p.querySelectorAll(".highlight").forEach((n=>n.classList.remove(s))),l){var i;const a=l.getAttribute("id"),t=".toc a[href='#"+encodeURI(null!=a?a:"")+"']",e=null===(i=n.current)||void 0===i?void 0:i.querySelector(t);null==e||e.classList.add(s)}}},1151:function(n,a,s){s.d(a,{ah:function(){return p}});var t=s(7294);const e=t.createContext({});function p(n){const a=t.useContext(e);return t.useMemo((()=>"function"==typeof n?n(a):{...a,...n}),[a,n])}}}]);
//# sourceMappingURL=component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-blog-posts-2023-230111-gatsby-1-index-mdx-4fe936a9ddf9e141ff60.js.map