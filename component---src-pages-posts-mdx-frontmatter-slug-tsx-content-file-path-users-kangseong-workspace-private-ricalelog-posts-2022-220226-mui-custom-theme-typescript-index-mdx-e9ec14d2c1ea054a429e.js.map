{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2022-220226-mui-custom-theme-typescript-index-mdx-e9ec14d2c1ea054a429e.js","mappings":"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","sources":["webpack://ricalelog/./posts/2022/220226-mui-custom-theme-typescript/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx","webpack://ricalelog/./src/components/Comments.tsx","webpack://ricalelog/./src/components/MdxContent.tsx","webpack://ricalelog/./src/components/SameSeriesPosts.tsx","webpack://ricalelog/./src/components/Tag.tsx","webpack://ricalelog/./src/components/TagList.tsx","webpack://ricalelog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    div: \"div\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"타입스크립트 환경에서 \", React.createElement(_components.a, {\n    href: \"https://mui.com/\"\n  }, \"MUI\"), \" 의 테마에 필드를 추가하려면 타입스크립트 또한 추가적인 타입 선언이 필요하다. 어떻게 하면 되는지 유형별로 간단히 살펴보자.\"), \"\\n\", React.createElement(_components.h3, null, \"References\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://mui.com/getting-started/installation/\"\n  }, \"MUI Docs\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://mui.com/customization/theming/#custom-variables\"\n  }, \"Theming - Custom variables\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://mui.com/customization/palette/#adding-new-colors\"\n  }, \"Palette - Adding new colors\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"StackOverflow \", React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/66080451/add-property-to-background-prop-in-createmuitheme-in-material-ui-using-typescrip\"\n  }, \"Add property to background prop in createMuiTheme in Material-UI using Typescript\")), \"\\n\", React.createElement(_components.li, null, \"GitHub \", React.createElement(_components.a, {\n    href: \"https://github.com/mui/material-ui\"\n  }, \"mui/material-ui\"), \" - \", React.createElement(_components.a, {\n    href: \"https://github.com/mui/material-ui/blob/master/packages/mui-material/src/styles/createPalette.d.ts\"\n  }, \"createPalette.d.ts\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"1. 테마에 커스텀 필드 추가\"), \"\\n\", React.createElement(_components.p, null, \"테마에 기존에 존재하지 않는 새로운 필드를 추가할 수 있다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">const</span> theme <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createTheme</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  status<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    danger<span class=\\\"token operator\\\">:</span> orange<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">500</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"이것을 위한 타입스크립트 타입 선언은 경우에는 아래처럼 해주면 된다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">declare</span> <span class=\\\"token keyword\\\">module</span> <span class=\\\"token string\\\">\\\"@mui/material/styles\\\"</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Theme</span> <span class=\\\"token punctuation\\\">{</span>\\n    status<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      danger<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ThemeOptions</span> <span class=\\\"token punctuation\\\">{</span>\\n    status<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      danger<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"2. 테마 Palette 에 커스텀 필드 추가\"), \"\\n\", React.createElement(_components.p, null, \"테마의 palatte 에 색상을 추가하면 \", React.createElement(_components.code, null, \"color\"), \", \", React.createElement(_components.code, null, \"sx\"), \" prop 등에서 이름만으로 색상을 지정할 수 있게 된다. 아래 코드처럼 \", React.createElement(_components.code, null, \"palette.neutral\"), \"을 추가한다면,\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">const</span> theme <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createTheme</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  palette<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    neutral<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      main<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"#64748B\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      contrastText<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"#fff\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"타입스크립트는 아래처럼 해주면 된다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">declare</span> <span class=\\\"token keyword\\\">module</span> <span class=\\\"token string\\\">\\\"@mui/material/styles\\\"</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">Palette</span> <span class=\\\"token punctuation\\\">{</span>\\n    neutral<span class=\\\"token operator\\\">:</span> Palette<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"primary\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">PaletteOptions</span> <span class=\\\"token punctuation\\\">{</span>\\n    neutral<span class=\\\"token operator\\\">:</span> PaletteOptions<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"primary\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"이걸로 끝이면 좋겠지만, 특정 컴포넌트의 \", React.createElement(_components.code, null, \"color\"), \" 속성에서도 위에서 추가한 색상을 쓰고 싶다면, 해당 컴포넌트에 관한 타입 추가 선언을 해주어야 한다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token comment\\\">// Button 의 color prop 에서 neutral 을 쓰고 싶을 경우</span>\\n<span class=\\\"token keyword\\\">declare</span> <span class=\\\"token keyword\\\">module</span> <span class=\\\"token string\\\">\\\"@mui/material/Button\\\"</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">ButtonPropsColorOverrides</span> <span class=\\\"token punctuation\\\">{</span>\\n    neutral<span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"3. 테마 Palette 의 특정 색상에 필드 추가\"), \"\\n\", React.createElement(_components.p, null, \"Palette 의 특정 색상에 필드를 추가하고 싶을 수 있다. 아래는 \", React.createElement(_components.code, null, \"palette.primary.darker\"), \", \", React.createElement(_components.code, null, \"palette.background.contrastText\"), \" 를 추가했다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">const</span> normalTheme <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">createTheme</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  palette<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    primary<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      main<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"#0971f1\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      darker<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"#053e85\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    background<span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">default</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"#E4E7EB\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      contrastText<span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"#000000\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"속성을 추가하려는 색상이 \", React.createElement(_components.code, null, \"primary\"), \", \", React.createElement(_components.code, null, \"secondary\"), \", \", React.createElement(_components.code, null, \"error\"), \", \", React.createElement(_components.code, null, \"warning\"), \", \", React.createElement(_components.code, null, \"info\"), \", \", React.createElement(_components.code, null, \"success\"), \" 중 하나라면, 이 색상들은 타입을 공유하기 때문에 아래처럼 타입을 지정하면 된다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">declare</span> <span class=\\\"token keyword\\\">module</span> <span class=\\\"token string\\\">\\\"@mui/material/styles\\\"</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">PaletteColor</span> <span class=\\\"token punctuation\\\">{</span>\\n    darker<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">SimplePaletteColorOptions</span> <span class=\\\"token punctuation\\\">{</span>\\n    darker<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"하지만 \", React.createElement(_components.code, null, \"background\"), \" 의 경우 다른 타입을 사용하므로 아래처럼 해주어야 한다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">declare</span> <span class=\\\"token keyword\\\">module</span> <span class=\\\"token string\\\">\\\"@mui/material/styles/createPalette\\\"</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">TypeBackground</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">default</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n    paper<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n    contrastText<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"어떤 색상이 어떤 타입을 사용하는지 알고 싶다면 \", React.createElement(_components.a, {\n    href: \"https://github.com/mui/material-ui/blob/master/packages/mui-material/src/styles/createPalette.d.ts\"\n  }, \"createPalette.d.ts\"), \" 코드를 보면 된다. 아래처럼 나와있으니 참고해서 타입 지정을 해주면 된다.\"), \"\\n\", React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">interface</span> <span class=\\\"token class-name\\\">PaletteOptions</span> <span class=\\\"token punctuation\\\">{</span>\\n  primary<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> PaletteColorOptions<span class=\\\"token punctuation\\\">;</span>\\n  secondary<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> PaletteColorOptions<span class=\\\"token punctuation\\\">;</span>\\n  error<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> PaletteColorOptions<span class=\\\"token punctuation\\\">;</span>\\n  warning<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> PaletteColorOptions<span class=\\\"token punctuation\\\">;</span>\\n  info<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> PaletteColorOptions<span class=\\\"token punctuation\\\">;</span>\\n  success<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> PaletteColorOptions<span class=\\\"token punctuation\\\">;</span>\\n  mode<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> PaletteMode<span class=\\\"token punctuation\\\">;</span>\\n  tonalOffset<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> PaletteTonalOffset<span class=\\\"token punctuation\\\">;</span>\\n  contrastThreshold<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">;</span>\\n  common<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> Partial<span class=\\\"token operator\\\">&lt;</span>CommonColors<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  grey<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> ColorPartial<span class=\\\"token punctuation\\\">;</span>\\n  text<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> Partial<span class=\\\"token operator\\\">&lt;</span>TypeText<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  divider<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n  action<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> Partial<span class=\\\"token operator\\\">&lt;</span>TypeAction<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  background<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> Partial<span class=\\\"token operator\\\">&lt;</span>TypeBackground<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  getContrastText<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">(</span>background<span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token builtin\\\">string</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2022/220226-mui-custom-theme-typescript/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;\nimport * as React from \"react\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nimport SameSeriesPosts from \"../../components/SameSeriesPosts\";\nimport TagList from \"../../components/TagList\";\nfunction PostDetailPage(_ref) {\n  let {data, children} = _ref;\n  const {frontmatter, sameSeriesPosts} = data.mdx;\n  const {title, slug, date, tags, series, heroImage, heroImageAlt} = frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, title), React.createElement(WrittenDate, null, date), React.createElement(TagList, {\n    tags: tags\n  })), React.createElement(SameSeriesPosts, {\n    name: series,\n    data: sameSeriesPosts,\n    current: slug\n  }), !!image && React.createElement(ThumbnailImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(PostContent, null, children), React.createElement(Comments, null));\n}\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n  }\\n\"])));\nconst ThumbnailImage = styled(GatsbyImage)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 16px;\\n\"])));\nconst WrittenDate = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst Tags = styled.ul(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px\\n      \", \"px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.spacing, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst PostContent = styled(MdxContent)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 60px;\\n\"])));\nconst query = \"2677585968\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage, previewContent}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: previewContent !== null && previewContent !== void 0 ? previewContent : excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import React, { useEffect, useRef } from \"react\";\n\nfunction Comments() {\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const scriptTag = document.createElement(\"script\");\n    const attrs = {\n      src: \"https://utteranc.es/client.js\",\n      repo: \"ricale/blog\",\n      \"issue-term\": \"pathname\",\n      label: \"utterances\",\n      theme: \"github-dark\",\n      crossOrigin: \"anonymous\",\n      async: \"true\",\n    };\n    Object.entries(attrs).forEach(([key, value]) => {\n      scriptTag.setAttribute(key, value);\n    });\n    ref.current?.appendChild(scriptTag);\n  }, []);\n\n  return <div id=\"comments\" ref={ref} />;\n}\n\nexport default Comments;\n","import styled from \"../themes\";\n\nconst MdxContent = styled.div`\n  font-size: 16px;\n  line-height: 1.5;\n\n  p {\n    margin-top: 0;\n    margin-bottom: 16px;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 24px;\n    margin-bottom: 16px;\n    line-height: 1.25;\n    font-weight: 600;\n  }\n\n  h1 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid #21262d;\n    font-size: 2em;\n  }\n\n  h2 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid #21262d;\n    font-size: 1.5em;\n  }\n\n  h3 {\n    font-size: 1.25em;\n  }\n\n  h4 {\n    font-size: 1em;\n  }\n\n  h5 {\n    font-size: 0.875em;\n  }\n\n  ul,\n  ol,\n  .gatsby-resp-image-wrapper {\n    margin-bottom: 16px;\n  }\n\n  table {\n    width: max-content;\n    max-width: 100%;\n    margin-bottom: 16px;\n    border-collapse: collapse;\n    tr {\n      border-top: 1px solid #21262d;\n    }\n    td,\n    th {\n      padding: 6px 13px;\n      border: 1px solid #30363d;\n    }\n  }\n\n  hr {\n    height: 0.25em;\n    margin: 24px 0;\n    border: 0;\n\n    background-color: #30363d;\n  }\n\n  li > ul,\n  li > ol {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  blockquote {\n    position: relative;\n\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 16px;\n    padding: 16px 32px;\n    border-left: 1px solid ${(p) => p.theme.colors.blockquoteBorder};\n    border-left-width: 10px;\n\n    background-color: ${(p) => p.theme.colors.blockquote};\n\n    > :first-child {\n      margin-top: 0;\n    }\n    > :last-child {\n      margin-bottom: 0;\n    }\n    > ul,\n    > ol {\n      padding-left: 20px;\n    }\n  }\n\n  blockquote:before {\n    content: '\"';\n\n    position: absolute;\n    top: -10px;\n    left: 5px;\n\n    font-size: 3em;\n    color: ${(p) => p.theme.colors.blockquoteBorder};\n  }\n  blockquote:after {\n    content: '\"';\n\n    position: absolute;\n    bottom: -30px;\n    right: 5px;\n\n    font-size: 3em;\n    color: ${(p) => p.theme.colors.blockquoteBorder};\n  }\n\n  code {\n    padding: 0.2em 0.4em;\n    border-radius: 2px;\n\n    font-size: 0.85em;\n\n    background-color: ${(p) => p.theme.colors.code};\n    color: ${(p) => p.theme.colors.onCode};\n    white-space: break-spaces;\n  }\n\n  pre {\n    margin-bottom: 16px;\n\n    overflow-x: auto;\n  }\n\n  pre > code {\n    padding: unset;\n    border-radius: unset;\n    background-color: unset;\n    color: unset;\n  }\n`;\n\nexport default MdxContent;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nimport styled, { css } from \"../themes\";\nimport { PostFrontmatter } from \"../types\";\n\ntype SameSeriesPostsProps = {\n  name?: string;\n  data?:\n    | null\n    | {\n        frontmatter: Pick<PostFrontmatter, \"title\" | \"slug\">;\n      }[];\n  current?: string;\n};\nfunction SameSeriesPosts({ name, data, current }: SameSeriesPostsProps) {\n  const [collapsed, setCollapsed] = React.useState(true);\n  if (!data) {\n    return null;\n  }\n  return (\n    <Container>\n      <Header collapsed={collapsed} onClick={() => setCollapsed((st) => !st)}>\n        <h2>\n          시리즈 <Link to={`/series/${name}/`}>{`\"${name}\"`}</Link>\n        </h2>\n        <span>▲</span>\n      </Header>\n      {!collapsed && (\n        <List>\n          {data.map(({ frontmatter: { slug, title } }) => (\n            <ListItem active={slug === current} key={slug}>\n              <Link to={`/posts/${slug}`}>{title}</Link>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  margin-bottom: 16px;\n  align-items: center;\n\n  background-color: #111111;\n`;\n\ntype HeaderProps = {\n  collapsed: boolean;\n};\nconst Header = styled.div<HeaderProps>`\n  display: flex;\n  justify-content: space-between;\n  padding: 16px;\n  cursor: pointer;\n\n  > h2 {\n    margin: 0;\n    font-size: 1rem;\n  }\n\n  > span {\n    user-select: none;\n    transform: rotate(${(p) => (p.collapsed ? 0 : 180)}deg);\n  }\n`;\n\nconst List = styled.ol`\n  margin: 0 16px;\n  padding-bottom: 16px;\n`;\n\ntype ListItemProps = {\n  active: boolean;\n};\nconst ListItem = styled.li<ListItemProps>`\n  ${(p) =>\n    p.active &&\n    css`\n      & > a {\n        font-weight: bold;\n        font-style: italic;\n        text-decoration: underline;\n      }\n    `}\n`;\n\nexport default SameSeriesPosts;\n","import * as React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"../themes\";\n\ntype TagProps = {\n  value: string;\n};\nfunction Tag({ value }: TagProps) {\n  return <TagComp to={`/tags/${value}`}>{value}</TagComp>;\n}\n\nconst TagComp = styled(Link)`\n  display: inline-block;\n  padding: ${(p) => p.theme.dimens.spacing}px ${(p) => p.theme.dimens.gutter}px;\n  border-radius: 2px;\n\n  background-color: ${(p) => p.theme.colors.tag};\n  color: ${(p) => p.theme.colors.onTag};\n  text-decoration: none;\n`;\n\nexport default Tag;\n","import * as React from \"react\";\n\nimport styled from \"../themes\";\nimport Tag from \"./Tag\";\n\nfunction isStringArray(arr: unknown[]): arr is string[] {\n  return typeof arr[0] === \"string\";\n}\n\ntype TagListProps = {\n  tags: string[] | { fieldValue: string; totalCount: number }[];\n};\nfunction TagList({ tags, ...props }: TagListProps) {\n  const items = isStringArray(tags)\n    ? tags.map((tag) => ({ fieldValue: tag, totalCount: undefined }))\n    : tags;\n  return (\n    <Container {...props}>\n      {items.map((tag) => (\n        <li key={tag.fieldValue}>\n          <Tag value={tag.fieldValue} />\n        </li>\n      ))}\n    </Container>\n  );\n}\n\nconst Container = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: ${(p) => p.theme.dimens.gutter}px;\n\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nexport default TagList;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","h3","ul","li","h2","div","code","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","wrapper","MDXLayout","PostDetailPage","_ref","data","children","frontmatter","sameSeriesPosts","mdx","title","slug","date","tags","series","heroImage","heroImageAlt","image","getImage","Layout","Header","WrittenDate","TagList","SameSeriesPosts","name","current","ThumbnailImage","alt","PostContent","Comments","styled","_taggedTemplateLiteralLoose","GatsbyImage","theme","dimens","gutter","spacing","colors","tag","onTag","MdxContent","Head","_ref2","_image$images","_image$images$fallbac","previewContent","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","ref","useRef","useEffect","scriptTag","document","createElement","entries","repo","label","crossOrigin","async","forEach","key","value","setAttribute","_ref$current","appendChild","id","blockquoteBorder","blockquote","onCode","Container","collapsed","List","ListItem","active","css","setCollapsed","onClick","st","Link","to","map","TagComp","items","fieldValue","totalCount","undefined","Tag","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}