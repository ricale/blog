{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2021-210505-cra-webpack-1-resolve-alias-index-mdx-28ae8348b91f60e3819a.js","mappings":"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","sources":["webpack://ricalelog/./posts/2021/210505-cra-webpack-1-resolve-alias/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\",\n    h2: \"h2\",\n    a: \"a\",\n    p: \"p\",\n    code: \"code\",\n    blockquote: \"blockquote\",\n    button: \"button\",\n    h3: \"h3\",\n    h4: \"h4\",\n    h5: \"h5\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.div, {\n    className: \"md\"\n  }, React.createElement(_components.h2, {\n    id: \"1-서문\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#1-%EC%84%9C%EB%AC%B8\",\n    \"aria-label\": \"1 서문 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1. 서문\"), React.createElement(_components.p, null, \"create-react-app(이하 CRA) 으로 React 웹앱을 만들었다. typescript도 쓰고 싶어서 만들 때 \", React.createElement(_components.code, null, \"--template typescript\"), \" 옵션도 주었다. webpack 설정을 직접 수정하고 싶어서 \", React.createElement(_components.code, null, \"yarn eject\"), \" 커맨드도 실행했다.\"), React.createElement(_components.p, null, \"(위 문단이 이해되지 않는 사람이라면 이 글이 다소 이해하기 어려울 수도 있다. 그럴 경우 \", React.createElement(_components.a, {\n    href: \"https://create-react-app.dev/docs/documentation-intro\"\n  }, \"create-react-app 공식 문서\"), \"를 참고하자.)\"), React.createElement(_components.p, null, \"webpack 직접 설정하기 첫걸음으로, \", React.createElement(_components.code, null, \"resolve.alias\"), \"를 설정해보자.\"), React.createElement(_components.h2, {\n    id: \"2-resolvealias-설정하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-resolvealias-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"2 resolvealias 설정하기 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2. \", React.createElement(_components.code, null, \"resolve.alias\"), \" 설정하기\"), React.createElement(_components.p, null, React.createElement(_components.code, null, \"resolve.alias\"), \" 옵션은 \", React.createElement(_components.a, {\n    href: \"https://webpack.js.org/configuration/resolve/#resolvealias\"\n  }, \"공식 문서\"), \" 에서 아래와 같이 설명하고 있다.\"), React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Create aliases to import or require certain modules more easily.\\n특정 모듈을 더욱 쉽게 import 혹은 require 하기 위해 aliases 를 생성한다.\"), \"\\n\"), React.createElement(_components.p, null, \"말하자면 상대 경로로 불편하게 \", React.createElement(_components.code, null, \"import\"), \"해야 했던 것을 쉽게 \", React.createElement(_components.code, null, \"import\"), \"할 수 있게 해주는 옵션이다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">/* webpack.config.js */</span>\\n\\n<span class=\\\"token comment\\\">// ...</span>\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">//...</span>\\n  <span class=\\\"token literal-property property\\\">resolve</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">alias</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token literal-property property\\\">Utilities</span><span class=\\\"token operator\\\">:</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"src/utilities/\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">/* someCode.js */</span>\\n\\n<span class=\\\"token comment\\\">// // 위 resolve.alias 설정이 없었다면 이렇게 import 해야 하지만</span>\\n<span class=\\\"token comment\\\">// import Utility from '../../utilities/utility';</span>\\n\\n<span class=\\\"token comment\\\">// 설정 덕분에 상대 경로 없이 편하게 import 할 수 있다.</span>\\n<span class=\\\"token keyword\\\">import</span> Utility <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"utilities/utility\\\"</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"CRA로 만든 앱에서도 이 설정을 이용하고 싶다. 어떻게 하면 효율적으로 적용할 수 있을까? 일단 기존 코드를 분석해보자.\"), React.createElement(_components.h3, {\n    id: \"21-기존-resolvealias-분석\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#21-%EA%B8%B0%EC%A1%B4-resolvealias-%EB%B6%84%EC%84%9D\",\n    \"aria-label\": \"21 기존 resolvealias 분석 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1. 기존 \", React.createElement(_components.code, null, \"resolve.alias\"), \" 분석\"), React.createElement(_components.p, null, \"CRA로 만든 앱의 기존 \", React.createElement(_components.code, null, \"resolve.alias\"), \" 는 아래와 같다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token literal-property property\\\">resolve</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n  <span class=\\\"token literal-property property\\\">alias</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// 2.1.1. 'react-native'</span>\\n    <span class=\\\"token comment\\\">// Support React Native Web</span>\\n    <span class=\\\"token string-property property\\\">'react-native'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'react-native-web'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// 2.1.2. profiling</span>\\n    <span class=\\\"token comment\\\">// Allows for better profiling with ReactDevTools</span>\\n    <span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">(</span>isEnvProductionProfile <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token string-property property\\\">'react-dom$'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'react-dom/profiling'</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token string-property property\\\">'scheduler/tracing'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'scheduler/tracing-profiling'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// 2.1.3. webpackAliases</span>\\n    <span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">(</span>modules<span class=\\\"token punctuation\\\">.</span>webpackAliases <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.h4, {\n    id: \"211-react-native\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#211-react-native\",\n    \"aria-label\": \"211 react native permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1.1. \", React.createElement(_components.code, null, \"'react-native'\")), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// Support React Native Web</span>\\n<span class=\\\"token string-property property\\\">'react-native'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'react-native-web'</span><span class=\\\"token punctuation\\\">,</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"이 설정은 react-native-web을 지원하기 위한 설정이다. 지금 우리의 관심사는 아니니 넘어가자.\"), React.createElement(_components.h4, {\n    id: \"212-profiling\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#212-profiling\",\n    \"aria-label\": \"212 profiling permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1.2. profiling\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// Allows for better profiling with ReactDevTools</span>\\n<span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">(</span>isEnvProductionProfile <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string-property property\\\">'react-dom$'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'react-dom/profiling'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token string-property property\\\">'scheduler/tracing'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'scheduler/tracing-profiling'</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"여기서 \", React.createElement(_components.code, null, \"isEnvProductionProfile\"), \" 값은 아래와 같다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> isEnvProductionProfile <span class=\\\"token operator\\\">=</span>\\n  isEnvProduction <span class=\\\"token operator\\\">&amp;&amp;</span> process<span class=\\\"token punctuation\\\">.</span>argv<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">includes</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"--profile\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"프로덕션 환경이면서, webpack 실행 당시 \", React.createElement(_components.code, null, \"--profile\"), \" 옵션을 받았는지 여부를 확인하는 플래그이다.\"), React.createElement(_components.p, null, \"즉 이 웹앱의 성능 분석을 하고자 할 때 사용하는 옵션이다. 자세한 사항은 React 성능 분석 관련 공식 문서(\", React.createElement(_components.a, {\n    href: \"https://reactjs.org/blog/2018/09/10/introducing-the-react-profiler.html\"\n  }, \"Introducing the React Profiler\"), \")를 참고하자.\"), React.createElement(_components.h4, {\n    id: \"213-webpackaliases\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#213-webpackaliases\",\n    \"aria-label\": \"213 webpackaliases permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1.3. \", React.createElement(_components.code, null, \"webpackAliases\")), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">(</span>modules<span class=\\\"token punctuation\\\">.</span>webpackAliases <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"여기서 \", React.createElement(_components.code, null, \"modules\"), \"는 아래와 같다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">const</span> modules <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"./modules\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"그럼 \", React.createElement(_components.code, null, \"./modules.js\"), \" 파일을 찾아가 \", React.createElement(_components.code, null, \"webpackAliases\"), \" 값은 어떻게 지정되어 있는지 살펴보자.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n  <span class=\\\"token literal-property property\\\">webpackAliases</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token function\\\">getWebpackAliases</span><span class=\\\"token punctuation\\\">(</span>options<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, React.createElement(_components.code, null, \"options\"), \"와 \", React.createElement(_components.code, null, \"getWebpackAliases\"), \"는 뭔지 살펴보자.\"), React.createElement(_components.h5, {\n    id: \"2131-options\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2131-options\",\n    \"aria-label\": \"2131 options permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1.3.1. \", React.createElement(_components.code, null, \"options\")), React.createElement(_components.p, null, React.createElement(_components.code, null, \"options\"), \" 값은 아래와 같다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">let</span> config<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>hasTsConfig<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> ts <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sync</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"typescript\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">basedir</span><span class=\\\"token operator\\\">:</span> paths<span class=\\\"token punctuation\\\">.</span>appNodeModules<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  config <span class=\\\"token operator\\\">=</span> ts<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">readConfigFile</span><span class=\\\"token punctuation\\\">(</span>paths<span class=\\\"token punctuation\\\">.</span>appTsConfig<span class=\\\"token punctuation\\\">,</span> ts<span class=\\\"token punctuation\\\">.</span>sys<span class=\\\"token punctuation\\\">.</span>readFile<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>config<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>hasJsConfig<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">/// ...</span>\\n<span class=\\\"token punctuation\\\">}</span>\\nconfig <span class=\\\"token operator\\\">=</span> config <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> options <span class=\\\"token operator\\\">=</span> config<span class=\\\"token punctuation\\\">.</span>compilerOptions <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, React.createElement(_components.code, null, \"tsconfig.json\"), \"의 \", React.createElement(_components.code, null, \"compilerOptions\"), \" 값을 읽어온 것이 \", React.createElement(_components.code, null, \"options\"), \"다.\"), React.createElement(_components.h5, {\n    id: \"2132-getwebpackaliases\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2132-getwebpackaliases\",\n    \"aria-label\": \"2132 getwebpackaliases permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1.3.2. \", React.createElement(_components.code, null, \"getWebpackAliases\")), React.createElement(_components.p, null, React.createElement(_components.code, null, \"getWebpackAliases\"), \" 내용도 보자.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getWebpackAliases</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">options <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> baseUrl <span class=\\\"token operator\\\">=</span> options<span class=\\\"token punctuation\\\">.</span>baseUrl<span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>baseUrl<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> baseUrlResolved <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>paths<span class=\\\"token punctuation\\\">.</span>appPath<span class=\\\"token punctuation\\\">,</span> baseUrl<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">relative</span><span class=\\\"token punctuation\\\">(</span>paths<span class=\\\"token punctuation\\\">.</span>appPath<span class=\\\"token punctuation\\\">,</span> baseUrlResolved<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token literal-property property\\\">src</span><span class=\\\"token operator\\\">:</span> paths<span class=\\\"token punctuation\\\">.</span>appSrc<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"인자로 받은 \", React.createElement(_components.code, null, \"options\"), \"에 \", React.createElement(_components.code, null, \"baseUrl\"), \"값이 있고, 해당 값이 \", React.createElement(_components.code, null, \"path.appPath\"), \"와 같으면, \", React.createElement(_components.code, null, \"{ src: paths.appSrc }\"), \"를 반환하는 함수다.\"), React.createElement(_components.p, null, \"여기서 \", React.createElement(_components.code, null, \"baseUrl\"), \"은 타입스크립트 설정에서 쓰이는 값이다. 이 값은 webpack 설정의 \", React.createElement(_components.code, null, \"resolve.alias\"), \"와 거의 같은 일을 한다. \", React.createElement(_components.code, null, \"import\"), \"할 때 상대 경로를 쓰지 않고 \", React.createElement(_components.code, null, \"baseUrl\"), \"부터 절대 경로로 쓸 수 있게끔 설정해준다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">/* tsconfig.json */</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string-property property\\\">\\\"compilerOptions\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n    <span class=\\\"token string-property property\\\">\\\"baseUrl\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"./\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// // 위 설정이 없었따면 아래처럼 import 해야 한다.</span>\\n<span class=\\\"token comment\\\">// import { Button } from '../../../components';</span>\\n\\n<span class=\\\"token comment\\\">// 위 설정 덕에 아래처럼 import 가능하다.</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Button <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'src/components'</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"문제는 webpack 도 같이 설정을 해주어야 이 기능을 제대로 쓸 수 있다는 것이다. 그래서 위에 나왔던 \", React.createElement(_components.code, null, \"getWebpackAliases\"), \"의 마지막 즈음 문장을 해석하자면\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">relative</span><span class=\\\"token punctuation\\\">(</span>paths<span class=\\\"token punctuation\\\">.</span>appPath<span class=\\\"token punctuation\\\">,</span> baseUrlResolved<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">===</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">src</span><span class=\\\"token operator\\\">:</span> paths<span class=\\\"token punctuation\\\">.</span>appSrc<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, React.createElement(_components.code, null, \"path.appPath\"), \"(앱의 루트 디렉토리의 절대 경로)와 \", React.createElement(_components.code, null, \"baseUrlResolved\"), \"(\", React.createElement(_components.code, null, \"baseUrl\"), \"의 절대 경로)가 같다면 \", React.createElement(_components.code, null, \"webpack.alias.src\"), \"로 쓰일 값을 \", React.createElement(_components.code, null, \"paths.appSrc\"), \"(앱의 \", React.createElement(_components.code, null, \"./src\"), \"의 절대 경로)로 해줘라, 라는 뜻이다.\"), React.createElement(_components.p, null, \"한 마디로 \", React.createElement(_components.code, null, \"...(modules.webpackAliases || {}),\"), \" 이 구문은, 타입스크립트의 \", React.createElement(_components.code, null, \"baseUrl\"), \" 설정값 사용을 webpack 에 적용하기 위한 설정이라고 이해하면 된다.\"), React.createElement(_components.h4, {\n    id: \"214-정리\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#214-%EC%A0%95%EB%A6%AC\",\n    \"aria-label\": \"214 정리 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1.4 정리\"), React.createElement(_components.p, null, \"정리하자면, \", React.createElement(_components.code, null, \"--profile\"), \" 옵션을 주지 않고 빌드 혹은 devServer 실행을 했다고 하면 \", React.createElement(_components.code, null, \"resolve.alias\"), \" 설정은 아래와 같이 된다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token literal-property property\\\">resolve</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">alias</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token string-property property\\\">'react-native'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'react-native-web'</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"만약 여기에 \", React.createElement(_components.code, null, \"tsconfig.json\"), \"에서 \", React.createElement(_components.code, null, \"baseUrl\"), \" 값을 설정해 주었다면 이렇게 설정될 것이다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token literal-property property\\\">resolve</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">alias</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token string-property property\\\">'react-native'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'react-native-web'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token literal-property property\\\">src</span><span class=\\\"token operator\\\">:</span> paths<span class=\\\"token punctuation\\\">.</span>appSrc<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// `./src` 디렉토리의 절대 경로</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.h3, {\n    id: \"22-resolvealias-설정-추가하기\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#22-resolvealias-%EC%84%A4%EC%A0%95-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\",\n    \"aria-label\": \"22 resolvealias 설정 추가하기 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.2. \", React.createElement(_components.code, null, \"resolve.alias\"), \" 설정 추가하기\"), React.createElement(_components.p, null, \"그럼 이제 현재 설정을 해치지 않으면서 자연스럽게 \", React.createElement(_components.code, null, \"resolve.alias\"), \" 설정을 추가해보자.\"), React.createElement(_components.p, null, \"이 글에서는 \", React.createElement(_components.code, null, \"./src/components\"), \" 디렉토리와 \", React.createElement(_components.code, null, \"./src/themes\"), \" 디렉토리를 alias 로 등록할 것이다.\"), React.createElement(_components.p, null, \"타입스크립트 사용 시에는 \", React.createElement(_components.code, null, \"tsconfig.json\"), \"도 같이 수정해주어야 적용이 문제 없이 되기 때문에, 위 2.1.3. 항목에서 보았던 것처럼, \", React.createElement(_components.code, null, \"tsconfig.json\"), \"을 작성하면 자동으로 webpack 설정에도 적용되게끔 진행할 것이다.\"), React.createElement(_components.h4, {\n    id: \"221-tsconfigjson-수정\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#221-tsconfigjson-%EC%88%98%EC%A0%95\",\n    \"aria-label\": \"221 tsconfigjson 수정 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.2.1. \", React.createElement(_components.code, null, \"tsconfig.json\"), \" 수정\"), React.createElement(_components.p, null, React.createElement(_components.code, null, \"compilerOptions\"), \"에 \", React.createElement(_components.code, null, \"baseUrl\"), \"과 \", React.createElement(_components.code, null, \"paths\"), \"를 추가해주자.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token string-property property\\\">\\\"compilerOptions\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token comment\\\">// ...</span>\\n    <span class=\\\"token string-property property\\\">\\\"baseUrl\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"./\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token string-property property\\\">\\\"paths\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token string-property property\\\">\\\"components\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"src/components\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token string-property property\\\">\\\"themes\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"src/themes\\\"</span><span class=\\\"token punctuation\\\">]</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, React.createElement(_components.code, null, \"baseUrl\"), \"은 위에서 한 번 설명했고, \", React.createElement(_components.code, null, \"paths\"), \"는 webpack 의 \", React.createElement(_components.code, null, \"resolve.alias\"), \"와 같은 기능이라고 생각하면 된다. (세부 사항이 좀 다르긴 한데, 자세한 내용은 이 문서\", React.createElement(_components.a, {\n    href: \"https://www.typescriptlang.org/docs/handbook/module-resolution.html\"\n  }, \"TypeScript - Module Resolution\"), \"를 참고하자)\"), React.createElement(_components.h4, {\n    id: \"222-configaliasesjs-작성\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#222-configaliasesjs-%EC%9E%91%EC%84%B1\",\n    \"aria-label\": \"222 configaliasesjs 작성 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.2.2. \", React.createElement(_components.code, null, \"config/aliases.js\"), \" 작성\"), React.createElement(_components.p, null, \"기존의 설정 코드는 최대한 수정하지 않는 방향으로 진행하겠다. \", React.createElement(_components.code, null, \"config/aliases.js\"), \"을 추가해서 설정을 작성하자. 기존 코드를 참고해서 작성할 것이기 때문에 코드 중복이 생기겠지만, 기존 설정 코드를 수정할 생각은 없기 때문에 코멘트만 남기는 정도로 넘어가겠다.\"), React.createElement(_components.p, null, \"우선 \", React.createElement(_components.code, null, \"config/modules.js\"), \"를 참고해서 \", React.createElement(_components.code, null, \"tsconfig.json\"), \" 설정 내용을 가져오는 함수를 작성한다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// NOTE: duplicated with `getModules` in ./modules.js</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getCompilerOptions</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> hasTsConfig <span class=\\\"token operator\\\">=</span> fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">existsSync</span><span class=\\\"token punctuation\\\">(</span>paths<span class=\\\"token punctuation\\\">.</span>appTsConfig<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>hasTsConfig<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"You don't have a tsconfig.json.\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> ts <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">sync</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"typescript\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">basedir</span><span class=\\\"token operator\\\">:</span> paths<span class=\\\"token punctuation\\\">.</span>appNodeModules<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> config <span class=\\\"token operator\\\">=</span>\\n    ts<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">readConfigFile</span><span class=\\\"token punctuation\\\">(</span>paths<span class=\\\"token punctuation\\\">.</span>appTsConfig<span class=\\\"token punctuation\\\">,</span> ts<span class=\\\"token punctuation\\\">.</span>sys<span class=\\\"token punctuation\\\">.</span>readFile<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>config <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> config<span class=\\\"token punctuation\\\">.</span>compilerOptions <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"(타입스크립트를 쓸 것이기 때문에 자바스크립트 관련 코드는 삭제했다.)\"), React.createElement(_components.p, null, \"가져온 \", React.createElement(_components.code, null, \"tsconfig.json\"), \"의 설정을 가지고 alias 내용을 생성하는 코드도 작성한다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getAliases</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> baseUrl<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token literal-property property\\\">paths</span><span class=\\\"token operator\\\">:</span> tsPaths <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getCompilerOptions</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// baseUrl 값이 없으면 tsconfig.json 의 paths 가 제대로 적용되지 않는다.</span>\\n  <span class=\\\"token comment\\\">// 따라서 해당 값으로 aliases 를 설정할 필요도 없다.</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>baseUrl<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token keyword\\\">const</span> baseUrlResolved <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>paths<span class=\\\"token punctuation\\\">.</span>appPath<span class=\\\"token punctuation\\\">,</span> baseUrl<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">//  앱의 루트 디렉토리와 baseUrl 이 동일한 디렉토리가 아니라면</span>\\n  <span class=\\\"token comment\\\">// alias를 설정하지 않는다.</span>\\n  <span class=\\\"token comment\\\">//  이는 `config/modules.js` 에서도 사용하는 예외처리인데,</span>\\n  <span class=\\\"token comment\\\">// convention over configuration 을 따르면서</span>\\n  <span class=\\\"token comment\\\">// 복잡한 예외 처리를 하지 않으려는 의도 같다.</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">relative</span><span class=\\\"token punctuation\\\">(</span>paths<span class=\\\"token punctuation\\\">.</span>appPath<span class=\\\"token punctuation\\\">,</span> baseUrlResolved<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">!==</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n\\n  <span class=\\\"token comment\\\">// `\\\"components\\\": [\\\"src/components\\\"],` 형태를</span>\\n  <span class=\\\"token comment\\\">// `\\\"components\\\": path.resolve(__dirname, `../src/components`)`</span>\\n  <span class=\\\"token comment\\\">// 형태로 변환</span>\\n  <span class=\\\"token keyword\\\">return</span> Object<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">keys</span><span class=\\\"token punctuation\\\">(</span>tsPaths<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">reduce</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">cfg<span class=\\\"token punctuation\\\">,</span> key</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n    cfg<span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> path<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>__dirname<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">../</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>tsPaths<span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">return</span> cfg<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"이제 \", React.createElement(_components.code, null, \"config/modules.js\"), \" 와 같은 방식으로 exports 해주며 마무리하면 된다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\">module<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">getAliases</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.h4, {\n    id: \"223-webpackconfigjs-수정\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#223-webpackconfigjs-%EC%88%98%EC%A0%95\",\n    \"aria-label\": \"223 webpackconfigjs 수정 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.2.3. \", React.createElement(_components.code, null, \"webpack.config.js\"), \" 수정\"), React.createElement(_components.p, null, \"이제 작성한 \", React.createElement(_components.code, null, \"config/aliases.js\"), \" 파일을 \", React.createElement(_components.code, null, \"webpack.config.js\"), \" 안에서 사용해보자.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// 최상단의 온갖 코드를 require 하는 부분 마지막 부분에</span>\\n<span class=\\\"token comment\\\">// 적당히 끼워넣자.</span>\\n<span class=\\\"token keyword\\\">const</span> tsAliases <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'./aliases'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// ...</span>\\n\\n<span class=\\\"token comment\\\">// resolve.alias 부분에 설정을 추가하자</span>\\n      <span class=\\\"token literal-property property\\\">alias</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token string-property property\\\">'react-native'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'react-native-web'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">(</span>isEnvProductionProfile <span class=\\\"token operator\\\">&amp;&amp;</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token string-property property\\\">'react-dom$'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'react-dom/profiling'</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token string-property property\\\">'scheduler/tracing'</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">'scheduler/tracing-profiling'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">(</span>modules<span class=\\\"token punctuation\\\">.</span>webpackAliases <span class=\\\"token operator\\\">||</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token operator\\\">...</span>tsAliases<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">// &lt;- 이 코드를 추가하자</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.h2, {\n    id: \"3-결과\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#3-%EA%B2%B0%EA%B3%BC\",\n    \"aria-label\": \"3 결과 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3. 결과\"), React.createElement(_components.p, null, \"이제 \", React.createElement(_components.code, null, \"tsconfig.json\"), \" 파일의 \", React.createElement(_components.code, null, \"compilerOptions.paths\"), \" 값을 가지고 webpack 의 \", React.createElement(_components.code, null, \"resolve.alias\"), \" 옵션을 자동 설정할 수 있게 되었다. 실제 프로젝트에 적용된 코드가 궁금하다면 아래 소스 코드들을 참고하자.\"), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/ricale/ricale.github.io/blob/develop/tsconfig.json\"\n  }, \"ricale.github.io/tsconfig.json\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/ricale/ricale.github.io/blob/develop/config/aliases.js\"\n  }, \"ricale.github.io/config/aliases.js\")), \"\\n\")), \"\\n\", React.createElement(_components.div, {\n    className: \"toc\"\n  }, React.createElement(_components.p, null, \"목차\"), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#1-%EC%84%9C%EB%AC%B8\"\n  }, \"1. 서문\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#2-resolvealias-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\"\n  }, \"2. \", React.createElement(_components.code, null, \"resolve.alias\"), \" 설정하기\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#21-%EA%B8%B0%EC%A1%B4-resolvealias-%EB%B6%84%EC%84%9D\"\n  }, \"2.1. 기존 \", React.createElement(_components.code, null, \"resolve.alias\"), \" 분석\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#211-react-native\"\n  }, \"2.1.1. \", React.createElement(_components.code, null, \"'react-native'\"))), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#212-profiling\"\n  }, \"2.1.2. profiling\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#213-webpackaliases\"\n  }, \"2.1.3. \", React.createElement(_components.code, null, \"webpackAliases\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#2131-options\"\n  }, \"2.1.3.1. \", React.createElement(_components.code, null, \"options\"))), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#2132-getwebpackaliases\"\n  }, \"2.1.3.2. \", React.createElement(_components.code, null, \"getWebpackAliases\"))), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#214-%EC%A0%95%EB%A6%AC\"\n  }, \"2.1.4 정리\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#22-resolvealias-%EC%84%A4%EC%A0%95-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\"\n  }, \"2.2. \", React.createElement(_components.code, null, \"resolve.alias\"), \" 설정 추가하기\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#221-tsconfigjson-%EC%88%98%EC%A0%95\"\n  }, \"2.2.1. \", React.createElement(_components.code, null, \"tsconfig.json\"), \" 수정\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#222-configaliasesjs-%EC%9E%91%EC%84%B1\"\n  }, \"2.2.2. \", React.createElement(_components.code, null, \"config/aliases.js\"), \" 작성\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#223-webpackconfigjs-%EC%88%98%EC%A0%95\"\n  }, \"2.2.3. \", React.createElement(_components.code, null, \"webpack.config.js\"), \" 수정\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#3-%EA%B2%B0%EA%B3%BC\"\n  }, \"3. 결과\")), \"\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2021/210505-cra-webpack-1-resolve-alias/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nimport SameSeriesPosts from \"../../components/SameSeriesPosts\";\nimport TagList from \"../../components/TagList\";\nimport highlightCurrentHeading from \"../../utils/highlightCurrentHeading\";\nimport PostImage from \"../../components/PostImage\";\nfunction PostDetailPage(_ref) {\n  let {data, children} = _ref;\n  const ref = React.useRef();\n  const {frontmatter, sameSeriesPosts} = data.mdx;\n  const {title, slug, date, tags, series, heroImage, heroImageAlt} = frontmatter;\n  React.useEffect(() => {\n    var _ref$current;\n    const headingElements = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.querySelectorAll(\".md h1, .md h2, .md h3, .md h4, .md h5, .md h6\");\n    const observer = new IntersectionObserver(() => highlightCurrentHeading(ref, headingElements), {\n      rootMargin: \"0px 0px -90% 0px\",\n      threshold: [0, 1.0]\n    });\n    headingElements === null || headingElements === void 0 ? void 0 : headingElements.forEach(element => observer.observe(element));\n    return () => observer.disconnect();\n  }, []);\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, React.createElement(Link, {\n    to: \"/posts/\" + slug\n  }, title)), React.createElement(WrittenDate, null, date), React.createElement(TagList, {\n    tags: tags\n  })), React.createElement(SameSeriesPosts, {\n    name: series,\n    data: sameSeriesPosts,\n    current: slug\n  }), React.createElement(PostImage, {\n    data: heroImage,\n    alt: heroImageAlt\n  }), React.createElement(PostContent, {\n    ref: ref\n  }, children), React.createElement(Comments, null));\n}\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n\\n    > a {\\n      color: \", \";\\n    }\\n  }\\n\"])), p => p.theme.colors.onBackground);\nconst WrittenDate = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst PostContent = styled(MdxContent)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 60px;\\n\"])));\nconst query = \"2677585968\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage, previewContent}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: previewContent !== null && previewContent !== void 0 ? previewContent : excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","div","h2","a","p","code","blockquote","button","h3","h4","h5","ul","li","_provideComponents","components","React","className","id","style","position","href","dangerouslySetInnerHTML","__html","_templateObject","_templateObject2","_templateObject3","wrapper","MDXLayout","PostDetailPage","_ref","data","children","ref","frontmatter","sameSeriesPosts","mdx","title","slug","date","tags","series","heroImage","heroImageAlt","_ref$current","headingElements","current","querySelectorAll","observer","IntersectionObserver","highlightCurrentHeading","rootMargin","threshold","forEach","element","observe","disconnect","Layout","Header","Link","to","WrittenDate","TagList","SameSeriesPosts","name","PostImage","alt","PostContent","Comments","styled","_taggedTemplateLiteralLoose","theme","colors","onBackground","MdxContent","Head","_ref2","_image$images","_image$images$fallbac","previewContent","excerpt","image","getImage","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}