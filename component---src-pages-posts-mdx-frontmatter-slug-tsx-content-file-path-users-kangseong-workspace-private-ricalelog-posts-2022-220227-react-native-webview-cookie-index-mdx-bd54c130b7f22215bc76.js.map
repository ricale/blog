{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2022-220227-react-native-webview-cookie-index-mdx-bd54c130b7f22215bc76.js","mappings":"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","sources":["webpack://ricalelog/./posts/2022/220227-react-native-webview-cookie/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"우리 회사의 앱은 \", React.createElement(_components.a, {\n    href: \"https://github.com/react-native-webview/react-native-webview\"\n  }, \"React Native WebView\"), \" 를 사용해 하이브리드 앱으로 구현되어 있다. 최근 웹앱 쪽에서 로그인 인증 토큰을 쿠키로 유지하는 업데이트를 적용했는데, RN 쪽에서 별안간 쿠키가 유지되지 않는 버그가 발견되었다.\"), \"\\n\", React.createElement(_components.h2, null, \"1. 버그 개요\"), \"\\n\", React.createElement(_components.p, null, \"일단 브라우저 상에서 웹앱을 사용할 때는 쿠키에 관한 이슈가 전혀 없다.\"), \"\\n\", React.createElement(_components.p, null, \"앱에서도 사용하는 동안에는 문제가 없다. 문제는 앱 프로세스를 완전히 종료한 뒤 다시 실행했을 때다. 이 때 쿠키에 저장되어 있던 값들이 롤백된다. 누군가는 로그인이 유지된다는 걸로 봐서는 항상 롤백되는 건 아닌 것 같은데, 규칙성을 찾기가 어려웠다.\"), \"\\n\", React.createElement(_components.p, null, \"이 버그 때문에 쿠키 값이 유지되지 않으면서 로그인이 풀린다는 제보가 잇따르기 시작했다.\"), \"\\n\", React.createElement(_components.p, null, \"React Native WebView 리파지토리의 \", React.createElement(_components.a, {\n    href: \"https://github.com/react-native-webview/react-native-webview/issues?q=is%3Aissue+cookie\"\n  }, \"이슈들\"), \"을 살펴봐도, 우리처럼 쿠키 때문에 고생하고 있는 사람들은 제법 있었지만 해결책은 보이지 않았다.\"), \"\\n\", React.createElement(_components.h2, null, \"2. 해결 과정\"), \"\\n\", React.createElement(_components.h3, null, \"2.1. React Native WebView prop 확인\"), \"\\n\", React.createElement(_components.p, null, \"일단 혹시나 \", React.createElement(_components.a, {\n    href: \"https://github.com/react-native-webview/react-native-webview/blob/master/docs/Reference.md\"\n  }, \"React Native WebView 에서 제공하는 prop\"), \" 으로 해결할 수 있을까 싶어 쿠키와 관련된 prop 들 (\", React.createElement(_components.code, null, \"incognite\"), \", \", React.createElement(_components.code, null, \"sharedCookiesEnabled\"), \", \", React.createElement(_components.code, null, \"thirdPartyCookiesEnabled\"), \") 을 적용해보았지만 해결되지 않았다.\"), \"\\n\", React.createElement(_components.p, null, \"고민 끝에 우리는 React Native WebView 의 버그라고 판단하고 우회책을 찾기로 했다.\"), \"\\n\", React.createElement(_components.h3, null, \"2.2. 쿠키를 RN 에 별도로 저장해두자.\"), \"\\n\", React.createElement(_components.p, null, \"우회방법으로 웹앱 쪽에서 쿠키 값이 변경될 때마다 \", React.createElement(_components.a, {\n    href: \"https://github.com/react-native-webview/react-native-webview/blob/master/docs/Reference.md#postmessagestr\"\n  }, React.createElement(_components.code, null, \"postMessage()\")), \" 로 쿠키 전문을 보내주는 방법을 선택했다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-js\"\n  }, \"postMessage(JSON.stringify({ type: \\\"cookie\\\", content: document.cookie }));\\n\")), \"\\n\", React.createElement(_components.p, null, \"쿠키를 받으면 RN 쪽에서는 AsyncStorage 등에 저장해두었다가 앱의 프로세스가 재실행될 때 웹뷰의 헤더에 쿠키를 넣어주었다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"const [source, setSource] = useState({ uri: SOME_URI });\\n// 저장해놓은 쿠키가 있으면 source 에 저장한다.\\nuseEffect(() => {\\n  AsyncStorage.getItem('cookie').then((content) => {\\n    setSource(st => ({\\n      ...st,\\n      headers: res ? { Cookie: JSON.parse(content) } : null\\n    }));\\n  });\\n}, []);\\n// ...\\nreturn (\\n  <WebView\\n    // ...\\n    incognite // <- incognite 가 없으면 source.headers.Cookie 값이 적용되지 않는다. 이유는 아직 불명\\n    source={source}\\n    onMessage={(evt) => {\\n      const { type, content } = evt.nativeEvent.data;\\n      // 웹앱으로부터 postMessage 로 쿠키가 오면 저장해둔다.\\n      if(type === 'cookie') {\\n        AsyncStorage.setItem('cookie', content);\\n        return;\\n      }\\n      // ...\\n    }}\\n    />\\n\")), \"\\n\", React.createElement(_components.h3, null, \"2.3. 그럼에도 이슈가 남아있다.\"), \"\\n\", React.createElement(_components.p, null, \"신기하게도 이렇게 해도 때때로 웹앱의 \", React.createElement(_components.code, null, \"postMessage()\"), \" 를 통해 넘어온 쿠키 값에서 인증 리프레시 토큰 값만 누락되어 넘어오는 현상이 있었다 (하필이면 제일 중요한 녀석이..). 이것 또한 원인을 찾지 못하고 결국 임시 방편으로 \\\"액세스 토큰과 리프레시 토큰 중 하나라도 값이 있으면 이전 쿠키로부터 다른 하나의 값을 복구하도록\\\" 로직을 넣었다.\"), \"\\n\", React.createElement(_components.h2, null, \"3. 근본적인 해결책\"), \"\\n\", React.createElement(_components.p, null, \"회사에 iOS/안드로이드 네이티브 개발자가 없어서 라이브러리를 뜯어가며 근본적인 해결책을 찾는 것은 어려울 것 같다. 일단 임시 방편으로 대응하면서 React Native WebView 가 업데이트 되기를 기다리는 수밖에 없는 것 같다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2022/220227-react-native-webview-cookie/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {title, date, tags, heroImage, heroImageAlt} = data.mdx.frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, title), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag)))), React.createElement(\"div\", null, date), !!image && React.createElement(GatsbyImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children), React.createElement(Comments, null));\n};\nconst Tags = styled.ul(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px \", \"px\\n      0px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.thin, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"3533977744\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","h2","h3","code","pre","_provideComponents","components","React","href","className","_templateObject","wrapper","MDXLayout","PostDetailPage","_ref","data","children","title","date","tags","heroImage","heroImageAlt","mdx","frontmatter","image","getImage","Layout","Tags","map","tag","key","Link","to","GatsbyImage","alt","MdxContent","Comments","styled","_taggedTemplateLiteralLoose","theme","dimens","gutter","thin","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","slug","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}