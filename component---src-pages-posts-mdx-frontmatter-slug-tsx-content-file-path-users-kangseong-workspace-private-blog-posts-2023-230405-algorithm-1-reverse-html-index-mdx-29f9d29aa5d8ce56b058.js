"use strict";(self.webpackChunkricalelog=self.webpackChunkricalelog||[]).push([[7063],{8493:function(n,a,s){s.r(a),s.d(a,{Head:function(){return B},default:function(){return Z}});var t=s(1151),e=s(7294);function o(n){const a=Object.assign({div:"div",h3:"h3",a:"a",ul:"ul",li:"li",h1:"h1",p:"p",button:"button",code:"code",em:"em"},(0,t.ah)(),n.components);return e.createElement(e.Fragment,null,e.createElement(a.div,{className:"md"},e.createElement(a.h3,{id:"시리즈-알고리즘-문제풀기-개요",style:{position:"relative"}},e.createElement(a.a,{href:"#%EC%8B%9C%EB%A6%AC%EC%A6%88-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%AC%B8%EC%A0%9C%ED%92%80%EA%B8%B0-%EA%B0%9C%EC%9A%94","aria-label":"시리즈 알고리즘 문제풀기 개요 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),'시리즈 "알고리즘 문제풀기" 개요'),e.createElement(a.ul,null,"\n",e.createElement(a.li,null,"1~2주 (최소) 1개 문제 풀기를 목표로 한다."),"\n",e.createElement(a.li,null,"JavaScript 로 푼다."),"\n"),e.createElement(a.h1,{id:"문제",style:{position:"relative"}},e.createElement(a.a,{href:"#%EB%AC%B8%EC%A0%9C","aria-label":"문제 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"문제"),e.createElement(a.p,null,"HTML 문자열이 아래와 같이 있을 때"),e.createElement(a.div,{className:"codeblock-container"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="html"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>h<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>el<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span>lo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>w<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>orld\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre></div>'}}),e.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),e.createElement(a.p,null,"아래처럼 HTML 태그들의 적용 범위는 그대로 두면 문자열을 뒤집자."),e.createElement(a.div,{className:"codeblock-container"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="html"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>\n  dlro<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>w<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>ol<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>le<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span>h<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre></div>'}}),e.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),e.createElement(a.p,null,"반드시 전문은 특정 태그로 감싸여 있다고 (위 예제에서는 ",e.createElement(a.code,null,"p")," 태그로 전문이 감싸여 있다) 가정한다."),e.createElement(a.h1,{id:"접근",style:{position:"relative"}},e.createElement(a.a,{href:"#%EC%A0%91%EA%B7%BC","aria-label":"접근 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"접근"),e.createElement(a.p,null,"처음에는 태그들을 임의의 토큰들로 치환한 다음에 문자열을 싹 뒤집고 다시 토큰들을 태그로 치환하는 방법을 생각했다. 하지만 그렇게 하기에는 ",e.createElement(a.em,null,"토큰은 뒤집어지지 않도록")," 또 별도의 처리를 해줘야 했기에, 그냥 태그인 상태로 작업하는 것과 별다를 것이 없다는 결론을 내렸다. 게다가 토큰으로 변경하는 것으로는 태그가 많이 중첩될 경우 처리가 까다로웠다."),e.createElement(a.p,null,"그 다음으로 생각한 건 문자열을 태그 혹은 태그가 아닌 문자열로 모두 쪼갠 뒤, 해당 문자열을 차례로 스택에 넣다가 닫는 태그를 넣을 차례가 되었을 때 바로 직전 여는 태그까지 스택에서 pop 한 뒤 뒤집는 처리를 해서 집어넣으면 어떨까 하는 것이었다."),e.createElement(a.p,null,"예를 들면 문제에 나온 문자열을 아래처럼 쪼갠 뒤,"),e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">&lt;p>\n&lt;b>\nh\n&lt;font color="red">\nel\n&lt;/font>\nlo\n&lt;/b>\n&lt;i>\nw\n&lt;/i>\norld\n&lt;/p></code></pre></div>'}}),e.createElement(a.p,null,"위부터 하나씩 스택에 넣다가 닫는 태그를 발견한 순간"),e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">stack=[\n  &lt;p>\n  &lt;b>\n  h\n  &lt;font color="red">\n  el                    &lt;- 차례대로 스택에 밀어넣다가\n]\n\n&lt;/font>   &lt;- 닫는 태그 발견\nlo\n&lt;/b>\n// ...</code></pre></div>'}}),e.createElement(a.p,null,"여는 태그까지 pop 해서 꺼낸 뒤 합쳐서 다시 스택에 넣는 것는다."),e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">stack=[\n  &lt;p>\n  &lt;b>\n  he\n  &lt;font color="red">le&lt;/font>  &lt;- 여는 태그까지 스택에서 모두 pop 해와서 합친 뒤 다시 스택에 넣는다.\n                                  내용물은 뒤집어서 넣는 것이 핵심\n]\no\n&lt;/b>\n&lt;i>\nw\n&lt;/i>\norld\n&lt;/p></code></pre></div>'}}),e.createElement(a.p,null,"이 과정을 반복하면 되겠다 싶었다. 아직 디테일이 부족하지만 그건 풀면서 해결하자는 생각에 바로 코드 작성을 진행했다."),e.createElement(a.h1,{id:"풀이",style:{position:"relative"}},e.createElement(a.a,{href:"#%ED%92%80%EC%9D%B4","aria-label":"풀이 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"풀이"),e.createElement(a.p,null,"결국 위 풀이 과정에서 생각한 것과 거의 동일한 방법으로 풀었다. 딱 하나 다른 것은 문자열을 바로 스택에 넣는 게 아니라 객체로 만들어 넣는 것이다. 이러면 들어간게 태그인지 문자열인지 이미 한 번 합쳐진 결과물인지 구분이 가능하고, 유연하게 합쳐나갈 수 있다."),e.createElement(a.div,{className:"codeblock-container"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre style="counter-reset: linenumber 0" class="language-javascript line-numbers"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">solution</span><span class="token punctuation">(</span><span class="token parameter">html</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">while</span> <span class="token punctuation">(</span>html<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 여는 태그인지 닫는 태그인지 관계 없이, 가장 앞의 태그 문자열을 찾는다.</span>\n    <span class="token keyword">const</span> tag <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;[^>]+></span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token operator">?.</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 태그 문자열이 없으면 반복문을 나간다.</span>\n    <span class="token comment">// 정상적인 입력이라면 이 조건에 해당될 일은 없다. 무조건 4 라인의 조건에 의해서만 while 문을 빠져나간다.</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tag<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 6 라인에서 찾은 tag 문자열이 html 에서 어디에 위치하는 지 찾는다.</span>\n    <span class="token keyword">const</span> tagIndex <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// 만약 위치가 0보다 크다면 태그 앞에 태그가 아닌 문자열이 존재한다는 뜻이다.</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>tagIndex <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 태그가 아닌 문자열을 스택에 넣는다.</span>\n      <span class="token comment">// 문자열의 경우에는 스택에 넣을 때 미리 뒤집어서 넣는다.</span>\n      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">"string"</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token function">reverseString</span><span class="token punctuation">(</span>html<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> tagIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token comment">// 스택에 넣은 문자열은 html 에서 제거한다.</span>\n      html <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>tagIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// tag 가 여는 태그인지 닫는 태그인지 확인한다.</span>\n    <span class="token keyword">const</span> tagType <span class="token operator">=</span> tag<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">&lt;\\/</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">"close"</span> <span class="token operator">:</span> <span class="token string">"open"</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>tagType <span class="token operator">===</span> <span class="token string">"open"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 여는 태그였다면 스택에 넣는다.</span>\n      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> tagType<span class="token punctuation">,</span> <span class="token literal-property property">content</span><span class="token operator">:</span> tag <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n      <span class="token comment">// 닫는 태그였다면 직전 여는 태그부터 이 태그까지 사이에 있는 컨텐츠들을 뒤집는다.</span>\n      <span class="token comment">// `reverseContent` 함수에 대한 자세한 설명은 43 라인을 보자.</span>\n      <span class="token function">reverseContent</span><span class="token punctuation">(</span>stack<span class="token punctuation">,</span> tag<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    html <span class="token operator">=</span> html<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> stack<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>content<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// 37 라인에서 넘어온다.</span>\n<span class="token keyword">function</span> <span class="token function">reverseContent</span><span class="token punctuation">(</span><span class="token parameter">stack<span class="token punctuation">,</span> closeTag</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> contents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token comment">// 정상적인 stack 이라면 여는 태그가 무조건 하나 이상 존재하기 때문에</span>\n  <span class="token comment">// 54 라인 if 문에 걸려서 이 while 문을 빠져나가게 된다.</span>\n  <span class="token comment">// 따라서 while 문의 조건이 true 인 것은 문제 없다.</span>\n  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// 스택에서 pop 한다.</span>\n    <span class="token keyword">const</span> item <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// pop 한 아이템이 여는 태그였다면</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">\'open\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'contents\'</span><span class="token punctuation">,</span>\n        <span class="token comment">// 여태까지 pop 했던 아이템들을 모두 연결한다.</span>\n        <span class="token comment">// pop 할 때마다 contents 에 push 해두었기 때문에 .join(\'\') 으로 연결만 해도</span>\n        <span class="token comment">// 자연스럽게 순서가 반대가 되어 합쳐진다.</span>\n        <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>contents<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>closeTag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token comment">// 그리고 while 문을 빠져나간다.</span>\n      <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// pop 한 아이템이 여는 태그가 아니었다면 contents 에 아이템을 밀어넣는다.</span>\n    contents<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>content<span class="token punctuation">)</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">function</span> <span class="token function">reverseString</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> string<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">\'\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code><span aria-hidden="true" class="line-numbers-rows" style="white-space: normal; width: auto; left: 0;"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>'}}),e.createElement(a.button,{className:"codeblock-copy-button"},"COPY")),e.createElement(a.h1,{id:"후기",style:{position:"relative"}},e.createElement(a.a,{href:"#%ED%9B%84%EA%B8%B0","aria-label":"후기 permalink",className:"anchor before"},e.createElement(a.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"후기"),e.createElement(a.p,null,"처음에는 평소에 본 적 없는 문제라 당황한데다가 쓸데없이 토큰에 꽂혀서 제대로 문제를 풀지 못했다. 잠시 문제를 치워뒀다가 다시 보니 쉬운 방법이 있었는데 돌아가고 있었다는 걸 깨달았고 빨리 해결할 수 있었다."),e.createElement(a.p,null,'따라서 오늘의 교훈은 "안 풀릴 때는 잠시 딴 일을 하다 돌아오자." ...물론 시험이나 기술 면접 같은 곳에서는 안 통할 이야기긴 하다.')),"\n",e.createElement(a.div,{className:"toc"},e.createElement(a.p,null,"목차"),e.createElement(a.ul,null,"\n",e.createElement(a.li,null,"\n",e.createElement(a.ul,null,"\n",e.createElement(a.li,null,"\n",e.createElement(a.ul,null,"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#%EC%8B%9C%EB%A6%AC%EC%A6%88-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%AC%B8%EC%A0%9C%ED%92%80%EA%B8%B0-%EA%B0%9C%EC%9A%94"},'시리즈 "알고리즘 문제풀기" 개요')),"\n"),"\n"),"\n"),"\n"),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#%EB%AC%B8%EC%A0%9C"},"문제")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#%EC%A0%91%EA%B7%BC"},"접근")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#%ED%92%80%EC%9D%B4"},"풀이")),"\n",e.createElement(a.li,null,e.createElement(a.a,{href:"#%ED%9B%84%EA%B8%B0"},"후기")),"\n")))}var p,l,c,i=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.ah)(),n.components);return a?e.createElement(a,n,e.createElement(o,n)):o(n)},r=s(1880),u=s(1883),k=s(3723),d=s(9178),m=s(3904),g=s(891),h=s(3234),f=s(6117),v=s(5777),b=s(7178),x=s(5924);function E(n){let{data:a,children:s}=n;const t=e.useRef(),{frontmatter:o,sameSeriesPosts:p}=a.mdx,{title:l,slug:c,date:i,series:r}=o;return e.useEffect((()=>{var n;const a=null===(n=t.current)||void 0===n?void 0:n.querySelectorAll(".md h1, .md h2, .md h3, .md h4, .md h5, .md h6"),s=new IntersectionObserver((()=>(0,x.Z)(t,a)),{rootMargin:"0px 0px -90% 0px",threshold:[0,1]});return null==a||a.forEach((n=>s.observe(n))),()=>s.disconnect()}),[]),e.createElement(d.Z,null,e.createElement(y,null,e.createElement("h1",null,e.createElement(u.Link,{to:"/posts/"+c},l)),e.createElement(w,null,i)),e.createElement(b.Z,{name:r,data:p,current:c}),e.createElement(C,{ref:t},s),e.createElement(f.Z,{data:p,current:c}),e.createElement(v.Z,null))}const y=g.ZP.div(p||(p=(0,r.Z)(["\n  margin: 72px 0 84px;\n  padding: 0 32px;\n\n  & > h1 {\n    font-size: 2.5rem;\n    word-break: keep-all;\n    margin: 0;\n\n    > a {\n      color: ",";\n    }\n  }\n"])),(n=>n.theme.colors.onBackground)),w=g.ZP.div(l||(l=(0,r.Z)(["\n  margin-left: 2px;\n"]))),C=(0,g.ZP)(h.Z)(c||(c=(0,r.Z)(["\n  margin-bottom: 120px;\n"]))),B=n=>{var a,s;let{data:t}=n;const{frontmatter:{title:o,slug:p,tags:l,heroImage:c,previewContent:i},excerpt:r}=t.mdx,u=c?(0,k.c)(c):null;return e.createElement(m.Z,{title:o,description:null!=i?i:r,path:"posts/"+p,thumbnail:null==u||null===(a=u.images)||void 0===a||null===(s=a.fallback)||void 0===s?void 0:s.src,keywords:l,ogType:"article"})};function Z(n){return e.createElement(E,n,e.createElement(i,n))}},5777:function(n,a,s){var t=s(7294);a.Z=function(){const n=(0,t.useRef)(null);return(0,t.useEffect)((()=>{var a;const s=document.createElement("script");Object.entries({src:"https://giscus.app/client.js","data-repo":"ricale/blog","data-repo-id":"R_kgDOIvqo5g","data-category":"Giscus","data-category-id":"DIC_kwDOIvqo5s4CT7fR","data-mapping":"pathname","data-strict":"0","data-reactions-enabled":"1","data-emit-metadata":"0","data-input-position":"top","data-theme":"dark","data-lang":"ko",crossorigin:"anonymous",async:"true"}).forEach((n=>{let[a,t]=n;s.setAttribute(a,t)})),null===(a=n.current)||void 0===a||a.appendChild(s)}),[]),t.createElement("div",{id:"comments",ref:n})}},3234:function(n,a,s){s.d(a,{Z:function(){return y}});var t,e=s(1880),o=s(891);var p,l=(0,o.iv)(t||(t=(0,e.Z)(["\n  blockquote {\n    position: relative;\n\n    margin-left: 0;\n    margin-right: 0;\n    margin-bottom: 16px;\n    padding: 16px 32px;\n    border-left: 1px solid ",";\n    border-left-width: 10px;\n\n    background-color: ",";\n\n    > :first-child {\n      margin-top: 0;\n    }\n    > :last-child {\n      margin-bottom: 0;\n    }\n    > ul,\n    > ol {\n      padding-left: 20px;\n    }\n  }\n\n  blockquote:before {\n    content: '\"';\n\n    position: absolute;\n    top: -10px;\n    left: 5px;\n\n    font-size: 3em;\n    color: ",";\n  }\n  blockquote:after {\n    content: '\"';\n\n    position: absolute;\n    bottom: -30px;\n    right: 5px;\n\n    font-size: 3em;\n    color: ",";\n  }\n"])),(n=>n.theme.colors.blockquoteBorder),(n=>n.theme.colors.blockquote),(n=>n.theme.colors.blockquoteBorder),(n=>n.theme.colors.blockquoteBorder));var c,i=(0,o.iv)(p||(p=(0,e.Z)(['\n  pre[class*="language-"] {\n    margin: 0 0 16px;\n  }\n\n  code[class*="language-"] {\n    font-size: 0.85rem;\n  }\n\n  .gatsby-highlight-code-line {\n    display: block;\n\n    margin-left: -1em;\n    margin-right: -1em;\n    padding-top: 1.8px;\n    padding-bottom: 1.8px;\n    padding-left: 0.75em;\n    padding-right: 1em;\n    border-left: 0.25em solid ',";\n\n    background-color: ",";\n  }\n\n  .line-numbers .line-numbers-rows {\n    bottom: 0;\n    padding-top: 17.5px;\n    padding-left: 12px;\n  }\n\n  pre > code {\n    padding: unset;\n    border-radius: unset;\n    background-color: unset;\n    color: unset;\n  }\n  .codeblock-container {\n    position: relative;\n    padding-top: 0.1px;\n    .codeblock-title {\n      position: absolute;\n      top: 0px;\n      left: 8px;\n      z-index: 1;\n\n      padding: 2px 8px;\n\n      font-size: 0.875rem;\n      font-family: consolas, monospace;\n      background-color: ",";\n    }\n    .codeblock-copy-button {\n      position: absolute;\n      top: 0;\n      right: 0;\n\n      padding: 4px 6px;\n      border: 0;\n\n      font-size: 0.75rem;\n      color: ",';\n      text-decoration: underline;\n\n      background-color: transparent;\n      cursor: pointer;\n    }\n    .codeblock-title + div pre[class*="language-"] {\n      margin-top: 8px;\n    }\n    .codeblock-title + div + .codeblock-copy-button {\n      top: 8px;\n    }\n  }\n\n  @media (max-width: 500px) {\n    .codeblock-container {\n      padding-top: 0;\n      .codeblock-title {\n        position: static;\n        background-color: ',";\n      }\n    }\n  }\n"])),(n=>n.theme.colors.codeblockHighlightBorder),(n=>n.theme.colors.codeblockHighlight),(n=>n.theme.colors.codeblockTitle),(n=>n.theme.colors.codeblockCopyButtonLabel),(n=>n.theme.colors.codeblockTitleInMobile));var r,u=(0,o.iv)(c||(c=(0,e.Z)(["\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 24px;\n    margin-bottom: 16px;\n    line-height: 1.25;\n    font-weight: 600;\n\n    > a.anchor path {\n      fill: white;\n    }\n  }\n\n  h1 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid ",";\n    font-size: 2.125em;\n  }\n\n  h2 {\n    padding-bottom: 0.3em;\n    border-bottom: 1px solid ",";\n    font-size: 1.75em;\n  }\n\n  h3 {\n    font-size: 1.5em;\n  }\n\n  h4 {\n    font-size: 1.25em;\n  }\n\n  h5 {\n    font-size: 1em;\n  }\n\n  h6 {\n    font-size: 0.9375em;\n  }\n"])),(n=>n.theme.colors.headingBorder),(n=>n.theme.colors.headingBorder));var k,d=(0,o.iv)(r||(r=(0,e.Z)(["\n  img {\n    border: 1px solid ",";\n  }\n\n  img:not([class]) {\n    max-width: 600px;\n    margin-bottom: 16px;\n  }\n\n  .gatsby-resp-image-figure {\n    margin: 0 0 16px;\n    .gatsby-resp-image-wrapper {\n      margin-bottom: 0;\n    }\n    .gatsby-resp-image-figcaption {\n      margin-top: 4px;\n      text-align: center;\n      font-size: 0.875rem;\n      color: ",";\n    }\n  }\n  .gatsby-resp-image-wrapper {\n    margin-bottom: 16px;\n  }\n"])),(n=>n.theme.colors.imageBorder),(n=>n.theme.colors.imageCaptionText));var m,g=(0,o.iv)(k||(k=(0,e.Z)(["\n  ul,\n  ol {\n    margin-bottom: 16px;\n  }\n  li > ul,\n  li > ol {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n"])));var h,f,v=(0,o.iv)(m||(m=(0,e.Z)(["\n  table {\n    width: max-content;\n    max-width: 100%;\n    margin-bottom: 16px;\n    border-collapse: collapse;\n    td,\n    th {\n      padding: 6px 13px;\n      border: 1px solid ",";\n    }\n  }\n"])),(n=>n.theme.colors.tableBorder)),b=s(5785);var x,E=(0,o.iv)(h||(h=(0,e.Z)(["\n  > .md {\n    order: 1;\n  }\n\n  > .toc {\n    font-size: 0.875rem;\n    > ul {\n      margin: 0;\n      padding: 0;\n      list-style: none;\n\n      ul {\n        list-style: none;\n      }\n    }\n  }\n  @media (max-width: 1099px) {\n    > .toc {\n      display: none;\n    }\n  }\n  @media (min-width: 1100px) {\n    > .toc {\n      position: absolute;\n      top: 8px;\n      left: calc(50% + 400px);\n      height: 100%;\n      > p {\n        display: none;\n      }\n      > ul {\n        position: sticky;\n        top: 10px;\n        padding-left: 8px;\n        border-left: 1px solid ",";\n\n        white-space: nowrap;\n\n        a {\n          color: ",";\n        }\n        a > code {\n          color: ",";\n        }\n        code {\n          white-space: nowrap;\n        }\n        overflow: hidden;\n        ul {\n          padding-left: 15px;\n        }\n      }\n\n      .highlight {\n        color: ",";\n        text-decoration: underline;\n        code {\n          color: ",";\n          text-decoration: underline;\n        }\n      }\n    }\n  }\n  > .toc {\n    ","\n\n    @media (min-width: ","px) {\n      > ul {\n        white-space: inherit;\n        code {\n          white-space: inherit;\n        }\n      }\n    }\n  }\n"])),(n=>n.theme.colors.inactiveText),(n=>n.theme.colors.inactiveText),(n=>n.theme.colors.inactiveText),(n=>n.theme.colors.onBackground),(n=>n.theme.colors.onBackground),(0,b.Z)(new Array(20)).map(((n,a)=>(0,o.iv)(f||(f=(0,e.Z)(["\n          @media (min-width: ","px) {\n            width: ","px;\n          }\n        "])),1100+20*(a+1),(1100+20*a-800)/2))),1100);var y=o.ZP.div(x||(x=(0,e.Z)(["\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  font-size: 16px;\n  line-height: 1.5;\n\n  ","\n  ","\n  ","\n  ","\n  ","\n  ","\n  ","\n\n  p {\n    margin-top: 0;\n    margin-bottom: 16px;\n  }\n\n  hr {\n    height: 0.25em;\n    margin: 24px 0;\n    border: 0;\n\n    background-color: ",";\n  }\n\n  code {\n    padding: 0.2em 0.4em;\n    border-radius: 2px;\n\n    font-size: 0.85em;\n\n    background-color: ",";\n    color: ",";\n    white-space: break-spaces;\n  }\n\n  a > code {\n    color: skyblue;\n  }\n\n  & > .md > :first-child {\n    margin-top: 0;\n  }\n"])),u,g,d,E,i,l,v,(n=>n.theme.colors.hr),(n=>n.theme.colors.code),(n=>n.theme.colors.onCode))},6117:function(n,a,s){s.d(a,{Z:function(){return h}});var t,e,o,p=s(1880),l=s(7294),c=s(891),i=s(1883);const r=(0,c.ZP)(i.Link)(t||(t=(0,p.Z)(["\n  display: flex;\n  flex-direction: column;\n  align-items: ",";\n\n  max-width: 100%;\n  padding: 16px;\n\n  background-color: ",";\n\n  &:hover {\n    text-decoration: none;\n  }\n"])),(n=>n.next?"flex-end":"flex-start"),(n=>n.theme.colors.nearbyPostLink)),u=c.ZP.div(e||(e=(0,p.Z)(["\n  font-size: 0.75rem;\n  color: ",";\n"])),(n=>n.theme.colors.onNearbyPostLink)),k=c.ZP.div(o||(o=(0,p.Z)(["\n  max-width: 100%;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n"])));var d,m=function(n){let{title:a,slug:s,desc:t,...e}=n;return l.createElement(r,Object.assign({},e,{to:"/posts/"+s}),l.createElement(u,null,t),l.createElement(k,null,a))};const g=c.ZP.div(d||(d=(0,p.Z)(["\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  gap: 16px;\n\n  margin: 120px 0;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n\n    overflow: hidden;\n  }\n  & > :nth-child(1) {\n    align-items: flex-start;\n  }\n  & > :nth-child(2) {\n    align-items: flex-end;\n  }\n"])));var h=function(n){var a,s;let{data:t,current:e}=n;if(!t)return null;const o=t.findIndex((n=>n.frontmatter.slug===e)),p=null===(a=t[o-1])||void 0===a?void 0:a.frontmatter,c=null===(s=t[o+1])||void 0===s?void 0:s.frontmatter;return l.createElement(g,null,l.createElement("div",null,!!p&&l.createElement(m,Object.assign({},p,{desc:"❮ 시리즈 이전글"}))),l.createElement("div",null,!!c&&l.createElement(m,Object.assign({},c,{next:!0,desc:"시리즈 다음글 ❯"}))))}},7178:function(n,a,s){var t,e,o,p,l,c=s(1880),i=s(7294),r=s(1883),u=s(891);const k=u.ZP.div(t||(t=(0,c.Z)(["\n  margin-bottom: 16px;\n  align-items: center;\n\n  background-color: ",";\n"])),(n=>n.theme.colors.sameSereisPosts)),d=u.ZP.div(e||(e=(0,c.Z)(["\n  display: flex;\n  justify-content: space-between;\n  padding: 16px;\n  cursor: pointer;\n  user-select: none;\n\n  > h2 {\n    margin: 0;\n    font-size: 1rem;\n    > a {\n      color: ",";\n    }\n  }\n\n  > span {\n    transform: rotate(","deg);\n    transition: transform 0.2s;\n  }\n"])),(n=>n.theme.colors.onBackground),(n=>n.collapsed?0:180)),m=u.ZP.ol(o||(o=(0,c.Z)(["\n  margin: 0;\n  border-top: 1px solid ",";\n  padding-top: 16px;\n  padding-left: 48px;\n  padding-bottom: 16px;\n"])),(n=>n.theme.colors.background)),g=u.ZP.li(p||(p=(0,c.Z)(["\n  margin-bottom: 4px;\n  font-size: 0.9375rem;\n  color: ",";\n  & > a {\n    color: ",";\n  }\n  ","\n"])),(n=>n.theme.colors.inactiveText),(n=>n.theme.colors.inactiveText),(n=>n.active&&(0,u.iv)(l||(l=(0,c.Z)(["\n      color: ",";\n      & > a {\n        color: ",";\n        text-decoration: underline;\n      }\n    "])),(n=>n.theme.colors.onBackground),(n=>n.theme.colors.onBackground))));a.Z=function(n){let{name:a,data:s,current:t}=n;const[e,o]=i.useState(!0);return s?i.createElement(k,null,i.createElement(d,{collapsed:e,onClick:()=>o((n=>!n))},i.createElement("h2",null,i.createElement(r.Link,{to:"/series/"+a+"/"},'시리즈 "'+a+'"')),i.createElement("span",null,"▲")),!e&&i.createElement(m,null,s.map((n=>{let{frontmatter:{slug:a,title:s}}=n;return i.createElement(g,{active:a===t,key:a},i.createElement(r.Link,{to:"/posts/"+a},s))})))):null}},5924:function(n,a){const s="highlight";a.Z=function(n,a){var t,e,o;if(!a)return;const p=document.documentElement.scrollTop+10-(null!==(t=null===(e=n.current)||void 0===e?void 0:e.offsetTop)&&void 0!==t?t:0);let l;for(let s=0;s<a.length;s++)if(a[s].offsetTop>p){var c;l=null!==(c=a[s-1])&&void 0!==c?c:null;break}if(void 0===l&&(l=a[a.length-1]),null===(o=n.current)||void 0===o||o.querySelectorAll(".highlight").forEach((n=>n.classList.remove(s))),l){var i;const a=l.getAttribute("id"),t=".toc a[href='#"+encodeURI(null!=a?a:"")+"']",e=null===(i=n.current)||void 0===i?void 0:i.querySelector(t);null==e||e.classList.add(s)}}},1151:function(n,a,s){s.d(a,{ah:function(){return o}});var t=s(7294);const e=t.createContext({});function o(n){const a=t.useContext(e);return t.useMemo((()=>"function"==typeof n?n(a):{...a,...n}),[a,n])}}}]);
//# sourceMappingURL=component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-blog-posts-2023-230405-algorithm-1-reverse-html-index-mdx-29f9d29aa5d8ce56b058.js.map