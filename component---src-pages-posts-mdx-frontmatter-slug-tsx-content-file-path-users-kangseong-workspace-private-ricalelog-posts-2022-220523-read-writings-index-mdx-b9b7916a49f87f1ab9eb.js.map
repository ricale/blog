{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2022-220523-read-writings-index-mdx-b9b7916a49f87f1ab9eb.js","mappings":"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","sources":["webpack://ricalelog/./posts/2022/220523-read-writings/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"JavaScript\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://kentcdodds.com/blog/stop-mocking-fetch\"\n  }, \"Stop mocking fetch\")), \"\\n\", React.createElement(_components.p, null, \"테스트를 작성할 때 fetch 를 mocking 하지 말고, 대신 MSW 라는 툴을 사용해 네트워크 요청 자체를 mocking 하라는 글. MSW 는 서비스 워커를 통해 모든 네트워크 요청을 가로채 원하는 가짜 응답을 내려줄 수 있는 툴이다. 비단 테스트 뿐만 아니라 개발 시 아직 구현되지 않은 API 에 대한 mocking 용도로도 사용 가능하다.\"), \"\\n\", React.createElement(_components.p, null, \"MSW 에 관해서는 한국어로 작성된 글도 많이 있다. (예, \", React.createElement(_components.a, {\n    href: \"https://blog.rhostem.com/posts/2021-03-20-mock-service-worker\"\n  }, \"Mock Service Worker로 만드는 모의 서버\"), \")\"), \"\\n\", React.createElement(_components.h2, null, \"React\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://kentcdodds.com/blog/useeffect-vs-uselayouteffect\"\n  }, \"useEffect vs useLayoutEffect\")), \"\\n\", React.createElement(_components.p, null, \"useEffect 와 useLayoutEffect 의 차이를 정리한 글. 다른 건 다 알고 있는 내용이었지만 \", React.createElement(_components.a, {\n    href: \"https://kentcdodds.com/blog/useeffect-vs-uselayouteffect#one-special-case\"\n  }, \"One Special Case\"), \" 는 언뜻 들어본 적만 있고 정확히는 몰랐는데, 잘 정리되어있다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://typeofnan.dev/what-the-useevent-react-hook-is-and-isnt/\"\n  }, \"What the useEvent React hook is (and isn't)\")), \"\\n\", React.createElement(_components.p, null, \"새로 추가될 \", React.createElement(_components.code, null, \"useEvent\"), \" hook 을 설명하는 글. \", React.createElement(_components.code, null, \"useCallback\"), \" 과 유사하지만 별도의 디펜던시 리스트 없이 항상 같은 레퍼런스이면서 항상 최신 state, props 에 접근할 수 있다는 차이점이 있다.\"), \"\\n\", React.createElement(_components.p, null, \"구현 원리를 알고 싶은데 \", React.createElement(_components.a, {\n    href: \"https://github.com/reactjs/rfcs/pull/220\"\n  }, \"RFC 문서\"), \"에서도 찾기 어려워서 조금 아쉽다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://www.developerway.com/posts/react-key-attribute\"\n  }, \"React key attribute: best practices for performant lists\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"key\"), \" 어트리뷰트에 대해 설명한 글. 글 말미에도 나와있지만 요약하면 아래와 같다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"랜덤한 값은 절대 \", React.createElement(_components.code, null, \"key\"), \" 로 쓰지 마라\"), \"\\n\", React.createElement(_components.li, null, \"유니크 아이디를 \", React.createElement(_components.code, null, \"key\"), \" 로 쓰는 것은 순서 변경이 가능한 목록에서 좋다.\"), \"\\n\", React.createElement(_components.li, null, \"배열의 인덱스 값을 \", React.createElement(_components.code, null, \"key\"), \" 로 쓰는 것은\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"순서 변경이 가능한 목록에서는 안 좋다\"), \"\\n\", React.createElement(_components.li, null, \"페이지네이션되는 목록에서는 유니크 아이디를 쓰는 것보다 좋다.\"), \"\\n\", React.createElement(_components.li, null, \"자동완성 목록 같은 다이나믹 데이터만 처리하는 목록에서도 유니크 아이디를 쓰는 것보다 좋다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"이유와 자세한 설명은 해당 글 본문에서 확인하자.\"), \"\\n\", React.createElement(_components.h2, null, \"Style / Design\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://meyerweb.com/eric/thoughts/2022/04/26/flexibly-centering-an-element-with-side-aligned-content/\"\n  }, \"Flexibly Centering an Element with Side-Aligned Content\")), \"\\n\", React.createElement(_components.p, null, \"엘리먼트 안은 \", React.createElement(_components.code, null, \"text-align: left;\"), \" 이되, 그 엘리먼트는 부모의 가운데에 위치하도록 하게 하는 스타일 방법을 정리한 내용. 부모 엘리먼트의 스타일도 변경할 수 있다면 flex 스타일로 쉽게 해결되지만, 부모에 스타일을 줄 수 없을 경우에는 어떻게 할 것인지 알려준다.\"), \"\\n\", React.createElement(_components.p, null, \"핵심만 말하자면 \", React.createElement(_components.code, null, \"max-inline-size: max-content;\"), \" 를 사용하면 된다. 자세한 내용은 원글을 참고하자.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://javascript.plainenglish.io/design-tokens-in-a-react-component-design-system-the-right-way-f55d392fb540\"\n  }, \"Design Tokens in Your React Design System — The Right Way\")), \"\\n\", React.createElement(_components.p, null, \"\\\"디자인 시스템을 구성할 때 디자인 토큰을 사용하면 composable 한 컴포넌트 및 앱을 구성할 수 있다\\\"는 내용. 여기서 말하는 디자인 토큰이란 backgroundColor, primaryColor 등 디자인 시스템에서 일관되게 사용하는 값들을 말한다.\"), \"\\n\", React.createElement(_components.p, null, \"최근 회사에서 새로 시작한 프로젝트에서 이 디자인 토큰을 적극적으로 활용하고 있는데, 디자인 일관성 유지와 코드 유지보수 측면에서 만족하고 있다.\"), \"\\n\", React.createElement(_components.p, null, \"이런 (토큰을 포함한) 디자인 시스템을 구성하고 사용하는 데에는 디자이너 뿐만 아니라 프로그래머, PM 의 협조도 필요하다. 시스템을 구축할 때 소요가 작지는 않지만, 일단 구축하면 들인 소요에 비해 장점이 훨씬 크다.\"), \"\\n\", React.createElement(_components.p, null, \"이런 개념에 익숙하지 않은 사람들이라면 읽어볼만한 글이다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2022/220523-read-writings/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {title, date, tags, heroImage, heroImageAlt} = data.mdx.frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, title), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag)))), React.createElement(\"div\", null, date), !!image && React.createElement(GatsbyImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children), React.createElement(\"script\", {\n    src: \"https://utteranc.es/client.js\",\n    repo: \"ricale/blog\",\n    \"issue-term\": \"pathname\",\n    label: \"utterances\",\n    theme: \"github-dark\",\n    crossOrigin: \"anonymous\",\n    async: true\n  }));\n};\nconst Tags = styled.ul(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px \", \"px\\n      0px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.thin, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"3533977744\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(React.Fragment, null, React.createElement(Seo, {\n    title: title,\n    description: excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  }));\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","a","p","code","ul","li","_provideComponents","components","React","href","_templateObject","wrapper","MDXLayout","PostDetailPage","_ref","data","children","title","date","tags","heroImage","heroImageAlt","mdx","frontmatter","image","getImage","Layout","Tags","map","tag","key","Link","to","GatsbyImage","alt","MdxContent","src","repo","label","theme","crossOrigin","async","styled","_taggedTemplateLiteralLoose","dimens","gutter","thin","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","slug","excerpt","Seo","description","path","thumbnail","images","fallback","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}