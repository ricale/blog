{"version":3,"file":"component---src-pages-index-tsx-3c1674482f63714bb899.js","mappings":"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","sources":["webpack://ricalelog/./src/components/Layout.tsx","webpack://ricalelog/./src/components/Seo.tsx","webpack://ricalelog/./src/pages/index.tsx","webpack://ricalelog/./src/themes/themedStyledComponents.ts","webpack://ricalelog/./src/themes/normal.ts","webpack://ricalelog/./src/themes/GlobalStyle.ts","webpack://ricalelog/./src/themes/index.ts","webpack://ricalelog/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js"],"sourcesContent":["import * as React from \"react\";\nimport { graphql, Link, useStaticQuery } from \"gatsby\";\n\nimport styled, { GlobalStyle, normalTheme, ThemeProvider } from \"../themes\";\nimport { SiteMetadata } from \"../types\";\n\nconst isDevelopment = process.env.NODE_ENV === \"development\";\n\nconst menuItems = [\n  { path: \"/posts\", title: \"모든글\" },\n  { path: \"/series\", title: \"시리즈\" },\n  { path: \"/tags\", title: \"태그\" },\n  ...(isDevelopment ? [{ path: \"/drafts\", title: \"임시글\" }] : []),\n];\n\ntype LayoutQueryData = {\n  site: {\n    siteMetadata: SiteMetadata;\n  };\n};\ntype LayoutProps = {\n  children?: React.ReactNode;\n};\nfunction Layout({ children }: LayoutProps) {\n  const data = useStaticQuery<LayoutQueryData>(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `);\n  const { title, author } = data.site.siteMetadata;\n  return (\n    <ThemeProvider theme={normalTheme}>\n      <GlobalStyle />\n      <Container>\n        <Header>\n          <header>\n            <Link to=\"/\">{title}</Link>\n          </header>\n          <address>\n            <a href=\"https://ricale.kr\">{`by ${author}`}</a>\n          </address>\n          <nav>\n            <ul>\n              {menuItems.map((item) => (\n                <li key={item.path}>\n                  <Link to={item.path}>{item.title}</Link>\n                </li>\n              ))}\n            </ul>\n          </nav>\n        </Header>\n        <main>{children}</main>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n\n  > main {\n    padding-left: ${(p) => p.theme.dimens.margin}px;\n    padding-right: ${(p) => p.theme.dimens.margin}px;\n    padding-bottom: ${(p) => p.theme.dimens.margin}px;\n\n    @media (max-width: 800px) {\n      padding-left: ${(p) => p.theme.dimens.margin + 4}px;\n      padding-right: ${(p) => p.theme.dimens.margin + 4}px;\n    }\n  }\n`;\nconst Header = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  margin: 8px 16px;\n\n  & > header {\n    font-weight: 600;\n    font-size: 1.125rem;\n    > a {\n      color: white;\n    }\n  }\n\n  & > address {\n    margin-left: 8px;\n    font-size: 0.875rem;\n    font-style: normal;\n    > a {\n      color: white;\n    }\n  }\n\n  & > nav {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n\n    flex: 1;\n    > ul {\n      display: flex;\n      flex-direction: row;\n      gap: 8px;\n\n      margin: 0;\n      margin-left: 16px;\n      padding: 0;\n      list-style: none;\n\n      > li > a {\n        display: inline-block;\n        /* padding: 0px 8px; */\n      }\n    }\n  }\n`;\n\nexport default Layout;\n","import * as React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { SiteMetadata } from \"../types\";\n\ntype SeoQueryData = {\n  site: {\n    siteMetadata: SiteMetadata;\n    pathPrefix: string;\n  };\n};\ntype SeoProps = {\n  title?: string;\n  description?: string;\n  path?: string;\n  thumbnail?: string;\n  keywords?: string[];\n  ogType?: string;\n};\nfunction Seo({\n  title,\n  description,\n  path,\n  thumbnail,\n  ogType,\n  keywords,\n}: SeoProps) {\n  const data = useStaticQuery<SeoQueryData>(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          author\n          siteUrl\n          description\n        }\n        pathPrefix\n      }\n    }\n  `);\n\n  const {\n    siteMetadata: { title: siteTitle, author, siteUrl, description: siteDesc },\n    pathPrefix,\n  } = data.site;\n\n  const pageTitle = title\n    ? `${title} | ${siteTitle}`\n    : `${siteTitle} by ${author}`;\n  const seoTitle = title ?? siteTitle;\n  const desc = description || siteDesc;\n  const pageUrl = `${siteUrl}${pathPrefix}${path ? `/${path}` : \"\"}`;\n  const imageUrl = thumbnail ? `${siteUrl}${thumbnail}` : null;\n  const keywordsString = keywords ? keywords.join(\", \") : null;\n\n  return (\n    <>\n      <title>{pageTitle}</title>\n      <meta name=\"description\" content={desc} />\n      <meta name=\"author\" content={author} />\n      {keywordsString && <meta name=\"keywords\" content={keywordsString} />}\n\n      {!!ogType && <meta property=\"og:type\" content={ogType} />}\n      <meta property=\"og:title\" content={seoTitle} />\n      <meta property=\"og:description\" content={desc} />\n      <meta property=\"og:url\" content={pageUrl} />\n      {!!imageUrl && <meta property=\"og:image\" content={imageUrl} />}\n\n      <meta property=\"twitter:card\" content=\"summary_large_image\" />\n      <meta property=\"twitter:title\" content={seoTitle} />\n      <meta property=\"twitter:description\" content={desc} />\n      <meta property=\"twitter:url\" content={pageUrl} />\n      {!!imageUrl && <meta property=\"twitter:image\" content={imageUrl} />}\n    </>\n  );\n}\n\nexport default Seo;\n","import * as React from \"react\";\nimport { HeadFC } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Seo from \"../components/Seo\";\n\nfunction IndexPage() {\n  return <Layout></Layout>;\n}\n\nexport const Head: HeadFC = () => <Seo />;\n\nexport default IndexPage;\n","import * as styledComponents from \"styled-components\";\n\nimport { RicalelogTheme } from \"./normal\";\n\nexport const {\n  default: styled,\n  css,\n  keyframes,\n  ThemeProvider,\n  ThemeContext,\n  createGlobalStyle,\n} = styledComponents as unknown as styledComponents.ThemedStyledComponentsModule<RicalelogTheme>;\n","const base = 16;\n\nconst colors = {\n  background: \"black\",\n  onBackground: \"white\",\n\n  codeblock: \"#111111\",\n  onCodeblock: \"white\",\n\n  blockquoteBorder: \"#666666\",\n  blockquote: \"#111111\",\n  onBlockquote: \"white\",\n\n  code: \"#333333\",\n  onCode: \"#DDDDDD\",\n\n  tag: \"#222222\",\n  onTag: \"skyblue\",\n\n  tableBorder: \"white\",\n};\n\nconst normal = {\n  dimens: {\n    bigMargin: base * 2,\n    margin: base * 1,\n    gutter: base * 0.5,\n    spacing: base * 0.25,\n    thin: base * 0.125,\n  },\n  colors,\n};\n\nexport default normal;\nexport type RicalelogTheme = typeof normal;\n","import { createGlobalStyle } from \"./themedStyledComponents\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, #root {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n\n    font-family: -apple-system,\n      BlinkMacSystemFont,\n      \"Segoe UI\",\n      \"Noto Sans\",\n      Helvetica,\n      Arial,\n      sans-serif,\n      \"Apple Color Emoji\",\n      \"Segoe UI Emoji\";\n\n    overflow-x: hidden;\n\n    background-color: ${(p) => p.theme.colors.background};\n    color: ${(p) => p.theme.colors.onBackground};\n  }\n\n  h1, h2, h3, h4, h5, h6, p {\n    margin: 0;\n  }\n\n  a {\n    color: skyblue;\n    text-decoration: none;\n  }\n  a:hover {\n    text-decoration: underline;\n  }\n\n  input, button, select {\n    margin: 0;\n    padding: 0;\n    font-size: 16px;\n    appearance: none;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n`;\n\nexport default GlobalStyle;\n","import {\n  styled,\n  css,\n  keyframes,\n  ThemeProvider,\n} from \"./themedStyledComponents\";\n\nexport default styled;\nexport { css, keyframes, ThemeProvider };\n\nexport { default as normalTheme } from \"./normal\";\nexport * from \"./normal\";\nexport { default as GlobalStyle } from \"./GlobalStyle\";\nexport { default as useTheme } from \"./useTheme\";\n","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}"],"names":["menuItems","path","title","Container","styled","p","theme","dimens","margin","Header","children","data","useStaticQuery","author","site","siteMetadata","React","ThemeProvider","normalTheme","GlobalStyle","Link","to","href","map","item","key","description","thumbnail","ogType","keywords","siteTitle","siteUrl","siteDesc","pathPrefix","pageTitle","seoTitle","desc","pageUrl","imageUrl","keywordsString","join","name","content","property","Head","Seo","Layout","default","css","keyframes","ThemeContext","createGlobalStyle","styledComponents","bigMargin","base","gutter","spacing","thin","colors","background","onBackground","codeblock","onCodeblock","blockquoteBorder","blockquote","onBlockquote","code","onCode","tag","onTag","tableBorder","_taggedTemplateLiteralLoose","strings","raw","slice"],"sourceRoot":""}