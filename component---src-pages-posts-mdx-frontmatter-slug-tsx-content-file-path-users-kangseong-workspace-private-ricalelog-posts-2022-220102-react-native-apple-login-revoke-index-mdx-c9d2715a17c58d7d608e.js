"use strict";(self.webpackChunkricalelog=self.webpackChunkricalelog||[]).push([[9405],{5356:function(n,e,a){a.r(e),a.d(e,{Head:function(){return B},default:function(){return H}});var t=a(1151),s=a(7294);function c(n){const e=Object.assign({div:"div",h2:"h2",a:"a",p:"p",ul:"ul",li:"li",code:"code",h3:"h3",blockquote:"blockquote",h4:"h4",button:"button"},(0,t.ah)(),n.components);return s.createElement(s.Fragment,null,s.createElement(e.div,{className:"md"},s.createElement(e.h2,{id:"1-서두",style:{position:"relative"}},s.createElement(e.a,{href:"#1-%EC%84%9C%EB%91%90","aria-label":"1 서두 permalink",className:"anchor before"},s.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"1. 서두"),s.createElement(e.p,null,"토이 프로젝트에서 아래 라이브러리를 사용해 소셜 로그인을 구현하고 있다."),s.createElement(e.ul,null,"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"https://www.npmjs.com/package/@react-native-firebase/app"},"@react-native-firebase/app"),": React Native Firebase 코어 모듈"),"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"https://www.npmjs.com/package/@react-native-firebase/auth"},"@react-native-firebase/auth"),": React Native Firebase Authentication 모듈"),"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"https://github.com/react-native-google-signin/google-signin"},"@react-native-google-signin/google-signin"),": React Native 구글 소셜 로그인 라이브러리"),"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"https://github.com/invertase/react-native-apple-authentication"},"@invertase/react-native-apple-authentication"),": React Native 애플 소셜 로그인 라이브러리"),"\n"),s.createElement(e.p,null,"이 글에서는 애플 소셜 로그인에서도 탈퇴(앱과 연결 끊기) 기능 구현을 정리한다. 탈퇴는 사용자에게 당연히 제공되어야 하는 사용자의 권리다. 뭐 필수 기능이니 구현하는 데 어려울 건 없을 것이다. 아마 라이브러리에 ",s.createElement(e.code,null,"탈퇴하기()")," 같은 메서드가 있을 것이고 우리는 그걸 호출하기만 하면 될 것이다. 아주 쉽다. 자 시작해보자. ...어? 아니네?"),s.createElement(e.h3,{id:"11-엥-로그인은-로그아웃은-구글은",style:{position:"relative"}},s.createElement(e.a,{href:"#11-%EC%97%A5-%EB%A1%9C%EA%B7%B8%EC%9D%B8%EC%9D%80-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83%EC%9D%80-%EA%B5%AC%EA%B8%80%EC%9D%80","aria-label":"11 엥 로그인은 로그아웃은 구글은 permalink",className:"anchor before"},s.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"1.1. 엥? 로그인은? 로그아웃은? 구글은?"),s.createElement(e.p,null,"애플 소셜 로그인/로그아웃, 구글 소셜 로그인/로그아웃/탈퇴 기능 구현에는 특별한 이슈가 없다. 개발자가 상상하고 있는 거의 그대로 메서드가 나와있고 우리는 호출하기만 되는 형태다. 일부 콜백을 사용해야 하긴 하지만 큰 문제는 아니다. 따라서 일단은 이슈가 있다고 생각되는 애플 쪽의 탈퇴 기능을 먼저 정리한다. (나머지 기능들은 나중에 정리할 수도 있다.) 일단은 공식문서들을 참고하시라."),s.createElement(e.ul,null,"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"https://rnfirebase.io/auth/usage"},"React Native Firebase - Authentication")),"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"https://github.com/react-native-google-signin/google-signin"},"Github - react-native-google-signin/google-signin")),"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"https://github.com/invertase/react-native-apple-authentication"},"GitHub - invertase/react-native-apple-authentication")),"\n"),s.createElement(e.h2,{id:"2-구현",style:{position:"relative"}},s.createElement(e.a,{href:"#2-%EA%B5%AC%ED%98%84","aria-label":"2 구현 permalink",className:"anchor before"},s.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2. 구현"),s.createElement(e.h3,{id:"21-oncredentialrevoked",style:{position:"relative"}},s.createElement(e.a,{href:"#21-oncredentialrevoked","aria-label":"21 oncredentialrevoked permalink",className:"anchor before"},s.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.1. ",s.createElement(e.code,null,"onCredentialRevoked()")),s.createElement(e.p,null,"일단 ",s.createElement(e.a,{href:"https://github.com/invertase/react-native-apple-authentication"},"@invertase/react-native-apple-authentication")," 라이브러리의 README 를 찬찬히 살펴봐도 탈퇴를 위한 메서드는 존재하지 않는다. (구글 쪽 라이브러리에서는 ",s.createElement(e.code,null,"revokeAccess()"),"라는 메서드를 제공하는 것과 대조적이다.) 그나마 탈퇴 쪽과 관련된 메서드라면 ",s.createElement(e.code,null,"onCredentialRevoked(listener)")," 가 있다. 이 메서드는 사용자가 탈퇴되었을 때 실행되는 콜백을 등록하게 해준다."),s.createElement(e.p,null,"여기서 평소 iOS 를 사용하지 않는 사람들은 당황할 수 있다 (내가 그랬다). 탈퇴 기능은 제공하지 않지만 탈퇴 상태를 들을 수 있는 이벤트 리스너만 제공하고 있는 것이다. 그럼 대체 탈퇴는 어떻게 하는 거야?"),s.createElement(e.p,null,"다행히 답은 멀리 있지 않다. 애플은 iOS 기기 내에서 특정 앱과의 연결을 끊을 수 있는 (탈퇴할 수 있는) 기능을 제공한다. (apple.com 에서도 제공하는 것으로 알고 있다. 확인해보지는 않았다.)"),s.createElement(e.blockquote,null,"\n",s.createElement(e.p,null,"iOS 기기의 [설정] 앱 - 최상단의 자신의 이름 영역 선택 - [암호 및 보안] - [Apple ID를 사용하는 앱] - 탈퇴할 앱 선택 - [Apple ID 사용 중단]"),"\n"),s.createElement(e.p,null,"이 말은 즉슨, 탈퇴 기능을 직접 구현할 필요는 없다는 것이다. 우리는 사용자가 애플을 통해 탈퇴를 했을 때 그에 대응하는 처리만 해주면 된다."),s.createElement(e.h4,{id:"구현-예",style:{position:"relative"}},s.createElement(e.a,{href:"#%EA%B5%AC%ED%98%84-%EC%98%88","aria-label":"구현 예 permalink",className:"anchor before"},s.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"구현 예"),s.createElement(e.p,null,"그럼 문서에 나와있는대로 탈퇴 기능을 구현해보자."),s.createElement(e.div,{className:"codeblock-container"},s.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token comment">// 현재 기기가 애플 로그인을 지원하는 기기인지 확인</span>\n    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>appleAuth<span class="token punctuation">.</span>isSupported<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> unsubscriber <span class="token operator">=</span> appleAuth<span class="token punctuation">.</span><span class="token function">onCredentialRevoked</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token comment">// 사용자의 정보를 가지고 탈퇴 기능을 수행하자.</span>\n      <span class="token function">doSomethingForRevoke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token comment">// firebase 에서도 로그아웃</span>\n      <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">signOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> unsubscriber<span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// ...</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>View<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>View<span class="token operator">></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),s.createElement(e.button,{className:"codeblock-copy-button"},"COPY")),s.createElement(e.h3,{id:"22-getcredentialstateforuser",style:{position:"relative"}},s.createElement(e.a,{href:"#22-getcredentialstateforuser","aria-label":"22 getcredentialstateforuser permalink",className:"anchor before"},s.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"2.2. ",s.createElement(e.code,null,"getCredentialStateForUser()")),s.createElement(e.p,null,"좋다. 구현이 완료되었다. 라이브러리의 README 에는 예외 처리에 대한 안내가 없는 걸로 봐서 이 콜백은 사용자의 탈퇴 시 무조건 실행을 보장하는 것 같다 (API 문서를 보고 싶지만 링크가 깨져있다)."),s.createElement(e.p,null,"그렇게 믿고 싶다. 하지만 세상에 백퍼센트는 없다. 특히 앱 프로세스가 완전히 죽은 상태에서 탈퇴를 하고 앱을 실행했을 때 ",s.createElement(e.code,null,"onCredentialRevoked()")," 가 실행되지 않는 것을 여러차례 직접 목격한 나로서는, 더더욱 무시할 수 없었다. 이 콜백이 실행되지 않을 때를 대비해야 한다."),s.createElement(e.p,null,"이럴 때 쓸 수 있는 메서드가 ",s.createElement(e.code,null,"getCredentialStateForUser(user)"),"다. 이 메서드는 현재 사용자의 상태를 반환한다."),s.createElement(e.div,{className:"codeblock-container"},s.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="typescript"><pre class="language-typescript"><code class="language-typescript"><span class="token keyword">enum</span> AppleCredentialState <span class="token punctuation">{</span>\n  <span class="token constant">REVOKED</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// The Opaque user ID was revoked by the user.</span>\n  <span class="token constant">AUTHORIZED</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// The Opaque user ID is in good state.</span>\n  <span class="token constant">NOT_FOUND</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// The Opaque user ID was not found.</span>\n  <span class="token constant">TRANSFERRED</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">// N/A</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),s.createElement(e.button,{className:"codeblock-copy-button"},"COPY")),s.createElement(e.p,null,"즉 사용자가 앱에 진앱했을 때, 혹은 사용자 정보가 업데이트되었다고 추정될 때, 이 메서드로 사용자의 상태를 확인하면 탈퇴 여부를 확인할 수 있다는 말이다."),s.createElement(e.h4,{id:"구현-예-1",style:{position:"relative"}},s.createElement(e.a,{href:"#%EA%B5%AC%ED%98%84-%EC%98%88-1","aria-label":"구현 예 1 permalink",className:"anchor before"},s.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"구현 예"),s.createElement(e.p,null,'여기서는 "사용자의 인증 정보가 바뀐 시점"을 React Native Firebase 의 ',s.createElement(e.code,null,"auth().onAuthStateChanged()")," 콜백으로 확인한다. 만약 React Native Firebase 를 사용하지 않는다면 다른 방법으로 해당 시점을 찾아야 할 것이다."),s.createElement(e.div,{className:"codeblock-container"},s.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n\n  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> subscribe <span class="token operator">=</span> <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">onAuthStateChanged</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token parameter">user</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 로그아웃된 상태 처리</span>\n        <span class="token function">loggedOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token keyword">const</span> isApple <span class="token operator">=</span> <span class="token punctuation">(</span>\n        appleAuth<span class="token punctuation">.</span>isSupported\n        <span class="token operator">&amp;&amp;</span> user<span class="token punctuation">.</span>providerData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>providerId <span class="token operator">===</span> <span class="token string">\'apple.com\'</span>\n      <span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token keyword">const</span> uidInProvider <span class="token operator">=</span> user<span class="token punctuation">.</span>providerData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>uid<span class="token punctuation">;</span>\n      <span class="token keyword">const</span> appleState <span class="token operator">=</span> <span class="token keyword">await</span> appleAuth<span class="token punctuation">.</span><span class="token function">getCredentialStateForUser</span><span class="token punctuation">(</span>uidInProvider<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n      <span class="token keyword">if</span><span class="token punctuation">(</span>isApple <span class="token operator">&amp;&amp;</span> appleState <span class="token operator">===</span> appleAuth<span class="token punctuation">.</span>State<span class="token punctuation">.</span><span class="token constant">REVOKED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// 사용자의 정보를 가지고 탈퇴 기능을 수행하자.</span>\n        <span class="token function">revokeThisService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// firebase 에서도 로그아웃</span>\n        <span class="token function">auth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">signOut</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n  <span class="token comment">// ...</span>\n\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token operator">&lt;</span>View<span class="token operator">></span>\n    <span class="token operator">&lt;</span><span class="token operator">/</span>View<span class="token operator">></span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),s.createElement(e.button,{className:"codeblock-copy-button"},"COPY")),s.createElement(e.h2,{id:"3-결론",style:{position:"relative"}},s.createElement(e.a,{href:"#3-%EA%B2%B0%EB%A1%A0","aria-label":"3 결론 permalink",className:"anchor before"},s.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"3. 결론"),s.createElement(e.p,null,"마지막으로 요약하자. React Native 에서 ",s.createElement(e.a,{href:"https://github.com/invertase/react-native-apple-authentication"},"@invertase/react-native-apple-authentication")," 라이브러리를 사용해 탈퇴 기능을 구현할 때는 아래 두 개의 메서드를 적절히 잘 조합하면 되겠다."),s.createElement(e.ul,null,"\n",s.createElement(e.li,null,s.createElement(e.code,null,"onCredentialRevoked()")),"\n",s.createElement(e.li,null,s.createElement(e.code,null,"getCredentialStateForUser()")),"\n")),"\n",s.createElement(e.div,{className:"toc"},s.createElement(e.p,null,"목차"),s.createElement(e.ul,null,"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"#1-%EC%84%9C%EB%91%90"},"1. 서두"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"#11-%EC%97%A5-%EB%A1%9C%EA%B7%B8%EC%9D%B8%EC%9D%80-%EB%A1%9C%EA%B7%B8%EC%95%84%EC%9B%83%EC%9D%80-%EA%B5%AC%EA%B8%80%EC%9D%80"},"1.1. 엥? 로그인은? 로그아웃은? 구글은?")),"\n"),"\n"),"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"#2-%EA%B5%AC%ED%98%84"},"2. 구현"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"#21-oncredentialrevoked"},"2.1. ",s.createElement(e.code,null,"onCredentialRevoked()")),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"#%EA%B5%AC%ED%98%84-%EC%98%88"},"구현 예")),"\n"),"\n"),"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"#22-getcredentialstateforuser"},"2.2. ",s.createElement(e.code,null,"getCredentialStateForUser()")),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"#%EA%B5%AC%ED%98%84-%EC%98%88-1"},"구현 예")),"\n"),"\n"),"\n"),"\n"),"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"#3-%EA%B2%B0%EB%A1%A0"},"3. 결론")),"\n")))}var l,p,o,r=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,t.ah)(),n.components);return e?s.createElement(e,n,s.createElement(c,n)):c(n)},u=a(1880),i=a(1883),k=a(3723),m=a(6758),h=a(3904),d=a(891),E=a(3234),v=a(5777),g=a(7178),f=a(2889),b=a(5924),C=a(7466);function S(n){let{data:e,children:a}=n;const t=s.useRef(),{frontmatter:c,sameSeriesPosts:l}=e.mdx,{title:p,slug:o,date:r,tags:u,series:k,heroImage:h,heroImageAlt:d}=c;return s.useEffect((()=>{var n;const e=null===(n=t.current)||void 0===n?void 0:n.querySelectorAll(".md h1, .md h2, .md h3, .md h4, .md h5, .md h6"),a=new IntersectionObserver((()=>(0,b.Z)(t,e)),{rootMargin:"0px 0px -90% 0px",threshold:[0,1]});return null==e||e.forEach((n=>a.observe(n))),()=>a.disconnect()}),[]),s.createElement(m.Z,null,s.createElement(A,null,s.createElement("h1",null,s.createElement(i.Link,{to:"/posts/"+o},p)),s.createElement(w,null,r),s.createElement(f.Z,{tags:u})),s.createElement(g.Z,{name:k,data:l,current:o}),s.createElement(C.Z,{data:h,alt:d}),s.createElement(y,{ref:t},a),s.createElement(v.Z,null))}const A=d.ZP.div(l||(l=(0,u.Z)(["\n  margin: 60px 0 72px;\n  padding: 0 24px;\n\n  & > h1 {\n    font-size: 2.5rem;\n    word-break: keep-all;\n    margin: 0;\n\n    > a {\n      color: ",";\n    }\n  }\n"])),(n=>n.theme.colors.onBackground)),w=d.ZP.div(p||(p=(0,u.Z)(["\n  margin: 16px 0;\n"]))),y=(0,d.ZP)(E.Z)(o||(o=(0,u.Z)(["\n  margin-bottom: 60px;\n"]))),B=n=>{var e,a;let{data:t}=n;const{frontmatter:{title:c,slug:l,tags:p,heroImage:o,previewContent:r},excerpt:u}=t.mdx,i=o?(0,k.c)(o):null;return s.createElement(h.Z,{title:c,description:null!=r?r:u,path:"posts/"+l,thumbnail:null==i||null===(e=i.images)||void 0===e||null===(a=e.fallback)||void 0===a?void 0:a.src,keywords:p,ogType:"article"})};function H(n){return s.createElement(S,n,s.createElement(r,n))}}}]);
//# sourceMappingURL=component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2022-220102-react-native-apple-login-revoke-index-mdx-c9d2715a17c58d7d608e.js.map