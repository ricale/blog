"use strict";(self.webpackChunkricalelog=self.webpackChunkricalelog||[]).push([[1779],{362:function(n,e,a){a.r(e),a.d(e,{Head:function(){return Z},default:function(){return x}});var s=a(1151),t=a(7294);function c(n){const e=Object.assign({div:"div",p:"p",code:"code",button:"button",a:"a",blockquote:"blockquote",em:"em",strong:"strong",hr:"hr",h3:"h3",ul:"ul",li:"li"},(0,s.ah)(),n.components);return t.createElement(t.Fragment,null,t.createElement(e.div,{className:"md"},t.createElement(e.p,null,"JavaScript 로 1 ~ n 까지의 숫자 배열을 만들고 싶어졌다. 쉽게 생각할 수 있는 방법은 새로운 n 크기의 배열을 만든 뒤 ",t.createElement(e.code,null,"map")," 메서드를 사용해 숫자를 1부터 n까지 채워 넣는 것이다."),t.createElement(e.div,{className:"codeblock-container"},t.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">const</span> nums <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=></span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),t.createElement(e.button,{className:"codeblock-copy-button"},"COPY")),t.createElement(e.p,null,"하지만 위 코드의 결과는 우리가 예상한 것과 다르게 나온다."),t.createElement(e.div,{className:"codeblock-container"},t.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// [empty * 5]</span></code></pre></div>'}}),t.createElement(e.button,{className:"codeblock-copy-button"},"COPY")),t.createElement(e.p,null,"순차적인 값이 들어가길 기대한 것과 달리, 배열의 모든 값은 여전히 비어있다. 왜일까? 버그일까? 아니다. ",t.createElement(e.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map#description"},"MDN의 Array.prototype.map 문서"),"를 보면 아래와 같은 내용이 나온다."),t.createElement(e.blockquote,null,"\n",t.createElement(e.p,null,t.createElement(e.code,null,"callback")," is invoked only for indexes of the array which have assigned values (including ",t.createElement(e.code,null,"undefined"),")."),"\n"),t.createElement(e.p,null,t.createElement(e.code,null,"map")," 메서드는 ",t.createElement(e.em,null,"값이 할당된 인덱스"),"에 대해서만 동작한다고 되어 있다. ",t.createElement(e.code,null,"new Array(n)"),"으로 생성된 배열은 모든 값이 비어있다. ",t.createElement(e.strong,null,t.createElement(e.code,null,"undefined"),"로도 채워져 있지 않다"),". 때문에 ",t.createElement(e.code,null,"map")," 메서드가 동작하지 않는 것이다."),t.createElement(e.p,null,"그렇다면 해결 방법은? 값을 채워준 뒤 ",t.createElement(e.code,null,"map")," 메서드를 사용하면 된다."),t.createElement(e.div,{className:"codeblock-container"},t.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">const</span> nums <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=></span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// [1, 2, 3, 4, 5];</span></code></pre></div>'}}),t.createElement(e.button,{className:"codeblock-copy-button"},"COPY")),t.createElement(e.p,null,"좀 더 ES6+스러운 코드도 있다."),t.createElement(e.div,{className:"codeblock-container"},t.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token keyword">const</span> nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=></span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// [1, 2, 3, 4, 5];</span></code></pre></div>'}}),t.createElement(e.button,{className:"codeblock-copy-button"},"COPY")),t.createElement(e.hr),t.createElement(e.h3,{id:"references",style:{position:"relative"}},t.createElement(e.a,{href:"#references","aria-label":"references permalink",className:"anchor before"},t.createElement(e.div,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"References"),t.createElement(e.ul,null,"\n",t.createElement(e.li,null,"Stack Overflow - ",t.createElement(e.a,{href:"https://stackoverflow.com/questions/5501581/javascript-new-arrayn-and-array-prototype-map-weirdness"},"JavaScript “new Array(n)” and “Array.prototype.map” weirdness")),"\n",t.createElement(e.li,null,"MDN Web Docs - ",t.createElement(e.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map"},"Array.prototype.map()\n")),"\n")),"\n",t.createElement(e.div,{className:"toc"},t.createElement(e.p,null,"목차"),t.createElement(e.ul,null,"\n",t.createElement(e.li,null,t.createElement(e.a,{href:"#references"},"References")),"\n")))}var l,o,p,r=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,s.ah)(),n.components);return e?t.createElement(e,n,t.createElement(c,n)):c(n)},u=a(1880),i=a(1883),m=a(3723),d=a(6758),k=a(3904),g=a(891),h=a(3234),v=a(5777),E=a(7178),b=a(2889),f=a(5924),y=a(7466);function w(n){let{data:e,children:a}=n;const s=t.useRef(),{frontmatter:c,sameSeriesPosts:l}=e.mdx,{title:o,slug:p,date:r,tags:u,series:m,heroImage:k,heroImageAlt:g}=c;return t.useEffect((()=>{var n;const e=null===(n=s.current)||void 0===n?void 0:n.querySelectorAll(".md h1, .md h2, .md h3, .md h4, .md h5, .md h6"),a=new IntersectionObserver((()=>(0,f.Z)(s,e)),{rootMargin:"0px 0px -90% 0px",threshold:[0,1]});return null==e||e.forEach((n=>a.observe(n))),()=>a.disconnect()}),[]),t.createElement(d.Z,null,t.createElement(S,null,t.createElement("h1",null,t.createElement(i.Link,{to:"/posts/"+p},o)),t.createElement(j,null,r),t.createElement(b.Z,{tags:u})),t.createElement(E.Z,{name:m,data:l,current:p}),t.createElement(y.Z,{data:k,alt:g}),t.createElement(_,{ref:s},a),t.createElement(v.Z,null))}const S=g.ZP.div(l||(l=(0,u.Z)(["\n  margin: 60px 0 72px;\n  padding: 0 24px;\n\n  & > h1 {\n    font-size: 2.5rem;\n    word-break: keep-all;\n    margin: 0;\n\n    > a {\n      color: ",";\n    }\n  }\n"])),(n=>n.theme.colors.onBackground)),j=g.ZP.div(o||(o=(0,u.Z)(["\n  margin: 16px 0;\n"]))),_=(0,g.ZP)(h.Z)(p||(p=(0,u.Z)(["\n  margin-bottom: 60px;\n"]))),Z=n=>{var e,a;let{data:s}=n;const{frontmatter:{title:c,slug:l,tags:o,heroImage:p,previewContent:r},excerpt:u}=s.mdx,i=p?(0,m.c)(p):null;return t.createElement(k.Z,{title:c,description:null!=r?r:u,path:"posts/"+l,thumbnail:null==i||null===(e=i.images)||void 0===e||null===(a=e.fallback)||void 0===a?void 0:a.src,keywords:o,ogType:"article"})};function x(n){return t.createElement(w,n,t.createElement(r,n))}}}]);
//# sourceMappingURL=component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2021-210416-create-n-length-array-index-mdx-3e4bae4abfe6f3bdea9e.js.map