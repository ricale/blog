{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2022-220409-react-native-svg-icon-component-index-mdx-c7052c2f2eccf104cf9b.js","mappings":"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","sources":["webpack://ricalelog/./posts/2022/220409-react-native-svg-icon-component/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    div: \"div\",\n    p: \"p\",\n    h1: \"h1\",\n    a: \"a\",\n    h2: \"h2\",\n    button: \"button\",\n    code: \"code\",\n    h3: \"h3\",\n    h4: \"h4\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.div, {\n    className: \"md\"\n  }, React.createElement(_components.p, null, \"아이콘 같은 간단한 이미지를 다룰 때는 PNG 형식보다는 SVG 가 더 좋다. 하지만 React Native 에서는 기본적으로 SVG 파일을 지원하지 않는다.\"), React.createElement(_components.p, null, \"그럼 React Native 에서 SVG 파일을 아이콘으로 사용할 수 있도록 설정 및 구현해보자.\"), React.createElement(_components.h1, {\n    id: \"1-환경-구성-및-설정\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#1-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1-%EB%B0%8F-%EC%84%A4%EC%A0%95\",\n    \"aria-label\": \"1 환경 구성 및 설정 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1. 환경 구성 및 설정\"), React.createElement(_components.h2, {\n    id: \"11-react-native-svg\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#11-react-native-svg\",\n    \"aria-label\": \"11 react native svg permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1.1. react-native-svg\"), React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/react-native-svg/react-native-svg\"\n  }, \"react-native-svg\"), \" 는 React Native 프로젝트에서 SVG 및 관련 엘리먼트들을 웹과 유사한 형식으로 사용할 수 있게 해주는 라이브러리다. 이 라이브러리를 먼저 설치하자.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">yarn</span> <span class=\\\"token function\\\">add</span> react-native-svg\\n<span class=\\\"token builtin class-name\\\">cd</span> ./ios <span class=\\\"token operator\\\">&amp;&amp;</span> pod <span class=\\\"token function\\\">install</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"설치만 하면 된다. 특별한 설정은 필요 없다.\"), React.createElement(_components.h2, {\n    id: \"12-react-native-svg-transformer\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#12-react-native-svg-transformer\",\n    \"aria-label\": \"12 react native svg transformer permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1.2. react-native-svg-transformer\"), React.createElement(_components.p, null, \"react-native-svg 는 \", React.createElement(_components.code, null, \"<Svg />\"), \", \", React.createElement(_components.code, null, \"<G />\"), \", \", React.createElement(_components.code, null, \"<Path />\"), \" 등 거의 모든 SVG 관련 컴포넌트를 제공하지만, SVG 파일 자체를 \", React.createElement(_components.code, null, \"import\"), \" 할 수 있게 해주지는 않는다. SVG 파일들을 \", React.createElement(_components.code, null, \"import\"), \" 해서 사용하려면 \", React.createElement(_components.a, {\n    href: \"https://github.com/kristerkari/react-native-svg-transformer\"\n  }, \"react-native-svg-transformer\"), \" 라이브러리도 필요하다. 이 라이브러리는 react-native-svg 라이브러리를 사용해 SVG 파일을 읽어들여 React 컴포넌트로 사용할 수 있게 해준다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\"><span class=\\\"token function\\\">yarn</span> <span class=\\\"token function\\\">add</span> <span class=\\\"token parameter variable\\\">--dev</span> react-native-svg-transformer</code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"설치 이후 추가적인 설정이 필요하다. (react-native-svg-transformer 의 \", React.createElement(_components.a, {\n    href: \"https://github.com/kristerkari/react-native-svg-transformer/blob/master/README.md\"\n  }, \"README\"), \"에도 잘 나와있다.)\"), React.createElement(_components.h3, {\n    id: \"121-metroconfigjs\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#121-metroconfigjs\",\n    \"aria-label\": \"121 metroconfigjs permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1.2.1. \", React.createElement(_components.code, null, \"metro.config.js\")), React.createElement(_components.p, null, \"프로젝트의 루트 디렉토리에 \", React.createElement(_components.code, null, \"metro.config.js\"), \" 파일이 있다. 기본 설정되어있는 내용과 \", React.createElement(_components.a, {\n    href: \"https://github.com/kristerkari/react-native-svg-transformer#for-react-native-v059-or-newer\"\n  }, \"라이브러리 README.md 의 \", React.createElement(_components.code, null, \"metro.config.js\")), \" 내용을 병합하자. 아래는 병합한 결과물 예시이다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// metro.config.js</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span> getDefaultConfig <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">require</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"metro-config\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">resolver</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> sourceExts<span class=\\\"token punctuation\\\">,</span> assetExts <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">getDefaultConfig</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">transformer</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token function-variable function\\\">getTransformOptions</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token literal-property property\\\">transform</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token literal-property property\\\">experimentalImportSupport</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">,</span>\\n          <span class=\\\"token literal-property property\\\">inlineRequires</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token boolean\\\">true</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token literal-property property\\\">babelTransformerPath</span><span class=\\\"token operator\\\">:</span> require<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"react-native-svg-transformer\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token literal-property property\\\">resolver</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token literal-property property\\\">assetExts</span><span class=\\\"token operator\\\">:</span> assetExts<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">filter</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">ext</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> ext <span class=\\\"token operator\\\">!==</span> <span class=\\\"token string\\\">\\\"svg\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token literal-property property\\\">sourceExts</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">...</span>sourceExts<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"svg\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.h3, {\n    id: \"122-declarationdts\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#122-declarationdts\",\n    \"aria-label\": \"122 declarationdts permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1.2.2. \", React.createElement(_components.code, null, \"declaration.d.ts\")), React.createElement(_components.p, null, \"타입스크립트를 사용한다면 프로젝트 루트 디렉토리에 \", React.createElement(_components.code, null, \"declaration.d.ts\"), \" 파일을 새로 만들어서 아래 내용을 넣어주어야 한다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token comment\\\">// declaration.d.ts</span>\\n\\n<span class=\\\"token keyword\\\">declare</span> <span class=\\\"token keyword\\\">module</span> <span class=\\\"token string\\\">\\\"*.svg\\\"</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> SvgProps <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react-native-svg\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> content<span class=\\\"token operator\\\">:</span> React<span class=\\\"token punctuation\\\">.</span><span class=\\\"token constant\\\">FC</span><span class=\\\"token operator\\\">&lt;</span>SvgProps<span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> content<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.h3, {\n    id: \"123-svgrrc\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#123-svgrrc\",\n    \"aria-label\": \"123 svgrrc permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"1.2.3. \", React.createElement(_components.code, null, \".svgrrc\")), React.createElement(_components.p, null, \"이 파일은 꼭 작성할 필요는 없다. 하지만 작성하면 읽어들인 SVG 컴포넌트의 어트리뷰트를 동적으로 지정할 수 있게 된다. 프로젝트 루트 디렉토리에 \", React.createElement(_components.code, null, \".svgrrc\"), \" 파일을 만들어 아래 내용을 넣자.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\"><pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token comment\\\">// .svgrrc</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"replaceAttrValues\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"#000\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"{props.fill}\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"이렇게 설정하면 읽어들인 svg 파일 내에서 \", React.createElement(_components.code, null, \"\\\"#000\\\"\"), \"로 값이 설정된 어트리뷰트는 \", React.createElement(_components.code, null, \"fill\"), \" prop 의 값으로 치환된다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"xml\\\"><pre class=\\\"language-xml\\\"><code class=\\\"language-xml\\\"><span class=\\\"token comment\\\">&lt;!-- Logo.svg --></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>svg</span> <span class=\\\"token attr-name\\\">width</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>14<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">height</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>14<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">viewBox</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>0 0 14 14<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">fill</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>none<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">xmlns</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>http://www.w3.org/2000/svg<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>path</span> <span class=\\\"token attr-name\\\">d</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>M2.965 6.0925C4.045 8.215 ...<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">fill</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>#000<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>svg</span><span class=\\\"token punctuation\\\">></span></span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"위처럼 작성된 \", React.createElement(_components.code, null, \"Logo.svg\"), \" 파일을 \", React.createElement(_components.code, null, \"import\"), \" 해서 아래처럼 쓸 수 있다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> Logo <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./Logo.svg\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">SomeComp</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token comment\\\">// 이렇게 하면 Logo.svg 파일 내의 \\\"#000\\\" 어트리뷰트를 \\\"#FFF\\\" 로 치환되어 적용된다.</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Logo</span></span> <span class=\\\"token attr-name\\\">width</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">120</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">height</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">40</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">fill</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">\\\"#FFF\\\"</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"이 기능은 react-native-svg-transformer 가 내부적으로 \", React.createElement(_components.a, {\n    href: \"https://github.com/gregberge/svgr\"\n  }, \"SVGR\"), \"이라는 라이브러리를 사용해서 구현했다. 따라서 SVGR 에서 지원하는 다른 설정들도 사용할 수 있다. 좀 더 정보를 얻고 싶다면 \", React.createElement(_components.a, {\n    href: \"https://react-svgr.com/docs/configuration-files/\"\n  }, \"해당 라이브러리의 문서\"), \"를 확인하자.\"), React.createElement(_components.h4, {\n    id: \"-svgrrc-설정을-수정해도-적용되지-않는다\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#-svgrrc-%EC%84%A4%EC%A0%95%EC%9D%84-%EC%88%98%EC%A0%95%ED%95%B4%EB%8F%84-%EC%A0%81%EC%9A%A9%EB%90%98%EC%A7%80-%EC%95%8A%EB%8A%94%EB%8B%A4\",\n    \"aria-label\": \" svgrrc 설정을 수정해도 적용되지 않는다 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"# \", React.createElement(_components.code, null, \".svgrrc\"), \" 설정을 수정해도 적용되지 않는다?\"), React.createElement(_components.p, null, React.createElement(_components.code, null, \".svgrrc\"), \" 설정을 수정하고 다시 빌드해도 수정한 사항이 적용되지 않을 때가 있다. 그럴 때는 metro 를 끄고 \", React.createElement(_components.code, null, \"yarn start --reset-cache\"), \" 로 다시 실행시켜주자.\"), React.createElement(_components.h1, {\n    id: \"2-공통-아이콘-컴포넌트-작성\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#2-%EA%B3%B5%ED%86%B5-%EC%95%84%EC%9D%B4%EC%BD%98-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%9E%91%EC%84%B1\",\n    \"aria-label\": \"2 공통 아이콘 컴포넌트 작성 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2. 공통 아이콘 컴포넌트 작성\"), React.createElement(_components.p, null, \"이제 SVG 파일을 웹에서처럼 읽어들여 사용할 수 있다. 하지만 SVG 파일을 일일이 따로따로 \", React.createElement(_components.code, null, \"import\"), \" 해줘야 하므로 사용하기 번거롭고, 아이콘들의 공통 props 혹은 속성을 관리하기도 힘들다.\"), React.createElement(_components.p, null, \"그러한 불편함을 해결하기 위해 별도의 컴포넌트를 하나 구현할 것이다. 해당 컴포넌트는 아이콘 이름만으로 아이콘을 사용할 수 있게 해줄 것이며 공통적으로 쓰일 props 들도 관리할 것이다.\"), React.createElement(_components.h3, {\n    id: \"21-svg-파일들-re-export\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#21-svg-%ED%8C%8C%EC%9D%BC%EB%93%A4-re-export\",\n    \"aria-label\": \"21 svg 파일들 re export permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.1. SVG 파일들 re-export\"), React.createElement(_components.p, null, \"일단 컴포넌트를 작성하기 전에, 모든 SVG 파일은 직접 \", React.createElement(_components.code, null, \"import\"), \" 해서 쓰는 게 아니라 인덱스 파일을 따로 만들어 한 곳에서 관리하도록 하자.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ts\\\"><pre class=\\\"language-ts\\\"><code class=\\\"language-ts\\\"><span class=\\\"token comment\\\">// src/res/index.ts</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">as</span> Calendar <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./calendar.svg\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">as</span> Clock <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./clock.svg\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">as</span> Sandwatch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./sandwatch.svg\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">default</span> <span class=\\\"token keyword\\\">as</span> Watch <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./watch.svg\\\"</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.p, null, \"이제 다른 파일에서는 아래와 같은 형식으로 import 가 가능하다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> Calendar <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../res\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Calendar</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// 혹은</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> icons <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../res\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">const</span> Comp <span class=\\\"token operator\\\">=</span> icons<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"Calendar\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Comp</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.h3, {\n    id: \"22-svgicon--구현\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#22-svgicon--%EA%B5%AC%ED%98%84\",\n    \"aria-label\": \"22 svgicon  구현 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"2.2. \", React.createElement(_components.code, null, \"<SvgIcon />\"), \" 구현\"), React.createElement(_components.p, null, \"하나의 파일에 묶이게 된 SVG 파일들을 읽어와 사용하는 컴포넌트 \", React.createElement(_components.code, null, \"<SvgIcon />\"), \" 은 아래처럼 구현할 수 있다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">// src/components/SvgIcon.tsx</span>\\n<span class=\\\"token keyword\\\">import</span> React <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> SvgProps <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"react-native-svg\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">as</span> Icons <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"../res\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">type</span> <span class=\\\"token class-name\\\">IconProps</span> <span class=\\\"token operator\\\">=</span> SvgProps <span class=\\\"token operator\\\">&amp;</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// res 에서 re-export 되는 SVG 파일들의 이름을 name 으로 받을 수 있다.</span>\\n  name<span class=\\\"token operator\\\">:</span> <span class=\\\"token keyword\\\">keyof</span> <span class=\\\"token keyword\\\">typeof</span> Icons<span class=\\\"token punctuation\\\">;</span>\\n  size<span class=\\\"token operator\\\">?</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token builtin\\\">number</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">Icon</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n  name<span class=\\\"token punctuation\\\">,</span>\\n  fill <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"black\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  width<span class=\\\"token operator\\\">:</span> _width<span class=\\\"token punctuation\\\">,</span>\\n  height<span class=\\\"token operator\\\">:</span> _height<span class=\\\"token punctuation\\\">,</span>\\n  size<span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token operator\\\">...</span>props\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token operator\\\">:</span> IconProps<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> Comp <span class=\\\"token operator\\\">=</span> Icons<span class=\\\"token punctuation\\\">[</span>name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token comment\\\">// `width`, `height` 를 따로 지정할 수 있지만</span>\\n  <span class=\\\"token comment\\\">// 아이콘은 보통 가로 세로 값이 같은 정사각형 형식이기 때문에</span>\\n  <span class=\\\"token comment\\\">// 여기서는 `size` 를 사용해 너비와 높이를 같이 지정할 수 있게 해주었다.</span>\\n  <span class=\\\"token keyword\\\">const</span> width <span class=\\\"token operator\\\">=</span> _width <span class=\\\"token operator\\\">??</span> size<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> height <span class=\\\"token operator\\\">=</span> _height <span class=\\\"token operator\\\">??</span> size<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">const</span> sizeProps <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">(</span>width <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">undefined</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">{</span> width <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token operator\\\">...</span><span class=\\\"token punctuation\\\">(</span>height <span class=\\\"token operator\\\">!==</span> <span class=\\\"token keyword\\\">undefined</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">{</span> height <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">Comp</span></span>\\n      <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>props<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token comment\\\">// 1.2.3. `.svgrrc` 의 설정 덕분에 `fill` prop 을 이렇게 사용할 수 있다.</span>\\n      <span class=\\\"token attr-name\\\">fill</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span>fill<span class=\\\"token punctuation\\\">}</span></span>\\n      <span class=\\\"token spread\\\"><span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span>sizeProps<span class=\\\"token punctuation\\\">}</span></span>\\n    <span class=\\\"token punctuation\\\">/></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">default</span> Icon<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.h1, {\n    id: \"3-결과\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#3-%EA%B2%B0%EA%B3%BC\",\n    \"aria-label\": \"3 결과 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3. 결과\"), React.createElement(_components.h2, {\n    id: \"31-사용-예\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#31-%EC%82%AC%EC%9A%A9-%EC%98%88\",\n    \"aria-label\": \"31 사용 예 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.1. 사용 예\"), React.createElement(_components.p, null, \"구현한 컴포넌트 \", React.createElement(_components.code, null, \"<SvgIcon />\"), \"을 아래처럼 사용할 수 있다.\"), React.createElement(_components.div, {\n    className: \"codeblock-container\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"tsx\\\"><pre class=\\\"language-tsx\\\"><code class=\\\"language-tsx\\\"><span class=\\\"token comment\\\">// ...</span>\\n<span class=\\\"token keyword\\\">import</span> SvgIcon <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"./components/SvgIcon\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">App</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">SafeAreaView</span></span> <span class=\\\"token attr-name\\\">style</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">{</span> flex<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">,</span> padding<span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">24</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* ... */</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">SvgIcon</span></span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Calendar<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">SvgIcon</span></span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Clock<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">fill</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>orange<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token class-name\\\">SvgIcon</span></span> <span class=\\\"token attr-name\\\">size</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token script-punctuation punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token number\\\">48</span><span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token attr-name\\\">name</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>Watch<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token attr-name\\\">fill</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>gold<span class=\\\"token punctuation\\\">\\\"</span></span> <span class=\\\"token punctuation\\\">/></span></span><span class=\\\"token plain-text\\\">\\n      </span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token comment\\\">/* ... */</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token plain-text\\\">\\n    </span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span><span class=\\\"token class-name\\\">SafeAreaView</span></span><span class=\\\"token punctuation\\\">></span></span>\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), React.createElement(_components.button, {\n    className: \"codeblock-copy-button\"\n  }, \"COPY\")), React.createElement(_components.h2, {\n    id: \"32-소스코드-전문\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#32-%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C-%EC%A0%84%EB%AC%B8\",\n    \"aria-label\": \"32 소스코드 전문 permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.div, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"3.2. 소스코드 전문\"), React.createElement(_components.p, null, \"설정 및 구현이 적용된 실제 소스코드를 참고하고 싶다면 \", React.createElement(_components.a, {\n    href: \"https://github.com/ricale/RnSvgIconExample\"\n  }, \"RnSvgIconExample\"), \" 리파지토리를 참고하자. 이 문서를 작성하면서 다시 한 번 적용 및 구현해본 리파지토리이며, 실행 또한 잘 된다.\")), \"\\n\", React.createElement(_components.div, {\n    className: \"toc\"\n  }, React.createElement(_components.p, null, \"목차\"), React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#1-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%84%B1-%EB%B0%8F-%EC%84%A4%EC%A0%95\"\n  }, \"1. 환경 구성 및 설정\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#11-react-native-svg\"\n  }, \"1.1. react-native-svg\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#12-react-native-svg-transformer\"\n  }, \"1.2. react-native-svg-transformer\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#121-metroconfigjs\"\n  }, \"1.2.1. \", React.createElement(_components.code, null, \"metro.config.js\"))), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#122-declarationdts\"\n  }, \"1.2.2. \", React.createElement(_components.code, null, \"declaration.d.ts\"))), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#123-svgrrc\"\n  }, \"1.2.3. \", React.createElement(_components.code, null, \".svgrrc\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#-svgrrc-%EC%84%A4%EC%A0%95%EC%9D%84-%EC%88%98%EC%A0%95%ED%95%B4%EB%8F%84-%EC%A0%81%EC%9A%A9%EB%90%98%EC%A7%80-%EC%95%8A%EB%8A%94%EB%8B%A4\"\n  }, \"# \", React.createElement(_components.code, null, \".svgrrc\"), \" 설정을 수정해도 적용되지 않는다?\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#2-%EA%B3%B5%ED%86%B5-%EC%95%84%EC%9D%B4%EC%BD%98-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8-%EC%9E%91%EC%84%B1\"\n  }, \"2. 공통 아이콘 컴포넌트 작성\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#21-svg-%ED%8C%8C%EC%9D%BC%EB%93%A4-re-export\"\n  }, \"2.1. SVG 파일들 re-export\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#22-svgicon--%EA%B5%AC%ED%98%84\"\n  }, \"2.2. \", React.createElement(_components.code, null, \"<SvgIcon />\"), \" 구현\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#3-%EA%B2%B0%EA%B3%BC\"\n  }, \"3. 결과\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#31-%EC%82%AC%EC%9A%A9-%EC%98%88\"\n  }, \"3.1. 사용 예\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"#32-%EC%86%8C%EC%8A%A4%EC%BD%94%EB%93%9C-%EC%A0%84%EB%AC%B8\"\n  }, \"3.2. 소스코드 전문\")), \"\\n\"), \"\\n\"), \"\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2022/220409-react-native-svg-icon-component/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nimport SameSeriesPosts from \"../../components/SameSeriesPosts\";\nimport TagList from \"../../components/TagList\";\nimport highlightCurrentHeading from \"../../utils/highlightCurrentHeading\";\nimport PostImage from \"../../components/PostImage\";\nfunction PostDetailPage(_ref) {\n  let {data, children} = _ref;\n  const ref = React.useRef();\n  const {frontmatter, sameSeriesPosts} = data.mdx;\n  const {title, slug, date, tags, series, heroImage, heroImageAlt} = frontmatter;\n  React.useEffect(() => {\n    var _ref$current;\n    const headingElements = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.querySelectorAll(\".md h1, .md h2, .md h3, .md h4, .md h5, .md h6\");\n    const observer = new IntersectionObserver(() => highlightCurrentHeading(ref, headingElements), {\n      rootMargin: \"0px 0px -90% 0px\",\n      threshold: [0, 1.0]\n    });\n    headingElements === null || headingElements === void 0 ? void 0 : headingElements.forEach(element => observer.observe(element));\n    return () => observer.disconnect();\n  }, []);\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, React.createElement(Link, {\n    to: \"/posts/\" + slug\n  }, title)), React.createElement(WrittenDate, null, date), React.createElement(TagList, {\n    tags: tags\n  })), React.createElement(SameSeriesPosts, {\n    name: series,\n    data: sameSeriesPosts,\n    current: slug\n  }), React.createElement(PostImage, {\n    data: heroImage,\n    alt: heroImageAlt\n  }), React.createElement(PostContent, {\n    ref: ref\n  }, children), React.createElement(Comments, null));\n}\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n\\n    > a {\\n      color: \", \";\\n    }\\n  }\\n\"])), p => p.theme.colors.onBackground);\nconst WrittenDate = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst PostContent = styled(MdxContent)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  margin-bottom: 60px;\\n\"])));\nconst query = \"2677585968\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage, previewContent}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: previewContent !== null && previewContent !== void 0 ? previewContent : excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","div","p","h1","a","h2","button","code","h3","h4","ul","li","_provideComponents","components","React","className","id","style","position","href","dangerouslySetInnerHTML","__html","_templateObject","_templateObject2","_templateObject3","wrapper","MDXLayout","PostDetailPage","_ref","data","children","ref","frontmatter","sameSeriesPosts","mdx","title","slug","date","tags","series","heroImage","heroImageAlt","_ref$current","headingElements","current","querySelectorAll","observer","IntersectionObserver","highlightCurrentHeading","rootMargin","threshold","forEach","element","observe","disconnect","Layout","Header","Link","to","WrittenDate","TagList","SameSeriesPosts","name","PostImage","alt","PostContent","Comments","styled","_taggedTemplateLiteralLoose","theme","colors","onBackground","MdxContent","Head","_ref2","_image$images","_image$images$fallbac","previewContent","excerpt","image","getImage","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}