{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2022-220823-read-writings-index-mdx-7ae7ccfc43f843b584c0.js","mappings":"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","sources":["webpack://ricalelog/./posts/2022/220823-read-writings/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"React\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://github.com/streamich/react-use/tree/master/tests\"\n  }, \"streamich/react-use 단위 테스트 코드\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/streamich/react-use\"\n  }, \"react-use\"), \" 는 다양한 React hook 들을 모아놓은 라이브러리다. 그리고 위 링크는, 해당 라이브러리 리포지토리의 단위 테스트 코드들이다. 여러 유형에 대한 hook 테스트 코드들이 모여있다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://maxrozen.com/examples-of-large-production-grade-open-source-react-apps\"\n  }, \"Examples of large production-grade, open-source React apps\")), \"\\n\", React.createElement(_components.p, null, \"프로덕션 레벨의 React 오픈소스 프로젝트들을 모아놓은 글이다. React 로 처음 실무를 하던 그 시절에 정말 보고 싶었던 글인데, 이제서야 만나게 되었다. 여러가지 흥미로운 프로젝트들이 많다. 개인적으로 가장 눈에 띄는 것은 아래 세 개 정도이다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/cypress-io/cypress-realworld-app\"\n  }, \"Real World App by Cypress\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/bbc/simorgh\"\n  }, \"Simorgh by the BBC\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/getsentry/sentry\"\n  }, \"Sentry by Sentry\")), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://tkdodo.eu/blog/avoiding-use-effect-with-callback-refs\"\n  }, \"Avoiding useEffect with callback refs\")), \"\\n\", React.createElement(_components.p, null, \"아래처럼 컴포넌트 초기화 시 렌더링되지 않는 DOM 에 대해 ref 로 접근하고자 하는 경우, 의도한 대로 동작하지 않을 수 있다.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"const ref = useRef(null);\\n\\nuseEffect(() => {\\n  ref.current?.focus();\\n}, []);\\n\\nreturn <div>{someConditionIsTrue && <input ref={ref} />}</div>;\\n\")), \"\\n\", React.createElement(_components.p, null, \"그러면 이 상황에서는 input 이 렌더링 되었을 때 ref 를 바로 사용할 수 있는 이상적인 방법은 무엇일까? 에 대한 글이다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://velog.io/@surim014/react-rerender\"\n  }, \"(번역) React는 컴포넌트를 언제 다시 리렌더링 할까요?\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"자신 혹은 부모의 상태가 업데이트 될 때 컴포넌트는 리렌더링 된다.\"), \"\\n\", React.createElement(_components.li, null, \"리렌더링을 줄이기 위해서는\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"상태값을 취급하는 곳을 상위 컴포넌트에서 하위 컴포넌트로 옮기는 방법과\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"React.memo\"), \" 를 사용하는 방법이 있다.\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"라는, 이제는 다소 뻔한 내용의 글.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://felixgerschau.com/react-performance-react-memo/\"\n  }, \"How to use React.memo() to improve performance\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"React.memo\"), \" 를 언제 어떻게 쓰는지에 대한 글. 다른 건 다 기본적인 내용이라 건너뛰고 글 후반에 나오는 \\\"Why not use React.memo by default?\\\" 부분만 읽어도 충분하겠다. \", React.createElement(_components.code, null, \"React.memo\"), \" 를 항상 쓰지 않는 이유는\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"React.memo\"), \" 의 최적화 방식은 캐싱이기 때문에 메모리 낭비가 발생할 수 있고\"), \"\\n\", React.createElement(_components.li, null, \"대상 컴포넌트의 prop 이 자주 바뀔 경우 최적화하는 비용이 비싸지기 때문이다.\"), \"\\n\", React.createElement(_components.li, null, \"또한 이미 React 가 기본적인 성능 최적화를 잘 해주고 있으므로, 성능 이슈가 없는 상황에서 굳이 먼저 \", React.createElement(_components.code, null, \"React.memo\"), \" 를 쓸 필요가 없다.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"CSS\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://kilianvalkhof.com/2022/css-html/do-you-know-about-overflow-clip/\"\n  }, \"Do you know about overflow: clip?\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"overflow: clip;\"), \" 속성에 관한 설명.\"), \"\\n\", React.createElement(_components.h2, null, \"Etc\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://stackoverflow.com/questions/11273282/whats-the-name-for-hyphen-separated-case\"\n  }, \"What's the name for hyphen-separated case?\")), \"\\n\", React.createElement(_components.p, null, \"camelCase, ClassCase, snake_case, 그렇다면 대시로 이어진 네이밍 컨벤션의 이름은? \", React.createElement(_components.a, {\n    href: \"https://www.theserverside.com/definition/Kebab-case\"\n  }, \"Kebab case\"), \" 라고 한다. 몰랐다. 왜 몰랐을까...?\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://junghan92.medium.com/%EB%B2%88%EC%97%AD-v8-%ED%95%A8%EC%88%98-%EC%B5%9C%EC%A0%81%ED%99%94-21b274cf1a5\"\n  }, \"(번역) V8 함수 최적화\")), \"\\n\", React.createElement(_components.p, null, \"V8 엔진의 함수 최적화에 관한 설명.\"), \"\\n\", React.createElement(_components.p, null, \"V8 은 객체의 형식을 Shape 라는 형태의 캐시로 캐싱한다. 객체가 실제로 갖고 있는 값이 다르더라도 형식이 같다면 (동일한 키값을 갖는다면) 같은 Shape 캐시를 갖는다. 하지만 형태가 같더라도 어떻게 초기화하냐에 따라 Shape 캐시가 여러 개 생성될 수 있다.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"초기화할 때 \", React.createElement(_components.code, null, \"x\"), \", \", React.createElement(_components.code, null, \"y\"), \" 키 값을 모두 갖고 있었는지,\"), \"\\n\", React.createElement(_components.li, null, \"혹은 초기화 할 때는 키 값이 하나도 없었다가 \", React.createElement(_components.code, null, \"x\"), \", \", React.createElement(_components.code, null, \"y\"), \" 키 값을 하나씩 하나씩 추가해준 것인지,\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"당연히 후자가 더 비효율적으로 캐싱한다.\"), \"\\n\", React.createElement(_components.p, null, \"V8 은 함수 또한 캐싱하는데, 같은 함수라 할 지라도 호출 당시 인자의 Shape 에 따라 캐싱이 갈린다. 즉, 같은 Shape 의 인자를 계속 쓰면 캐싱된 함수를 사용하기 때문에 성능에 유리하다.\"), \"\\n\", React.createElement(_components.p, null, \"라는 내용의 글이다. 보다 상세한 설명은 원글을 참고하자.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2022/220823-read-writings/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject, _templateObject2, _templateObject3;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nimport Comments from \"../../components/Comments\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {title, date, tags, heroImage, heroImageAlt} = data.mdx.frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(Header, null, React.createElement(\"h1\", null, title), React.createElement(WrittenDate, null, date), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag))))), !!image && React.createElement(GatsbyImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children), React.createElement(Comments, null));\n};\nconst Header = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  margin: 60px 0 72px;\\n  padding: 0 24px;\\n\\n  & > h1 {\\n    font-size: 2.5rem;\\n    word-break: keep-all;\\n    margin: 0;\\n  }\\n\"])));\nconst WrittenDate = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  margin: 16px 0;\\n\"])));\nconst Tags = styled.ul(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px\\n      \", \"px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.spacing, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"3533977744\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","a","p","ul","li","pre","code","_provideComponents","components","React","href","className","_templateObject","_templateObject2","_templateObject3","wrapper","MDXLayout","PostDetailPage","_ref","data","children","title","date","tags","heroImage","heroImageAlt","mdx","frontmatter","image","getImage","Layout","Header","WrittenDate","Tags","map","tag","key","Link","to","GatsbyImage","alt","MdxContent","Comments","styled","_taggedTemplateLiteralLoose","theme","dimens","gutter","spacing","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","slug","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}