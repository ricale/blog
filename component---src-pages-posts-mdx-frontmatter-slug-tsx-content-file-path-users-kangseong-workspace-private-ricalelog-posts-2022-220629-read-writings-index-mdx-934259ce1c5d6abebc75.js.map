{"version":3,"file":"component---src-pages-posts-mdx-frontmatter-slug-tsx-content-file-path-users-kangseong-workspace-private-ricalelog-posts-2022-220629-read-writings-index-mdx-934259ce1c5d6abebc75.js","mappings":"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","sources":["webpack://ricalelog/./posts/2022/220629-read-writings/index.mdx","webpack://ricalelog/./src/pages/posts/{mdx.frontmatter__slug}.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    h3: \"h3\",\n    a: \"a\",\n    p: \"p\",\n    code: \"code\",\n    blockquote: \"blockquote\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"JavaScript\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://2ality.com/2022/05/processing-arrays-non-destructively.html\"\n  }, \"Processing Arrays non-destructively: for-of vs. .reduce() vs. .flatMap()\")), \"\\n\", React.createElement(_components.p, null, \"제목에 나온대로 \", React.createElement(_components.code, null, \"for-of\"), \", \", React.createElement(_components.code, null, \".reduce()\"), \", \", React.createElement(_components.code, null, \".flatMap()\"), \" 이 같은 상황에서 어떻게 다르게 쓰이는지를 설명한다. 많은 예제 코드가 있으므로 이해하기는 쉬울 것이다.\"), \"\\n\", React.createElement(_components.p, null, \"숙련된 프로그래머라면, 글쎄, 굳이 정독할 필요가 있나 싶다. 초심자를 대상으로 쓴 글 같다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://zigamiklic.com/why-oh-why/\"\n  }, \"Why, Oh Why Was This Added?\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"\\\"이 이벤트 핸들러에 \", React.createElement(_components.code, null, \"event.stopPropagation()\"), \"를 왜 추가했더라?\\\"\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"라는 질문에 대한 글이다.\"), \"\\n\", React.createElement(_components.p, null, \"명확한 설명도 문맥도 없이 추가된 코드는 계속해서 남아있게 된다. 지우기 찝찝해서, 이유가 있을 거라 생각해서. 심지어는 비슷한 코드를 작성할 때는 복사해서 그대로 가져가기까지 한다. 그러한 모호함이 계속되지 않도록, 코드를 추가한 이유에 대해 주석을 달자는 내용이다.\"), \"\\n\", React.createElement(_components.p, null, \"글은 \", React.createElement(_components.code, null, \"event.stopPropagation()\"), \" 에 초점을 맞추고 있지만, 다른 비슷한 케이스가 많이 있을 것이다. 코드의 문맥 만으로 설명되지 않는 코드를 추가할 때는 주석을 달아 놓는 습관을 갖자.\"), \"\\n\", React.createElement(_components.h2, null, \"React\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://javascript.plainenglish.io/react-18-useeffect-double-call-for-apis-emergency-fix-724b7ee6a646\"\n  }, \"React 18 useEffect Double Call for APIs: Emergency Fix\")), \"\\n\", React.createElement(_components.p, null, \"React 18 의 개발 모드에서는 \", React.createElement(_components.a, {\n    href: \"https://www.techiediaries.com/react-18-useeffect/\"\n  }, React.createElement(_components.code, null, \"useEffect\"), \" 가 두 번 실행\"), \"된다. 웬만한 경우에는 큰 문제가 없지만, \", React.createElement(_components.code, null, \"useEffect\"), \" 내에서 API 콜을 할 경우 중복 요청이 된다는 문제가 생긴다. 이 현상을 어떻게 막을 것인가? 에 대한 글이다. 정리하면 네 가지 방법이 있다.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"프로덕션 모드를 사용한다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://reactjs.org/docs/strict-mode.html\"\n  }, React.createElement(_components.code, null, \"StrictMode\")), \" 를 사용하지 않는다.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://developer.mozilla.org/en-US/docs/Web/API/AbortController\"\n  }, React.createElement(_components.code, null, \"AbortController\")), \" 를 사용한다.\"), \"\\n\", React.createElement(_components.li, null, \"API 콜에 대한 캐시 기능을 사용한다. (직접 구현하든, \", React.createElement(_components.a, {\n    href: \"https://react-query.tanstack.com/\"\n  }, \"React Query\"), \" 나 \", React.createElement(_components.a, {\n    href: \"https://redux-toolkit.js.org/rtk-query/overview\"\n  }, \"RTK Query\"), \" 같은 라이브러리를 사용하든.)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"제목에 Emergency Fix 라고 나와있듯 근본적인 해결책은 아니다. 하지만 AbortController 라는 키워드도 알 수 있었고, \\\"근본적인\\\" 해결책이 없다는 걸 간접적으로 알 수 있었으니 됐다.\"), \"\\n\", React.createElement(_components.h2, null, \"Etc\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://www.anaconda.com/blog/pyscript-python-in-the-browser\"\n  }, \"New from Anaconda: Python in the Browser\")), \"\\n\", React.createElement(_components.p, null, \"파이썬을 자바스크립트처럼 HTML 에서 사용할 수 있는 프레임워크. 엔진이 브라우저에 포함되어 있기 때문에 사용자는 설치할 필요가 없다. 그저 \", React.createElement(_components.code, null, \"<py-script />\"), \" 태그를 \", React.createElement(_components.code, null, \"<script />\"), \" 태그처럼 사용하면 된다.\"), \"\\n\", React.createElement(_components.p, null, \"아직 알파 단계라고는 하지만, 이제 프론트엔드도 백엔드처럼 여러 언어로 개발할 수 있는 날이 머지 않은 것 같다. 공부할 게 많아진다는 점에서 변화는 썩 달갑지 않다. 하지만 거부할 수도 없다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://d2.naver.com/helloworld/0923884\"\n  }, \"모던 프론트엔드 프로젝트 구성 기법 - 모노레포 개념 편\")), \"\\n\", React.createElement(_components.p, null, \"\\\"모노레포\\\"는 여러 모듈/프로젝트를 하나의 소스코드 저장소에서 관리하는 것을 의미한다. 이 글에서는 \\\"모노레포\\\"의 기본 개념과, 프론트엔드 프로젝트에서는 어떻게/왜 모노레포 프로젝트를 구성하는지에 대해 설명한다.\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.a, {\n    href: \"https://github.com/features/copilot\"\n  }, \"GitHub Copilot - Your AI pair programmer\")), \"\\n\", React.createElement(_components.p, null, \"GitHub 의 서비스. 함수를 작성할 때 함수의 이름을 작성하는 것만으로 함수의 내용을 자동 완성 시켜주는 서비스. 딥러닝으로 구현된 것으로 보인다. 가격은 60일 트라이얼에 한 달 10달러 정도. 정확도가 얼마나 좋을지는 모르겠으나, 이런 서비스가 이미 유료로 운영되고 있다는 사실에 놀랐다.\"), \"\\n\", React.createElement(_components.p, null, \"지난 24일에는 Amazon 에서도 비슷한 서비스를 출시하기도 했다. \", React.createElement(_components.a, {\n    href: \"https://techcrunch.com/2022/06/23/amazon-launches-codewhisperer-its-ai-pair-programming-tool/\"\n  }, \"Amazon launches CodeWhisperer, a GitHub Copilot-like AI pair programming tool\\n\")), \"\\n\", React.createElement(_components.p, null, \"옛날에는 AI로 인해 모든 직업이 사라지더라도 프로그래머만은 남을 거라고 막연히 생각했는데, 알파고 이후에 쏟아져나오는 많은 기술과 서비스들을 보고 있노라면 프로그래머도 안전 구역이 아니라는 생각이 든다.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/kangseong/workspace/private/ricalelog/posts/2022/220629-read-writings/index.mdx\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/esm/taggedTemplateLiteralLoose\";\nvar _templateObject;\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nimport styled from \"../../themes\";\nimport MdxContent from \"../../components/MdxContent\";\nconst PostDetailPage = _ref => {\n  let {data, children} = _ref;\n  const {title, date, tags, heroImage, heroImageAlt} = data.mdx.frontmatter;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, title), React.createElement(Tags, null, tags.map(tag => React.createElement(\"li\", {\n    key: tag\n  }, React.createElement(Link, {\n    to: \"/tags/\" + tag\n  }, tag)))), React.createElement(\"div\", null, date), !!image && React.createElement(GatsbyImage, {\n    image: image,\n    alt: heroImageAlt !== null && heroImageAlt !== void 0 ? heroImageAlt : \"\"\n  }), React.createElement(MdxContent, null, children));\n};\nconst Tags = styled.ul(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n  gap: \", \"px;\\n\\n  margin: 0;\\n  padding: 0;\\n  list-style: none;\\n\\n  > li {\\n    padding: \", \"px \", \"px\\n      0px;\\n    border-radius: 2px;\\n\\n    background-color: \", \";\\n    color: \", \";\\n\\n    > a {\\n      text-decoration: none;\\n    }\\n  }\\n\"])), p => p.theme.dimens.gutter, p => p.theme.dimens.thin, p => p.theme.dimens.gutter, p => p.theme.colors.tag, p => p.theme.colors.onTag);\nconst query = \"3533977744\";\nexport const Head = _ref2 => {\n  var _image$images, _image$images$fallbac;\n  let {data} = _ref2;\n  const {frontmatter: {title, slug, tags, heroImage}, excerpt} = data.mdx;\n  const image = heroImage ? getImage(heroImage) : null;\n  return React.createElement(Seo, {\n    title: title,\n    description: excerpt,\n    path: \"posts/\" + slug,\n    thumbnail: image === null || image === void 0 ? void 0 : (_image$images = image.images) === null || _image$images === void 0 ? void 0 : (_image$images$fallbac = _image$images.fallback) === null || _image$images$fallbac === void 0 ? void 0 : _image$images$fallbac.src,\n    keywords: tags,\n    ogType: \"article\"\n  });\n};\nPostDetailPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostDetailPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","h3","a","p","code","blockquote","ol","li","_provideComponents","components","React","href","_templateObject","wrapper","MDXLayout","PostDetailPage","_ref","data","children","title","date","tags","heroImage","heroImageAlt","mdx","frontmatter","image","getImage","Layout","Tags","map","tag","key","Link","to","GatsbyImage","alt","MdxContent","styled","_taggedTemplateLiteralLoose","theme","dimens","gutter","thin","colors","onTag","Head","_ref2","_image$images","_image$images$fallbac","slug","excerpt","Seo","description","path","thumbnail","images","fallback","src","keywords","ogType","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}